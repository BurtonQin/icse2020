{"def_path":"[DisambiguatedDefPathData { data: Module(\"dsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"constant_power\"), disambiguator: 0 }]","has_unsafe":true,"name":"dsp::pan::constant_power"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_count_to_ms\"), disambiguator: 0 }]","has_unsafe":false,"name":"dsp::time::sample_count_to_ms"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_count_to_seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"dsp::time::sample_count_to_seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<envelope::Envelope as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interpolate\"), disambiguator: 0 }]","has_unsafe":false,"name":"envelope::Envelope::interpolate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interpolate_at_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"envelope::Envelope::interpolate_at_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<envelope::Envelope as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"envelope::EnvelopeBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"envelope::EnvelopeBuilder::add_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"envelope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"envelope::EnvelopeBuilder::finalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"note\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<note::NoteData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"note\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<note::NoteData as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"note\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","has_unsafe":false,"name":"note::NoteData::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"note\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<note::NoteState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"note\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<note::NoteState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"note\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"state_and_channel\"), disambiguator: 0 }]","has_unsafe":false,"name":"note::NoteState::state_and_channel"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<synth::Synth<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<synth::Synth<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"voices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<synth::Synth<T>>::voices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sample_rate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<synth::Synth<T>>::sample_rate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"steal_mode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<synth::Synth<T>>::steal_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"finalize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<synth::Synth<T>>::finalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_pan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<synth::Synth<T>>::set_pan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<synth::Synth<T>>::render_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"process_events\"), disambiguator: 0 }]","has_unsafe":true,"name":"<synth::Synth<T>>::process_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"process_midi\"), disambiguator: 0 }]","has_unsafe":true,"name":"<synth::Synth<T>>::process_midi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"trigger_note_on\"), disambiguator: 0 }]","has_unsafe":true,"name":"<synth::Synth<T>>::trigger_note_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"synth\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"trigger_note_off\"), disambiguator: 0 }]","has_unsafe":false,"name":"<synth::Synth<T>>::trigger_note_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<voice::Voice<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<voice::Voice<T>>::render_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::EnvelopeContainer as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::EnvelopeContainer as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_sound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::VoiceBuilder<T>>::new_with_sound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sample_rate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::VoiceBuilder<T>>::sample_rate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"amplitude_envelope\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::VoiceBuilder<T>>::amplitude_envelope"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"envelopes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::VoiceBuilder<T>>::envelopes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::VoiceBuilder<T>>::finalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<voice::VoiceState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"voice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<voice::VoiceState as std::clone::Clone>::clone"}
