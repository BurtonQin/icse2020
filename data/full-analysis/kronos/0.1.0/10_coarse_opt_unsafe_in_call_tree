{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Grain as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Grain as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Grain as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Grain as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Grain as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Grain as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Grain as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Season as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Season as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Season as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Season as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Season as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Range as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Range as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Range as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Range as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Range::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Range::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeSequence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"future\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::TimeSequence::future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeSequence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"past\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::TimeSequence::past"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enclosing_grain_from_duration\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::enclosing_grain_from_duration"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"grain_from_duration\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::grain_from_duration"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"truncate\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_dow\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::find_dow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_month\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::find_month"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_season\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::find_season"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_weekend\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::find_weekend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shift_datetime\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::shift_datetime"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dtshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"days_in_month\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::dtshift::days_in_month"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dtshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::dtshift::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dtshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::dtshift::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Weekday as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_named::Weekday::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Weekday as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Weekday as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Month as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_named::Month::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Month as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Month as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_named::Weekend as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":true,"name":"seq_named::Weekend::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":true,"name":"<seq_named::Weekend as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":true,"name":"<seq_named::Weekend as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_grain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_grain::Grains as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_grain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_grain::Grains::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_grain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_grain::Grains as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_grain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_grain::Grains as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_nthof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_nthof::NthOf<Frame, Win> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_nthof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_nthof::NthOf<Frame, Win>>::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_nthof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_nthof::NthOf<Frame, Win> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_nthof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_nthof::NthOf<Frame, Win> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_lastof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_lastof::LastOf<Frame, Win> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_lastof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_lastof::LastOf<Frame, Win>>::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_lastof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_lastof::LastOf<Frame, Win> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_lastof\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_lastof::LastOf<Frame, Win> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_union\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_union::Union<SeqA, SeqB> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_union\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_union::Union<SeqA, SeqB>>::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_union\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_union::Union<SeqA, SeqB> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_union\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_union::Union<SeqA, SeqB> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_intersect::Intersect<SeqA, SeqB> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_intersect::Intersect<SeqA, SeqB>>::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_intersect::Intersect<SeqA, SeqB> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_intersect::Intersect<SeqA, SeqB> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_except\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_except::Except<SeqA, SeqB> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_except\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_except::Except<SeqA, SeqB>>::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_except\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_except::Except<SeqA, SeqB> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_except\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_except::Except<SeqA, SeqB> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_interval::Interval<SeqA, SeqB> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_interval::Interval<SeqA, SeqB>>::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_interval::Interval<SeqA, SeqB> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_interval::Interval<SeqA, SeqB> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_seasons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_seasons::Seasons as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_seasons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_seasons::Seasons::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_seasons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_seasons::Seasons as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_seasons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_seasons::Seasons as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_mgrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_mgrain::MGrain as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_mgrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_mgrain::MGrain::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_mgrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new2\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_mgrain::MGrain::new2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_mgrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_mgrain::MGrain::_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_mgrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_mgrain::MGrain as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_mgrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_mgrain::MGrain as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_func\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_func::Map<Seq> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_func\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_future_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_func::Map<Seq> as types::TimeSequence<'a>>::_future_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_func\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_past_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<seq_func::Map<Seq> as types::TimeSequence<'a>>::_past_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"seq_func\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","has_unsafe":false,"name":"seq_func::shift"}
