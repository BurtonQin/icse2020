{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as list::Stack<T>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as list::Stack<T>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as list::Stack<T>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as list::Stack<T>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<list::List<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<list::List<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<list::List<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<list::List<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"prepend\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::prepend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"append_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::append_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<list::List<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::ListIterator<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::ListIterator<'a, T> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::ops::Index<u64>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::ops::Index<i64>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<T> as std::ops::Index<isize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::SVMCell as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::SVMCell as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::SVMCell as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::SVMCell as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::SVMCell as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Atom as std::ops::Rem>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Inst as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cell::Inst as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Inst as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode_program\"), disambiguator: 0 }]","has_unsafe":true,"name":"bytecode::decode_program"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode_inst\"), disambiguator: 0 }]","has_unsafe":true,"name":"bytecode::decode_inst"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_ident_bytes\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bytecode::Decoder<'a, R>>::check_ident_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_version\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bytecode::Decoder<'a, R>>::check_version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bytecode::Decoder<'a, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bytecode::Decoder<'a, R>>::num_read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode_const\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bytecode::Decoder<'a, R>>::decode_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode_cons\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bytecode::Decoder<'a, R>>::decode_cons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_cell\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bytecode::Decoder<'a, R>>::next_cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bytecode::Decoder<'a, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bytecode::Decoder<'a, R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::SVMCell as bytecode::Encode>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cell::Atom as bytecode::Encode>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bytecode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","has_unsafe":true,"name":"<list::List<T> as bytecode::Encode>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_contains_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::chain_contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fork\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::fork"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keys\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V>>::keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V> as std::ops::Index<&'b Q>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, K, V> as std::ops::IndexMut<&'b Q>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, &'a str, (u64, u64)> as compiler_tools::Scope<&'a str>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forktable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"lookup\"), disambiguator: 0 }]","has_unsafe":false,"name":"<compiler_tools::forktable::ForkTable<'a, &'a str, (u64, u64)> as compiler_tools::Scope<&'a str>>::lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ASTNode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prettyprint\"), disambiguator: 0 }]","has_unsafe":true,"name":"compiler_tools::ast::ASTNode::prettyprint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compiler_tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(dyn compiler_tools::ast::ASTNode + 'static) as std::fmt::Debug>::fmt"}
