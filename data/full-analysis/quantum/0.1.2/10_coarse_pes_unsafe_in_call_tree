{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"complex::Complex::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_euler\"), disambiguator: 0 }]","has_unsafe":false,"name":"complex::Complex::new_euler"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"norm_sqr\"), disambiguator: 0 }]","has_unsafe":false,"name":"complex::Complex::norm_sqr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"complex::Complex::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"complex::Complex::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"i\"), disambiguator: 0 }]","has_unsafe":false,"name":"complex::Complex::i"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<complex::Complex as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<computer::State as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<computer::State as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<computer::State as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<computer::QuantumComputer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"computer::QuantumComputer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"computer::QuantumComputer::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":true,"name":"computer::QuantumComputer::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"collapse\"), disambiguator: 0 }]","has_unsafe":true,"name":"computer::QuantumComputer::collapse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":false,"name":"computer::QuantumComputer::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"computer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":true,"name":"computer::QuantumComputer::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gate::Gate as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"gate::Gate::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"gate::Gate::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matrix\"), disambiguator: 0 }]","has_unsafe":false,"name":"gate::Gate::matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hadamard\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::hadamard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pauli_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::pauli_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pauli_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::pauli_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pauli_z\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::pauli_z"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"phase_shift\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::phase_shift"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gates\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"swap\"), disambiguator: 0 }]","has_unsafe":false,"name":"gates::swap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ket::Ket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ket::Ket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ket::Ket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ket::Ket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"ket::Ket::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_classical\"), disambiguator: 0 }]","has_unsafe":false,"name":"ket::Ket::from_classical"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":true,"name":"ket::Ket::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_classical\"), disambiguator: 0 }]","has_unsafe":true,"name":"ket::Ket::is_classical"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"ket::Ket::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"ket::Ket::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"matrix::Matrix::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_elements\"), disambiguator: 0 }]","has_unsafe":false,"name":"matrix::Matrix::new_from_elements"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"matrix::Matrix::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"matrix::Matrix::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"matrix::Matrix::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"matrix::Matrix::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a matrix::Matrix as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a matrix::Matrix as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a matrix::Matrix as std::ops::Mul<&'a [complex::Complex; _]>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"other\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qubit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<other::qubit::NonEntangledQubit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"other\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qubit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<other::qubit::NonEntangledQubit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"other\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qubit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"other::qubit::NonEntangledQubit::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"other\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qubit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"validate\"), disambiguator: 0 }]","has_unsafe":true,"name":"other::qubit::NonEntangledQubit::validate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<registers::QuantumRegister as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::QuantumRegister::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::QuantumRegister::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"collapse\"), disambiguator: 0 }]","has_unsafe":true,"name":"registers::QuantumRegister::collapse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<registers::ClassicalRegister as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<registers::ClassicalRegister as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<registers::ClassicalRegister as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<registers::ClassicalRegister as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::from_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::from_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zeroed\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::zeroed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"state\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"registers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"registers::ClassicalRegister::to_int"}
