{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::Flattened::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<flatten_cubic::Flattened as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatten_cubic_bezier\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::flatten_cubic_bezier"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatten_including_inflection\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::flatten_including_inflection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatten_cubic_no_inflection\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::flatten_cubic_no_inflection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"no_inflection_flattening_step\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::no_inflection_flattening_step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_cubic_bezier_inflection_points\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::find_cubic_bezier_inflection_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_cubic_bezier_inflection_points\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"in_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"flatten_cubic::find_cubic_bezier_inflection_points::in_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"flatten_cubic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inflection_approximation_range\"), disambiguator: 0 }]","has_unsafe":true,"name":"flatten_cubic::inflection_approximation_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_to_quadratic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cubic_to_quadratic\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_to_quadratic::cubic_to_quadratic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_to_quadratic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mid_point_approximation\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_to_quadratic::mid_point_approximation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_to_quadratic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"single_curve_approximation\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_to_quadratic::single_curve_approximation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::QuadraticBezierSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::QuadraticBezierSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::sample_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::sample_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"derivative_coefficients\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::derivative_coefficients"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_derivative\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::sample_derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_x_derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::sample_x_derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_y_derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::sample_y_derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flip\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::flip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_y_maximum\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::find_y_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_y_minimum\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::find_y_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_local_y_extremum\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::find_local_y_extremum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_x_maximum\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::find_x_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_x_minimum\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::find_x_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_local_x_extremum\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::find_local_x_extremum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"before_split\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::before_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"after_split\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::after_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_cubic\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::to_cubic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flattening_step\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::flattening_step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flattened_for_each\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::flattened_for_each"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flattened\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::flattened"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compute_length\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::compute_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_triangle\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::bounding_triangle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minimum_bounding_rect\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::minimum_bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assume_x_montone\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::assume_x_montone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assume_y_montone\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::QuadraticBezierSegment::assume_y_montone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_intersections\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::line_intersections"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_segment_intersections\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::QuadraticBezierSegment::line_segment_intersections"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::XMonotoneQuadraticBezierSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::XMonotoneQuadraticBezierSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"curve\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::XMonotoneQuadraticBezierSegment::curve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"solve_y_for_x\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::XMonotoneQuadraticBezierSegment::solve_y_for_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"solve_t_for_x\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::XMonotoneQuadraticBezierSegment::solve_t_for_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::XMonotoneQuadraticBezierSegment as monotone::XMonotoneParametricCurve>::x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dx\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::XMonotoneQuadraticBezierSegment as monotone::XMonotoneParametricCurve>::dx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::YMonotoneQuadraticBezierSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<quadratic_bezier::YMonotoneQuadraticBezierSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"curve\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::YMonotoneQuadraticBezierSegment::curve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"solve_x_for_y\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::YMonotoneQuadraticBezierSegment::solve_x_for_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"solve_t_for_y\"), disambiguator: 0 }]","has_unsafe":true,"name":"quadratic_bezier::YMonotoneQuadraticBezierSegment::solve_t_for_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yx\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::yx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"quadratic_bezier::Flattened::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quadratic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<quadratic_bezier::Flattened as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::CubicBezierSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::CubicBezierSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::sample_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::sample_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"derivative_coefficients\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::derivative_coefficients"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_derivative\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::sample_derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_x_derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::sample_x_derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_y_derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::sample_y_derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"before_split\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::before_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"after_split\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::after_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flattened\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::flattened"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flattened_for_each\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::flattened_for_each"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compute_length\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::compute_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_inflection_points\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_inflection_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_local_x_extrema\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_local_x_extrema"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_local_x_extrema\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"in_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::find_local_x_extrema::in_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_local_y_extrema\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_local_y_extrema"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_y_maximum\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_y_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_y_minimum\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_y_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_x_maximum\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_x_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_x_minimum\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::find_x_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minimum_bounding_rect\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::minimum_bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assume_x_montone\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::assume_x_montone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assume_y_montone\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::CubicBezierSegment::assume_y_montone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_intersections\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::line_intersections"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_segment_intersections\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::CubicBezierSegment::line_segment_intersections"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::XMonotoneCubicBezierSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::XMonotoneCubicBezierSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"curve\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::XMonotoneCubicBezierSegment::curve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"solve_y_for_x\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::XMonotoneCubicBezierSegment::solve_y_for_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"solve_t_for_x\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::XMonotoneCubicBezierSegment::solve_t_for_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::XMonotoneCubicBezierSegment as monotone::XMonotoneParametricCurve>::x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dx\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::XMonotoneCubicBezierSegment as monotone::XMonotoneParametricCurve>::dx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::YMonotoneCubicBezierSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cubic_bezier::YMonotoneCubicBezierSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"curve\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::YMonotoneCubicBezierSegment::curve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"solve_x_for_y\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::YMonotoneCubicBezierSegment::solve_x_for_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"solve_t_for_y\"), disambiguator: 0 }]","has_unsafe":true,"name":"cubic_bezier::YMonotoneCubicBezierSegment::solve_t_for_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cubic_bezier\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yx\"), disambiguator: 0 }]","has_unsafe":false,"name":"cubic_bezier::yx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<triangle::Triangle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains_point\"), disambiguator: 0 }]","has_unsafe":true,"name":"triangle::Triangle::contains_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ab\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::ab"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ba\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::ba"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bc\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::bc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cb\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::cb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ca\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::ca"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ac\"), disambiguator: 0 }]","has_unsafe":false,"name":"triangle::Triangle::ac"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":true,"name":"triangle::Triangle::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","has_unsafe":true,"name":"triangle::Triangle::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersects_line_segment\"), disambiguator: 0 }]","has_unsafe":true,"name":"triangle::Triangle::intersects_line_segment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::LineSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::LineSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<line::LineSegment as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::LineSegment as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"line::LineSegment::sample_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"line::LineSegment::sample_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flip\"), disambiguator: 0 }]","has_unsafe":false,"name":"line::LineSegment::flip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"before_split\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::before_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"after_split\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::after_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"line::LineSegment::bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_vector\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::to_vector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_line\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::to_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vec2_f64\"), disambiguator: 0 }]","has_unsafe":false,"name":"line::LineSegment::intersection::vec2_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::LineSegment::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","has_unsafe":true,"name":"line::Line::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_svg_arc\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::Arc::from_svg_arc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_quadratic_beziers\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::Arc::to_quadratic_beziers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::Arc::sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tangent_at_angle\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::Arc::tangent_at_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_quadratic_beziers\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::SvgArc::to_quadratic_beziers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arc::ArcFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arc::ArcFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arc::ArcFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arc::ArcFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arc::ArcFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arc_to_to_quadratic_beziers\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::arc_to_to_quadratic_beziers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_ellipse\"), disambiguator: 0 }]","has_unsafe":true,"name":"arc::sample_ellipse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"monotone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"solve_t_for_x\"), disambiguator: 0 }]","has_unsafe":true,"name":"monotone::solve_t_for_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tangent\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::tangent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_tangent\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::normalized_tangent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"directed_angle\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::directed_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"directed_angle2\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::directed_angle2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fast_atan2\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::fast_atan2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cubic_polynomial_roots\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::cubic_polynomial_roots"}
