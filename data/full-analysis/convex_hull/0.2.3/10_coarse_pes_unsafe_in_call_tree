{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bufferset::Vert as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"build_bindings\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bufferset::Vert as glium::Vertex>::build_bindings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"build_bindings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attr_type_of_val\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bufferset::Vert as glium::Vertex>::build_bindings::attr_type_of_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"build_bindings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attr_type_of_val\"), disambiguator: 1 }]","has_unsafe":true,"name":"<bufferset::Vert as glium::Vertex>::build_bindings::attr_type_of_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"bufferset::Vert::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pos_only\"), disambiguator: 0 }]","has_unsafe":false,"name":"bufferset::Vert::pos_only"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"bufferset::BufferSet::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_mesh\"), disambiguator: 0 }]","has_unsafe":true,"name":"bufferset::BufferSet::from_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_half_edge_mesh_flat_faces\"), disambiguator: 0 }]","has_unsafe":true,"name":"bufferset::BufferSet::from_half_edge_mesh_flat_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bufferset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_half_edge_mesh_shared_verts\"), disambiguator: 0 }]","has_unsafe":true,"name":"bufferset::BufferSet::from_half_edge_mesh_shared_verts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::Mesh::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_half_edge_mesh\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::Mesh::from_half_edge_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_vert\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::Mesh::add_vert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_norm\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::Mesh::add_norm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_tri\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::Mesh::add_tri"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_triangle\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::Mesh::add_triangle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::get_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_verts_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::get_verts_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_mesh_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::split_mesh_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"construct_normals\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::construct_normals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tetrahedron_points\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::get_tetrahedron_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tetrahedron\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::get_tetrahedron"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_cube_points\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::get_cube_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_cube\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::get_cube"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_octahedron_points\"), disambiguator: 0 }]","has_unsafe":false,"name":"mesh::get_octahedron_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_to_pt_dist_sq\"), disambiguator: 0 }]","has_unsafe":true,"name":"convex_hull::line_to_pt_dist_sq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"triangle_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"convex_hull::triangle_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"triangle_center\"), disambiguator: 0 }]","has_unsafe":true,"name":"convex_hull::triangle_center"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<convex_hull::Pair as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<convex_hull::Pair as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"convex_hull::Pair::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"update_min_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"convex_hull::update_min_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"construct_tetrahedron_order\"), disambiguator: 0 }]","has_unsafe":true,"name":"convex_hull::construct_tetrahedron_order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_extreme_points\"), disambiguator: 0 }]","has_unsafe":true,"name":"convex_hull::get_extreme_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convex_hull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_convex_hull\"), disambiguator: 0 }]","has_unsafe":true,"name":"convex_hull::get_convex_hull"}
