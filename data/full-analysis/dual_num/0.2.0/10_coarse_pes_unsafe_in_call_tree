{"def_path":"[DisambiguatedDefPathData { data: Module(\"differentials\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"differentiate\"), disambiguator: 0 }]","has_unsafe":true,"name":"differentials::differentiate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"differentials\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partials_t\"), disambiguator: 0 }]","has_unsafe":true,"name":"differentials::partials_t"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"differentials\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partials\"), disambiguator: 0 }]","has_unsafe":true,"name":"differentials::partials"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"linalg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"norm\"), disambiguator: 0 }]","has_unsafe":true,"name":"linalg::norm"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_real\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::from_real"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"real\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::real"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dual\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::dual"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_tuple\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::into_tuple"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"real_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::real_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dual_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::dual_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"real_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::real_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dual_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::dual_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dual<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dual<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"conjugate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T>>::conjugate"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialEq<T>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd<T>>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd<T>>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::cmp::PartialOrd<T>>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_isize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_isize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_i8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_i8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_i16\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_i16"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_i32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_u8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_u8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_u16\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_u16"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_u64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::ToPrimitive>::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_isize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_isize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_i8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_i8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_i16\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_i16"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_i32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_usize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_u8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_u8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_u16\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_u16"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_u32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FromPrimitive>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Add<T>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::AddAssign<T>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Sub<T>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::SubAssign<T>>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Mul<T>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::MulAssign<T>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Div<T>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::DivAssign<T>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::MulAssign>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAdd>::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAddAssign>::mul_add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAdd<T>>::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAddAssign<T>>::mul_add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAdd<Dual<T>, T>>::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAddAssign<Dual<T>, T>>::mul_add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAdd<T, T>>::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::MulAddAssign<T, T>>::mul_add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as std::ops::DivAssign>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dual<T> as std::ops::Rem>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Pow<P>>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"inv\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Inv>::inv"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Signed>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"abs_sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Signed>::abs_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"signum\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Signed>::signum"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"is_positive\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Signed>::is_positive"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"is_negative\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Signed>::is_negative"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Zero>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Zero>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::One>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"is_one\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::One>::is_one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from_str_radix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Num>::from_str_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::NumCast>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"E\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::E"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_1_PI\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_1_PI"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_1_SQRT_2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_1_SQRT_2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_2_PI\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_2_PI"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_2_SQRT_PI\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_2_SQRT_PI"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_PI_2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_PI_2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_PI_3\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_PI_3"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_PI_4\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_PI_4"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_PI_6\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_PI_6"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"FRAC_PI_8\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::FRAC_PI_8"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"LN_10\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::LN_10"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"LN_2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::LN_2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"LOG10_E\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::LOG10_E"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"LOG2_E\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::LOG2_E"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"PI\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::PI"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"SQRT_2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::FloatConst>::SQRT_2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"nan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::nan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"infinity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::infinity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"neg_infinity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::neg_infinity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"neg_zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::neg_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"min_positive_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::min_positive_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"epsilon\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"min_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::min_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"max_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::max_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"is_nan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::is_nan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"is_infinite\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::is_infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"is_finite\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::is_finite"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"is_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::is_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_positive\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::is_sign_positive"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_negative\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::is_sign_negative"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"classify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::classify"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ceil\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::round"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"trunc\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fract\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::fract"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"signum\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::signum"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::min"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"abs_sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::abs_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"recip\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::recip"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"powi\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::powi"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"powf\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::powf"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"exp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::exp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"exp2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::exp2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ln\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::ln"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::log"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"log2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::log2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"log10\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::log10"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::cbrt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"hypot\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::hypot"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"atan2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::atan2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::sin_cos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"exp_m1\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::exp_m1"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ln_1p\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::ln_1p"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"sinh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::sinh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"cosh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::cosh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"tanh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::tanh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"asinh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::asinh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"acosh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::acosh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"atanh\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::atanh"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"integer_decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::integer_decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"to_degrees\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::to_degrees"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"to_radians\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Dual<T> as num_traits::Float>::to_radians"}
