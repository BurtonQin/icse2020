{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run_parser\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::run_parser"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_only\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::parse_only"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_only_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::parse_only_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_lowercase\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_lowercase"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_uppercase\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_uppercase"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_whitespace\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_horizontal_space\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_horizontal_space"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_end_of_line\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_end_of_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_digit\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_alpha\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_alpha"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_alphanumeric\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::is_alphanumeric"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_whitespace\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::skip_whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digit\"), disambiguator: 0 }]","has_unsafe":true,"name":"ascii::digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signed\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::signed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decimal\"), disambiguator: 0 }]","has_unsafe":true,"name":"ascii::decimal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ascii\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_decimal\"), disambiguator: 0 }]","has_unsafe":false,"name":"ascii::to_decimal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dummy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::fmt::Debug>::fmt::dummy::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dummy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::all::dummy::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::stateful::ParserState::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::BitOrAssign>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::BitXorAssign>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::BitAndAssign>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::iter::Extend<buffer::stateful::ParserState>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::ParserState as std::iter::FromIterator<buffer::stateful::ParserState>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::stateful::Source<buffer::data_source::ReadDataSource<R>, buffer::FixedSizeBuffer<u8>>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<buffer::data_source::ReadDataSource<R>, B>>::from_read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<buffer::data_source::IteratorDataSource<I>, B>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_buffer\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::with_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fill_requested\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::fill_requested"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fill\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::fill"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"buffer\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_autofill\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B>>::set_autofill"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fill_buf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B> as std::io::BufRead>::fill_buf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B> as std::io::BufRead>::consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::stateful::Source<S, B> as buffer::Stream<'a, 'a>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::slice::SliceStream<'i, I> as buffer::Stream<'a, 'i>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::ReadDataSource<R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::ReadDataSource<R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::ReadDataSource<R>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::ReadDataSource<R> as buffer::data_source::DataSource>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::IteratorDataSource<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::IteratorDataSource<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::IteratorDataSource<I>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"data_source\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::data_source::IteratorDataSource<I> as buffer::data_source::DataSource>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::StreamError<B, E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::StreamError<B, E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_incomplete\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I>>::is_incomplete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_consume_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_consume_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_remaining\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_consume_remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_mark\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_mark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::InputBuf<'a, I> as types::Input>::_restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::Buffer::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::FixedSizeBuffer<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_size\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::FixedSizeBuffer<I>>::with_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fill\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as buffer::Buffer<I>>::fill"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"request_space\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::FixedSizeBuffer<I> as buffer::Buffer<I>>::request_space"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as buffer::Buffer<I>>::consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as buffer::Buffer<I>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::FixedSizeBuffer<I> as buffer::Buffer<I>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"with_limit\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I>>::with_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fill\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as buffer::Buffer<I>>::fill"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"request_space\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::GrowingBuffer<I> as buffer::Buffer<I>>::request_space"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as buffer::Buffer<I>>::consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as buffer::Buffer<I>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::GrowingBuffer<I> as buffer::Buffer<I>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::Range<usize> as combinators::bounded::BoundedRange>::parse_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::Range<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::Range<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::Range<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::Range<usize> as combinators::bounded::BoundedRange>::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::Range<usize> as combinators::bounded::BoundedRange>::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::Range<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::Range<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::Range<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::parse_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFrom<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeFull as combinators::bounded::BoundedRange>::parse_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFull as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFull as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFull as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeFull as combinators::bounded::BoundedRange>::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeFull as combinators::bounded::BoundedRange>::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFull as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFull as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeFull as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::parse_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<std::ops::RangeTo<usize> as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as combinators::bounded::BoundedRange>::parse_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<usize as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<usize as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<usize as combinators::bounded::BoundedRange>::parse_many::Iter<I, T, E, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as combinators::bounded::BoundedRange>::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as combinators::bounded::BoundedRange>::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<usize as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N>>::end_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<usize as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<usize as combinators::bounded::BoundedRange>::many_till::IterTill<I, T, U, E, F, P, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::bounded::many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::bounded::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::bounded::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sep_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::bounded::sep_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"option\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"either\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::either"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::many1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sep_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::sep_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sep_by1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::sep_by1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many_till\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::many_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::skip_many1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matched_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::matched_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"look_ahead\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::look_ahead"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"any\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::any"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"satisfy\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::satisfy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"satisfy_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::satisfy_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"token\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"not_token\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::not_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"parsers::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::peek_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"parsers::take_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_while1\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::take_while1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"parsers::skip_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_till\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::take_till"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scan\"), disambiguator: 0 }]","has_unsafe":false,"name":"parsers::scan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run_scanner\"), disambiguator: 0 }]","has_unsafe":false,"name":"parsers::run_scanner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_remainder\"), disambiguator: 0 }]","has_unsafe":false,"name":"parsers::take_remainder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"string\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eof\"), disambiguator: 0 }]","has_unsafe":true,"name":"parsers::eof"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Expected<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I> as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parsers::error::Error<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"unexpected\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parsers::error::Error<I>>::unexpected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"expected\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parsers::error::Error<I>>::expected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parsers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"expected_token\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parsers::error::Error<I>>::expected_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consume_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::consume_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consume_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::consume_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consume_remaining\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::consume_remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::skip_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mark\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::mark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Primitives::restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::numbering::LineNumber::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as types::numbering::Numbering>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::LineNumber as types::numbering::Numbering>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N>>::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_consume_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_consume_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_remaining\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_consume_remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_mark\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_mark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"numbering\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::numbering::InputPosition<I, N> as types::Input>::_restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Buffer::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Buffer>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Buffer>::iterate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Buffer>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Buffer>::to_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Buffer>::into_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Buffer>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iterate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Buffer>::iterate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Buffer>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Buffer>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Buffer>::to_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Buffer>::into_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Input\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ret\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Input::ret"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Input\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"err\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Input::err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Input\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_result\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Input::from_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Input\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_skip_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::Input::_skip_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_consume_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_consume_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_remaining\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_consume_remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_mark\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_mark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"_restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [I] as types::Input>::_restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_consume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_while\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_consume_while"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_consume_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_consume_remaining\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_consume_remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_mark\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_mark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"_restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as types::Input>::_restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"then\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E>>::then"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"map_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E>>::map_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"inspect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E>>::inspect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::ParseResult<I, T, E> as primitives::IntoInner>::into_inner"}
