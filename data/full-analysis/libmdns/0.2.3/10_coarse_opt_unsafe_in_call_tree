{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::error::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Type as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Type as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Type as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Type as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Type as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::QueryType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::QueryType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::QueryType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::QueryType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::QueryType as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Class as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Class as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Class as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Class as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Class as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::QueryClass as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::QueryClass as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::QueryClass as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::QueryClass as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::QueryClass as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Opcode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Opcode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Opcode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Opcode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Opcode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::Opcode as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::ResponseCode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::ResponseCode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::ResponseCode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::ResponseCode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::ResponseCode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::enums::ResponseCode as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Opcode as std::convert::From<u16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::Opcode as std::convert::Into<u16>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::ResponseCode as std::convert::From<u8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::enums::ResponseCode as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::enums::QueryType::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::enums::QueryClass::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::enums::Type::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::enums::Class::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::structs::Packet<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::structs::Question<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::structs::ResourceRecord<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::name::Name<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::name::Name<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scan\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::name::Name::scan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::name::Name::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::name::Name::write_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::name::Name<'a> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::name::Name<'a> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"name\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::name::Name<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::parser::<impl dns_parser::structs::Packet<'a>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::parser::parse_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::header::Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::header::Header as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::header::Header as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::header::Header as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::header::Header as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_truncated\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::set_truncated"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"question_count\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::question_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"answer_count\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::answer_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nameserver_count\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::nameserver_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"additional_count\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::additional_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inc_questions\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::inc_questions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inc_answers\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::inc_answers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inc_nameservers\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::inc_nameservers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inc_additional\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::header::Header::inc_additional"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::header::Header::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rrdata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::rrdata::RRData<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rrdata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::rrdata::RRData<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rrdata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"typ\"), disambiguator: 0 }]","has_unsafe":false,"name":"dns_parser::rrdata::RRData::typ"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rrdata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::rrdata::RRData::write_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rrdata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"dns_parser::rrdata::RRData::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new_query\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<dns_parser::builder::Questions>>::new_query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new_response\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<dns_parser::builder::Questions>>::new_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"write_rr\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<T>>::write_rr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<T>>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"move_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::builder::Builder<T>>::move_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"set_max_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dns_parser::builder::Builder<T>>::set_max_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<T>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add_question\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<T>>::add_question"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add_answer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<T>>::add_answer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add_nameserver\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<T>>::add_nameserver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dns_parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add_additional\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dns_parser::builder::Builder<dns_parser::builder::Additional>>::add_additional"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"AddressFamily\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","has_unsafe":true,"name":"address_family::AddressFamily::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"socket_builder\"), disambiguator: 0 }]","has_unsafe":true,"name":"<address_family::Inet as address_family::AddressFamily>::socket_builder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"any_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet as address_family::AddressFamily>::any_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mdns_group\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet as address_family::AddressFamily>::mdns_group"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join_multicast\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet as address_family::AddressFamily>::join_multicast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"v6\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet as address_family::AddressFamily>::v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"socket_builder\"), disambiguator: 0 }]","has_unsafe":true,"name":"<address_family::Inet6 as address_family::AddressFamily>::socket_builder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"any_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet6 as address_family::AddressFamily>::any_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mdns_group\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet6 as address_family::AddressFamily>::mdns_group"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"join_multicast\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet6 as address_family::AddressFamily>::join_multicast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"v6\"), disambiguator: 0 }]","has_unsafe":false,"name":"<address_family::Inet6 as address_family::AddressFamily>::v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fsm::Command as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fsm::Command as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recv_packets\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF>>::recv_packets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_packet\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF>>::handle_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_question\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF>>::handle_question"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_ip_rr\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF>>::add_ip_rr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"send_unsolicited\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF>>::send_unsolicited"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fsm::FSM<AF> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"services::ServicesInner::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_hostname\"), disambiguator: 0 }]","has_unsafe":false,"name":"services::ServicesInner::get_hostname"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_by_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"services::ServicesInner::find_by_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_by_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"services::ServicesInner::find_by_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":false,"name":"services::ServicesInner::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unregister\"), disambiguator: 0 }]","has_unsafe":false,"name":"services::ServicesInner::unregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<services::FindByType<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<services::ServiceData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<services::ServiceData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_ptr_rr\"), disambiguator: 0 }]","has_unsafe":true,"name":"services::ServiceData::add_ptr_rr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_srv_rr\"), disambiguator: 0 }]","has_unsafe":true,"name":"services::ServiceData::add_srv_rr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"services\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_txt_rr\"), disambiguator: 0 }]","has_unsafe":true,"name":"services::ServiceData::add_txt_rr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gethostname\"), disambiguator: 0 }]","has_unsafe":true,"name":"net::gethostname"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"getifaddrs\"), disambiguator: 0 }]","has_unsafe":true,"name":"net::getifaddrs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<net::GetIfAddrs as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<net::GetIfAddrs as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"net::Interface::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"net::Interface::addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ip\"), disambiguator: 0 }]","has_unsafe":false,"name":"net::Interface::ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_loopback\"), disambiguator: 0 }]","has_unsafe":false,"name":"net::Interface::is_loopback"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"setup_core\"), disambiguator: 0 }]","has_unsafe":true,"name":"Responder::setup_core"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"Responder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","has_unsafe":true,"name":"Responder::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_handle\"), disambiguator: 0 }]","has_unsafe":true,"name":"Responder::with_handle"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":true,"name":"Responder::register"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Service as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Shutdown as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<CommandSender as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","has_unsafe":true,"name":"CommandSender::send"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"send_unsolicited\"), disambiguator: 0 }]","has_unsafe":true,"name":"CommandSender::send_unsolicited"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"send_shutdown\"), disambiguator: 0 }]","has_unsafe":true,"name":"CommandSender::send_shutdown"}
