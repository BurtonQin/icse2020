{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matching::Matching as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matching::Matching as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partner\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::partner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contract\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::contract"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"augment\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::augment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matching\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"matching::Matching::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"forest::Forest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_singletons\"), disambiguator: 0 }]","has_unsafe":false,"name":"forest::Forest::from_singletons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"depth\"), disambiguator: 0 }]","has_unsafe":false,"name":"forest::Forest::depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_path\"), disambiguator: 0 }]","has_unsafe":false,"name":"forest::Forest::find_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"forest::Forest::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":false,"name":"forest::Forest::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::vertices_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::edges_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contract\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::contract"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trees\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::trees"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::filter_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::filter_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"initial_matching\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::initial_matching"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exposed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::exposed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maximum_matching\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::maximum_matching"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"full_matching\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::full_matching"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_augmenting_path\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::find_augmenting_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lift\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation>>::lift"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation> as std::iter::FromIterator<(usize, (std::vec::Vec<usize>, std::vec::Vec<Annotation>))>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::AnnotatedGraph<Annotation> as std::iter::FromIterator<&'a (usize, (std::vec::Vec<usize>, std::vec::Vec<Annotation>))>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unweighted\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"unweighted::<impl std::iter::FromIterator<(usize, std::vec::Vec<usize>)> for graph::AnnotatedGraph<()>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unweighted\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"unweighted::<impl std::iter::FromIterator<&'a (usize, std::vec::Vec<usize>)> for graph::AnnotatedGraph<()>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"weighted\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maximin_matching\"), disambiguator: 0 }]","has_unsafe":false,"name":"weighted::<impl graph::AnnotatedGraph<f64>>::maximin_matching"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"weighted\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"limit\"), disambiguator: 0 }]","has_unsafe":false,"name":"weighted::<impl graph::AnnotatedGraph<f64>>::limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"weighted\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"weight\"), disambiguator: 0 }]","has_unsafe":false,"name":"weighted::<impl graph::AnnotatedGraph<f64>>::weight"}
