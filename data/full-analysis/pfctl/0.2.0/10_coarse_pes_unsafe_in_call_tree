{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::in_addr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::in_addr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::in6_addr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::in6_addr__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_addr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_addr__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_addr_wrap as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_addr_wrap__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_addr_wrap__bindgen_ty_1__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_addr_wrap__bindgen_ty_2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_port_range as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_port_range as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_xport as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_uid as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_uid as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_gid as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_gid as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_addr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_pooladdr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_pooladdr__bindgen_ty_1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_pooladdr__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_palist as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_palist as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_poolhashkey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_poolhashkey__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_pool as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule_ptr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule__bindgen_ty_1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule__bindgen_ty_2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rule__bindgen_ty_2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_state_xport as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::hook_desc as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::hook_desc as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::hook_desc_head as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::hook_desc_head as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfsync_state_scrub as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfsync_state_scrub as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfsync_state_host as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfsync_state_peer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfsync_state_peer as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfsync_state as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rulequeue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_rulequeue as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_ruleset as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_ruleset as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_ruleset__bindgen_ty_1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_ruleset__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_ruleset__bindgen_ty_1__bindgen_ty_1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_ruleset__bindgen_ty_1__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor_node as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor_node as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor__bindgen_ty_1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor__bindgen_ty_2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_anchor__bindgen_ty_2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_status as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pf_status as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_pooladdr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_rule as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_state_addr_kill as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_state_kill as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_states as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_states__bindgen_ty_1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_trans as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_trans as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pfvar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::pfvar::pfioc_trans_pfioc_trans_e as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open_pf\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::open_pf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_pool_address\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::add_pool_address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_pool_ticket\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::get_pool_ticket"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_ticket\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::get_ticket"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::addr_family::AddrFamily as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::addr_family::AddrFamily as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::addr_family::AddrFamily as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::addr_family::AddrFamily as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::addr_family::AddrFamily as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::addr_family::AddrFamily as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::addr_family::<impl std::convert::From<rule::addr_family::AddrFamily> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"addr_family\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::addr_family::AddrFamily as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::direction::Direction as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::direction::Direction as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::direction::Direction as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::direction::Direction as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::direction::Direction as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::direction::Direction as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"direction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::direction::<impl std::convert::From<rule::direction::Direction> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::endpoint::Endpoint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::endpoint::Endpoint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::endpoint::Endpoint as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::endpoint::Endpoint as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::endpoint::Endpoint::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ip\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::endpoint::Endpoint::ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"port\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::endpoint::Endpoint::port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_af\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::endpoint::Endpoint::get_af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<rule::ip::Ip>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<rule::port::Port>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<std::net::Ipv4Addr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<std::net::Ipv6Addr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<std::net::IpAddr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<std::net::SocketAddrV4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<std::net::SocketAddrV6>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as std::convert::From<std::net::SocketAddr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"endpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::endpoint::Endpoint as conversion::TryCopyTo<ffi::pfvar::pf_rule_addr>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::ip::Ip as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::ip::Ip as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::ip::Ip as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_af\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::ip::Ip::get_af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"any_ffi_repr\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::ip::Ip::any_ffi_repr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_pool_addr_list\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::ip::Ip::to_pool_addr_list"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::convert::From<ipnetwork::IpNetwork>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::convert::From<std::net::Ipv4Addr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::convert::From<std::net::Ipv6Addr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::ip::Ip as std::convert::From<std::net::IpAddr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::ip::Ip as conversion::CopyTo<ffi::pfvar::pf_addr_wrap>>::copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::proto::Proto as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::proto::Proto as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::proto::Proto as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::proto::Proto as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::proto::Proto as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::proto::Proto as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"proto\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::proto::<impl std::convert::From<rule::proto::Proto> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::route::Route as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::route::Route as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::route::Route as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::route::Route as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::route::Route as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::route::Route as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::route::Route as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"route_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::route::Route::route_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reply_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::route::Route::reply_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dup_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::route::Route::dup_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_pool_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::route::Route::get_pool_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::route::<impl std::convert::From<&'a rule::route::Route> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::Port as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::Port as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::Port as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as std::convert::From<u16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as conversion::TryCopyTo<ffi::pfvar::pf_port_range>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::Port as conversion::TryCopyTo<ffi::pfvar::pf_pool>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::PortUnaryModifier as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::PortUnaryModifier as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::PortUnaryModifier as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::PortUnaryModifier as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::PortUnaryModifier as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::port::<impl std::convert::From<rule::port::PortUnaryModifier> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::PortRangeModifier as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::PortRangeModifier as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::PortRangeModifier as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::port::PortRangeModifier as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::port::PortRangeModifier as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"port\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::port::<impl std::convert::From<rule::port::PortRangeModifier> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::InterfaceName as std::convert::AsRef<str>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::Interface as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::Interface as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::interface::Interface as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::interface::Interface as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::Interface as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::interface::Interface as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::interface::Interface as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::interface::Interface as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::interface::Interface as conversion::TryCopyTo<[i8]>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::state_policy::StatePolicy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::state_policy::StatePolicy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::state_policy::StatePolicy as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::state_policy::StatePolicy as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::state_policy::StatePolicy as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::state_policy::StatePolicy as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state_policy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::state_policy::<impl std::convert::From<rule::state_policy::StatePolicy> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::tcp_flags::TcpFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::tcp_flags::TcpFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlag as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::tcp_flags::<impl std::convert::From<rule::tcp_flags::TcpFlag> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlagSet as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::tcp_flags::<impl std::convert::From<&'a rule::tcp_flags::TcpFlagSet> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::tcp_flags::TcpFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::tcp_flags::TcpFlags::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp_flags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::tcp_flags::TcpFlags as std::convert::From<(CHECK, MASK)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_action::FilterRuleAction as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_action::FilterRuleAction as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::rule_action::FilterRuleAction as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_action::FilterRuleAction as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::rule_action::FilterRuleAction as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::rule_action::<impl std::convert::From<rule::rule_action::FilterRuleAction> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_action::RedirectRuleAction as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_action::RedirectRuleAction as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::rule_action::RedirectRuleAction as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_action::RedirectRuleAction as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::rule_action::RedirectRuleAction as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_action\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::rule_action::<impl std::convert::From<rule::rule_action::RedirectRuleAction> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLog as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLog as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::rule_log::RuleLog as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLog as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::rule_log::RuleLog as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::rule_log::<impl std::convert::From<rule::rule_log::RuleLog> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::rule_log::RuleLogSet::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::rule_log::RuleLogSet as std::convert::From<rule::rule_log::RuleLog>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rule_log\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::rule_log::<impl std::convert::From<&'a rule::rule_log::RuleLogSet> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::FilterRule as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::FilterRule as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::FilterRule as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::FilterRule as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::FilterRule as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::FilterRule as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::FilterRuleBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::FilterRuleBuilder as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"action\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::action"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"quick\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::quick"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::log"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"route\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::route"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"keep_state\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::keep_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"interface\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::interface"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"proto\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::proto"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"af\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"tcp_flags\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::tcp_flags"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"label\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRuleBuilder::label"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"build_internal\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::FilterRuleBuilder::build_internal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::FilterRuleBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_af\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::FilterRule::get_af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_route\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::FilterRule::get_route"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"validate_state_policy\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::FilterRule::validate_state_policy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::FilterRule as conversion::TryCopyTo<ffi::pfvar::pf_rule>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::RedirectRule as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::RedirectRule as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::RedirectRule as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::RedirectRule as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::RedirectRule as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::RedirectRule as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::RedirectRuleBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rule::RedirectRuleBuilder as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"action\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::action"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"quick\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::quick"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"log\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::log"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"interface\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::interface"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"proto\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::proto"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"af\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"label\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::label"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"redirect_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRuleBuilder::redirect_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"build_internal\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::RedirectRuleBuilder::build_internal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::RedirectRuleBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_af\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::RedirectRule::get_af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_redirect_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::RedirectRule::get_redirect_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rule::RedirectRule as conversion::TryCopyTo<ffi::pfvar::pf_rule>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compatible_af\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::compatible_af"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::<impl conversion::CopyTo<ffi::pfvar::pf_addr_wrap> for ipnetwork::IpNetwork>::copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::<impl conversion::CopyTo<ffi::pfvar::pf_addr> for std::net::IpAddr>::copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"copy_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"rule::<impl conversion::CopyTo<ffi::pfvar::in_addr> for std::net::Ipv4Addr>::copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::<impl conversion::CopyTo<ffi::pfvar::in6_addr> for std::net::Ipv6Addr>::copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rule\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"rule::<impl conversion::TryCopyTo<[i8]> for T>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pooladdr::PoolAddr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pooladdr::PoolAddr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pooladdr::PoolAddr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pooladdr::PoolAddr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pooladdr::PoolAddr as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pooladdr::PoolAddr as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"pooladdr::PoolAddr::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pooladdr::PoolAddr as std::convert::From<rule::interface::Interface>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pooladdr::PoolAddr as std::convert::From<rule::ip::Ip>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_copy_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pooladdr::PoolAddr as conversion::TryCopyTo<ffi::pfvar::pf_pooladdr>>::try_copy_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"pooladdr::PoolAddrList::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"init_pool\"), disambiguator: 0 }]","has_unsafe":true,"name":"pooladdr::PoolAddrList::init_pool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"link_elements\"), disambiguator: 0 }]","has_unsafe":false,"name":"pooladdr::PoolAddrList::link_elements"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pooladdr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"create_palist\"), disambiguator: 0 }]","has_unsafe":true,"name":"pooladdr::PoolAddrList::create_palist"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"anchor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<anchor::AnchorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"anchor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<anchor::AnchorKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"anchor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<anchor::AnchorKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"anchor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<anchor::AnchorKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"anchor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<anchor::AnchorKind as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"anchor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"anchor::<impl std::convert::From<anchor::AnchorKind> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ruleset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ruleset::RulesetKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ruleset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ruleset::RulesetKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ruleset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ruleset::RulesetKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ruleset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ruleset::RulesetKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ruleset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ruleset::RulesetKind as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ruleset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"ruleset::<impl std::convert::From<ruleset::RulesetKind> for i32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<transaction::Transaction as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"transaction::Transaction::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_change\"), disambiguator: 0 }]","has_unsafe":false,"name":"transaction::Transaction::add_change"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","has_unsafe":true,"name":"transaction::Transaction::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_filter_rule\"), disambiguator: 0 }]","has_unsafe":true,"name":"transaction::Transaction::add_filter_rule"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_redirect_rule\"), disambiguator: 0 }]","has_unsafe":true,"name":"transaction::Transaction::add_redirect_rule"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"setup_trans\"), disambiguator: 0 }]","has_unsafe":false,"name":"transaction::Transaction::setup_trans"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_trans_element\"), disambiguator: 0 }]","has_unsafe":true,"name":"transaction::Transaction::new_trans_element"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<transaction::AnchorChange as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"transaction::AnchorChange::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_filter_rules\"), disambiguator: 0 }]","has_unsafe":false,"name":"transaction::AnchorChange::set_filter_rules"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_redirect_rules\"), disambiguator: 0 }]","has_unsafe":false,"name":"transaction::AnchorChange::set_redirect_rules"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<errors::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<errors::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as errors::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::option::Option<T> as errors::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"compare_cstr_safe\"), disambiguator: 0 }]","has_unsafe":true,"name":"compare_cstr_safe"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"PfCtl::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enable\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::enable"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_enable\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::try_enable"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disable\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::disable"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_disable\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::try_disable"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_enabled\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::is_enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_anchor\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::add_anchor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_add_anchor\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::try_add_anchor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_anchor\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::remove_anchor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_remove_anchor\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::try_remove_anchor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_rule\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::add_rule"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_rules\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::set_rules"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_redirect_rule\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::add_redirect_rule"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flush_rules\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::flush_rules"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear_states\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::clear_states"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_states\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::get_states"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_anchor_rule\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::with_anchor_rule"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_num_states\"), disambiguator: 0 }]","has_unsafe":true,"name":"PfCtl::get_num_states"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fd\"), disambiguator: 0 }]","has_unsafe":false,"name":"PfCtl::fd"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"setup_pfioc_states\"), disambiguator: 0 }]","has_unsafe":true,"name":"setup_pfioc_states"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"setup_pfioc_state_kill\"), disambiguator: 0 }]","has_unsafe":true,"name":"setup_pfioc_state_kill"}
