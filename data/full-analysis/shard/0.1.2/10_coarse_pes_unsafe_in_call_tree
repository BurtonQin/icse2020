{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::State as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::lexer::State as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::lexer::State as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::State as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::Lexer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"error\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last_token\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::last_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::next_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"feed\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::feed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lex\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::lex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::token::Token as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::token::Token as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::token::Token as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::token::Token::from_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::token::Token::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::parser::ParserError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek_is\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::peek_is"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_if\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::pop_if"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expect\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::expect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expect_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::expect_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expect_number\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::expect_number"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expect_identifier\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::expect_identifier"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_tokens\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::from_tokens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ast::select::Select as syntax::ast::Syntax>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"columns\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ast::columns::Column as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"columns\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ast::columns::Column as syntax::ast::Syntax>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SyntaxExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_comma_delimited\"), disambiguator: 0 }]","has_unsafe":true,"name":"syntax::ast::SyntaxExt::parse_comma_delimited"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::ast::CommaDelimited<R> as syntax::ast::Syntax>::parse"}
