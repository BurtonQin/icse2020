{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_01::Future01As02<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_01::Stream01As02<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::Executor01As02<E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_01::Executor01As02<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_01::TokioAsAsyncIo02<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_02_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<F as futures_01::FutureInto02>::into_02_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::Future01As02<F> as futures_core::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_02_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<S as futures_01::StreamInto02>::into_02_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::Stream01As02<S> as futures_core::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_02_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<E as futures_01::ExecutorInto02>::into_02_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::Executor01As02<E> as futures_core::executor::Executor>::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_v02_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as futures_01::TokioIntoAsyncIo02>::into_v02_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll_read\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::TokioAsAsyncIo02<I> as futures_io::AsyncRead>::poll_read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll_write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::TokioAsAsyncIo02<I> as futures_io::AsyncWrite>::poll_write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll_flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::TokioAsAsyncIo02<I> as futures_io::AsyncWrite>::poll_flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll_close\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::TokioAsAsyncIo02<I> as futures_io::AsyncWrite>::poll_close"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_context\"), disambiguator: 0 }]","has_unsafe":true,"name":"futures_01::with_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_context_poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"futures_01::with_context_poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_01::WakerToHandle<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"futures_01::<impl std::convert::From<futures_01::WakerToHandle<'a>> for futures::executor::NotifyHandle>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_01\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"notify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_01::NotifyWaker as futures::executor::Notify>::notify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_02::Future02As01<E, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_02::Future02NeverAs01Unit<E, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_02::Stream02As01<E, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<futures_02::AsyncIo02AsTokio<E, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::BoxedExecutor02 as futures_core::executor::Executor>::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_01_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<F as futures_02::FutureInto01>::into_01_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_01_compat_never_unit\"), disambiguator: 0 }]","has_unsafe":false,"name":"<F as futures_02::FutureInto01>::into_01_compat_never_unit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::Future02As01<E, F> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::Future02NeverAs01Unit<E, F> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_01_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<S as futures_02::StreamInto01>::into_01_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::Stream02As01<E, S> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_tokio_compat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as futures_02::AsyncIoIntoTokio>::into_tokio_compat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::AsyncIo02AsTokio<E, I> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::AsyncIo02AsTokio<E, I> as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::AsyncIo02AsTokio<E, I> as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"would_block\"), disambiguator: 0 }]","has_unsafe":false,"name":"futures_02::would_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::AsyncIo02AsTokio<E, I> as tokio_io::AsyncWrite>::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"current_as_waker\"), disambiguator: 0 }]","has_unsafe":true,"name":"futures_02::current_as_waker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"futures_02\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"wake\"), disambiguator: 0 }]","has_unsafe":true,"name":"<futures_02::Current as futures_core::task::Wake>::wake"}
