{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::LabelString<D, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::LabelString<str, [&'static str; _]> as std::convert::From<&'static str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::LabelString<D, T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::LabelString<D, T> as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneBase as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneBase as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneBase as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneBase as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneBase as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GeneBase::get_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_product\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GeneBase::get_product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_normal\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GeneBase::is_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneAnchor<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneAnchor<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneAnchor<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<&'a find_genomes::GeneBase>>::get_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_product\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<&'a find_genomes::GeneBase>>::get_product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"display_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<find_genomes::GeneInfo<'a>>>::display_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"display_product\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneAnchor<find_genomes::GeneInfo<'a>>>::display_product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::RelativePosition as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::RelativePosition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::RelativePosition as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::RelativePosition as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::RelativePosition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneInfo<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneInfo<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneInfo<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneInfo<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GeneInfo<'a> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneInfo<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GeneInfo<'a> as std::convert::From<&'a find_genomes::GeneBase>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"get_label\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GeneInfo::get_label"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"display_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GeneInfo::display_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"display_product\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GeneInfo::display_product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::Gene<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::Gene<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::Gene<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::Gene<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::Gene<'a> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::Gene<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::Gene<'a> as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_accn\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::get_accn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GffBaseIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next_useful_gene\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::GffIter::next_useful_gene"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::GffIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BlastLine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<find_genomes::_IMPL_DESERIALIZE_FOR_BlastLine::<impl serde::Deserialize<'de> for find_genomes::BlastLine>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::BlastIter as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<find_genomes::GenomeIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_genomes\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::find_genomes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"find_genomes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_arenas\"), disambiguator: 0 }]","has_unsafe":false,"name":"find_genomes::create_arenas"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gene_data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gene_data::AtomicGeneData as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gene_data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_FinalGeneData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"gene_data::_IMPL_SERIALIZE_FOR_FinalGeneData::<impl serde::Serialize for gene_data::FinalGeneData<'a>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gene_data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stdev\"), disambiguator: 0 }]","has_unsafe":false,"name":"gene_data::stdev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gene_data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"first_overlap\"), disambiguator: 0 }]","has_unsafe":false,"name":"gene_data::AtomicGeneData::first_overlap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gene_data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"total_overlap\"), disambiguator: 0 }]","has_unsafe":false,"name":"gene_data::AtomicGeneData::total_overlap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gene_data\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"gene_data::AtomicGeneData::finalize"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"main\"), disambiguator: 0 }]","has_unsafe":true,"name":"main"}
