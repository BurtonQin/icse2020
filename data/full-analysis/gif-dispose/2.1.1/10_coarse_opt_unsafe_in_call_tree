{"def_path":"[DisambiguatedDefPathData { data: Module(\"subimage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subimage\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as subimage::Subimage<T>>::subimage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subimage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<subimage::Iter<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"disposal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<disposal::Disposal<Pixel> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"disposal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dispose\"), disambiguator: 0 }]","has_unsafe":false,"name":"<disposal::Disposal<Pixel>>::dispose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"disposal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<disposal::Disposal<Pixel>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_reader\"), disambiguator: 0 }]","has_unsafe":false,"name":"<screen::Screen>::new_reader"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_reader\"), disambiguator: 0 }]","has_unsafe":false,"name":"<screen::Screen<PixelType>>::from_reader"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<screen::Screen<PixelType>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"blit_frame\"), disambiguator: 0 }]","has_unsafe":false,"name":"<screen::Screen<PixelType>>::blit_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"blit\"), disambiguator: 0 }]","has_unsafe":false,"name":"<screen::Screen<PixelType>>::blit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert_pixels\"), disambiguator: 0 }]","has_unsafe":false,"name":"screen::convert_pixels"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::error::Error>::description"}
