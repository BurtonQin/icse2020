{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::BufferError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_BufferError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::_DERIVE_failure_Fail_FOR_BufferError::<impl failure::Fail for buffer::BufferError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_BufferError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::_DERIVE_failure_Fail_FOR_BufferError::<impl failure::Fail for buffer::BufferError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_BufferError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::_DERIVE_failure_core_fmt_Display_FOR_BufferError::<impl std::fmt::Display for buffer::BufferError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::MeshBuffer<N, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw_buffers\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::MeshBuffer<N, V>>::from_raw_buffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::MeshBuffer<N, V>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_index_slice\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::MeshBuffer<N, V>>::as_index_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_vertex_slice\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::MeshBuffer<N, V>>::as_vertex_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::MeshBuffer<N, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_indexer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::MeshBuffer<N, V> as generate::index::FromIndexer<P, P>>::from_indexer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::MeshBuffer<N, V> as std::iter::FromIterator<P>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Plane as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Plane as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::cube::Plane as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::cube::Plane as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Bounds as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_radius\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::cube::Bounds::unit_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_width\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::cube::Bounds::unit_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::cube::Bounds as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Cube as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"generate::cube::Cube::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_plane\"), disambiguator: 0 }]","has_unsafe":false,"name":"generate::cube::Cube::polygons_with_plane"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_plane_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::cube::Cube::polygon_with_plane_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Cube as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Cube as generate::generate::VertexGenerator>::vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Cube as generate::generate::PolygonGenerator>::polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_position_with\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Cube as generate::generate::PositionVertexGenerator>::vertex_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_position_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::cube::Cube as generate::generate::PositionPolygonGenerator>::polygon_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_index_with\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::cube::Cube as generate::generate::IndexPolygonGenerator>::polygon_with_index_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_texture_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::cube::Cube as generate::generate::TexturePolygonGenerator>::polygon_with_texture_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::decompose::Decompose<I, P, Q, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::decompose::Decompose<I, P, P, R>>::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::decompose::Decompose<I, P, Q, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Edge<T> as generate::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as generate::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as generate::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Edge<T> as generate::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as generate::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as generate::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"into_triangles\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as generate::decompose::IntoTriangles>::into_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"into_triangles\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::decompose::IntoTriangles>::into_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"into_triangles\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as generate::decompose::IntoTriangles>::into_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"into_subdivisions\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as generate::decompose::IntoSubdivisions>::into_subdivisions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into_subdivisions\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::decompose::IntoSubdivisions>::into_subdivisions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"into_tetrahedrons\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::decompose::IntoTetrahedrons>::into_tetrahedrons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"into_subdivisions\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as generate::decompose::IntoSubdivisions>::into_subdivisions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as generate::decompose::Vertices<P>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as generate::decompose::Edges<P>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as generate::decompose::Triangulate<P>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as generate::decompose::Subdivide<P>>::subdivide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"tetrahedrons\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as generate::decompose::Tetrahedrons<T>>::tetrahedrons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::decompose::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::generate::Generate<'a, G, S, P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::generate::Generate<'a, G, S, P> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"VerticesWithPosition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_with_position\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::generate::VerticesWithPosition::vertices_with_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_with_position_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as generate::generate::VerticesWithPosition<P>>::vertices_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PolygonsWithPosition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_position\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::generate::PolygonsWithPosition::polygons_with_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_position_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as generate::generate::PolygonsWithPosition<P>>::polygons_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PolygonsWithIndex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::generate::PolygonsWithIndex::polygons_with_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_index_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as generate::generate::PolygonsWithIndex<P>>::polygons_with_index_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PolygonsWithTexture\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_texture\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::generate::PolygonsWithTexture::polygons_with_texture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_texture_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as generate::generate::PolygonsWithTexture<P>>::polygons_with_texture_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::index::HashIndexer<T, K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::index::HashIndexer<T, K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::index::HashIndexer<T, K> as generate::index::Indexer<T, K>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::index::LruIndexer<T, K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::index::LruIndexer<T, K>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::index::LruIndexer<T, K>>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::index::LruIndexer<T, K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::index::LruIndexer<T, K> as generate::index::Indexer<T, K>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IndexVertices\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::index::IndexVertices::index_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"index_vertices_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<I as generate::index::IndexVertices<P>>::index_vertices_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FlatIndexVertices\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flat_index_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::index::FlatIndexVertices::flat_index_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"flat_index_vertices_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<I as generate::index::FlatIndexVertices<P>>::flat_index_vertices_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"collect_with_indexer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<I as generate::index::CollectWithIndexer<P, Q>>::collect_with_indexer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::sphere::Bounds as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_radius\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::sphere::Bounds::unit_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_width\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::sphere::Bounds::unit_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::sphere::Bounds as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::sphere::UvSphere as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"generate::sphere::UvSphere::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_position_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::sphere::UvSphere::vertex_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_index_with\"), disambiguator: 0 }]","has_unsafe":false,"name":"generate::sphere::UvSphere::vertex_with_index_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"map_polygon_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"generate::sphere::UvSphere::map_polygon_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::sphere::UvSphere as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::sphere::UvSphere as generate::generate::VertexGenerator>::vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::sphere::UvSphere as generate::generate::PolygonGenerator>::polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_position_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::sphere::UvSphere as generate::generate::PositionVertexGenerator>::vertex_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_position_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::sphere::UvSphere as generate::generate::PositionPolygonGenerator>::polygon_with_position_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_index_with\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::sphere::UvSphere as generate::generate::IndexPolygonGenerator>::polygon_with_index_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as generate::topology::MapVertices<T, U>>::map_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Map<I, T, U, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Map<I, T, U, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Edge<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"converged\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Edge<T>>::converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Edge<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Edge<A>, generate::topology::Edge<B>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Edge<A>, generate::topology::Edge<B>, generate::topology::Edge<C>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Edge<A>, generate::topology::Edge<B>, generate::topology::Edge<C>, generate::topology::Edge<D>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Edge<T> as generate::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Edge<T> as generate::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Triangle<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"converged\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T>>::converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Triangle<A>, generate::topology::Triangle<B>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Triangle<A>, generate::topology::Triangle<B>, generate::topology::Triangle<C>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Triangle<A>, generate::topology::Triangle<B>, generate::topology::Triangle<C>, generate::topology::Triangle<D>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as generate::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Triangle<T> as generate::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Quad<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"converged\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T>>::converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Quad<A>, generate::topology::Quad<B>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Quad<A>, generate::topology::Quad<B>, generate::topology::Quad<C>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Quad<A>, generate::topology::Quad<B>, generate::topology::Quad<C>, generate::topology::Quad<D>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Quad<T> as generate::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Polygon<T> as std::convert::From<generate::topology::Triangle<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<generate::topology::Polygon<T> as std::convert::From<generate::topology::Quad<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Polygon<A>, generate::topology::Polygon<B>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Polygon<A>, generate::topology::Polygon<B>, generate::topology::Polygon<C>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(generate::topology::Polygon<A>, generate::topology::Polygon<B>, generate::topology::Polygon<C>, generate::topology::Polygon<D>) as generate::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as generate::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<generate::topology::Polygon<T> as generate::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"umod\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::topology::umod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::topology::zip_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate::topology::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"half\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as generate::Half>::half"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as geometry::convert::IntoGeometry<U>>::into_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as geometry::convert::FromGeometry<T>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as geometry::convert::FromGeometry<(U, U)>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as geometry::convert::FromGeometry<(U, U, U)>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_interior_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as geometry::convert::IntoInteriorGeometry<U>>::into_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::FiniteConstraint<T>>, nalgebra::U3>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<T, nalgebra::U3>> for nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::FiniteConstraint<T>>, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::NotNanConstraint<T>>, nalgebra::U3>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<T, nalgebra::U3>> for nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::NotNanConstraint<T>>, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<decorum::proxy::ConstrainedFloat<T, ()>, nalgebra::U3>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<T, nalgebra::U3>> for nalgebra::Point<decorum::proxy::ConstrainedFloat<T, ()>, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U)> for nalgebra::Point<T, nalgebra::U2>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U, U)> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Duplet<U>> for nalgebra::Point<T, nalgebra::U2>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Triplet<U>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U)> for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U, U)> for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Duplet<U>> for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Triplet<U>> for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_position\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U2>>::as_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_position_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U2>>::as_position_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_position\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U3>>::as_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_position_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U3>>::as_position_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Interpolate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::Interpolate::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"project\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as geometry::ops::Project>::project"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as geometry::ops::Interpolate>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as geometry::ops::Interpolate>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Normalize for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Normalize for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Average for nalgebra::Point<T, nalgebra::U2>>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Average for nalgebra::Point<T, nalgebra::U3>>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Point<T, nalgebra::U2>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Point<T, nalgebra::U3>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Dot for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Dot for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Cross for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Duplet<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Triplet<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Point<U, nalgebra::U2>> for geometry::Duplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Matrix<U, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<U, nalgebra::U2>>::Buffer>> for geometry::Duplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Point<T, nalgebra::U2>> for geometry::Duplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>> for geometry::Duplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Point<U, nalgebra::U3>> for geometry::Triplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Matrix<U, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<U, nalgebra::U3>>::Buffer>> for geometry::Triplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Point<T, nalgebra::U3>> for geometry::Triplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>> for geometry::Triplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graph::geometry::FaceNormal>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"centroid\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graph::geometry::FaceCentroid>::centroid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graph::geometry::EdgeMidpoint>::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"lateral\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graph::geometry::EdgeLateral>::lateral"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Vertex<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Vertex<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Vertex<G> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Vertex<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Vertex<G> as geometry::convert::FromInteriorGeometry<graph::mesh::Vertex<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Edge<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Edge<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Edge<G> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Edge<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Edge<G> as geometry::convert::FromInteriorGeometry<graph::mesh::Edge<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Face<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Face<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Face<G> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Face<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Face<G> as geometry::convert::FromInteriorGeometry<graph::mesh::Face<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Region<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Region<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::mesh::Region::as_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw_buffers\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::from_raw_buffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::vertex_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_vertex_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::orphan_vertex_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::vertices_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"edge_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::edge_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::orphan_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"edges_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::edges_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"face_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::face_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"face_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::face_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_face_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::orphan_face_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"faces\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"faces_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::faces_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_vertex_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_vertex_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_face_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_face_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"region\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G>>::region"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"region_connectivity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G>>::region_connectivity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G> as std::convert::AsRef<graph::mesh::Mesh<G>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::Mesh<G> as std::convert::AsMut<graph::mesh::Mesh<G>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G> as geometry::convert::FromInteriorGeometry<graph::mesh::Mesh<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_indexer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G> as generate::index::FromIndexer<P, P>>::from_indexer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::Mesh<G> as std::iter::FromIterator<P>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::MeshIter<'a, T, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::MeshIter<'a, T, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mesh::MeshIterMut<'a, T, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mesh::MeshIterMut<'a, T, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mode<&'a mut graph::mesh::Mesh<G>, graph::mesh::Mesh<G>>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mode<&'a mut graph::mesh::Mesh<G>, graph::mesh::Mesh<G>>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mode<&'a mut graph::mesh::Mesh<G>, graph::mesh::Mesh<G>>>::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mode<&'a mut graph::mesh::Mesh<G>, graph::mesh::Mesh<G>> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mode<&'a mut graph::mesh::Mesh<G>, graph::mesh::Mesh<G>> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"immediate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mutation<'a, G>>::immediate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"batch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mutation<'a, G>>::batch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"insert_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::Mutation<'a, G>>::insert_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"insert_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::Mutation<'a, G>>::insert_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_or_insert_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::Mutation<'a, G>>::get_or_insert_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_or_insert_composite_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::Mutation<'a, G>>::get_or_insert_composite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remove_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::Mutation<'a, G>>::remove_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"connect_face_interior\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::Mutation<'a, G>>::connect_face_interior"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"connect_face_exterior\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::Mutation<'a, G>>::connect_face_exterior"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::ImmediateMutation<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"insert_face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::ImmediateMutation<'a, G>>::insert_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"remove_face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::ImmediateMutation<'a, G>>::remove_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::ImmediateMutation<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::ImmediateMutation<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::BatchMutation<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::BatchMutation<'a, G>>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"insert_face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::mutation::BatchMutation<'a, G>>::insert_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::BatchMutation<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::mutation::BatchMutation<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as graph::storage::Generator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Key as graph::storage::Generator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as std::convert::From<graph::storage::Key>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::VertexKey as graph::storage::OpaqueKey>::to_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_opposite_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::storage::EdgeKey::to_opposite_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_vertex_keys\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::storage::EdgeKey::to_vertex_keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"to_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as graph::storage::OpaqueKey>::to_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::convert::From<(graph::storage::Key, graph::storage::Key)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::EdgeKey as std::convert::From<(graph::storage::VertexKey, graph::storage::VertexKey)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as std::convert::From<graph::storage::Key>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"to_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::FaceKey as graph::storage::OpaqueKey>::to_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"map_values_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::map_values_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::insert_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"contains_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::storage::Storage<T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with_generator\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Storage<T>>::insert_with_generator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Storage<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::storage::Storage<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_key_topology\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G>>::to_key_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"source_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::source_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_source_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G>>::into_source_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"destination_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::destination_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_destination_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_destination_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"opposite_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_opposite_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_next_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"previous_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_previous_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_face\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"boundary_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_boundary_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::is_boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_mesh_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::with_mesh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"raw_opposite_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::raw_opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw_opposite_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_raw_opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"raw_next_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::raw_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw_next_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_raw_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"raw_previous_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::raw_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw_previous_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::into_raw_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"opposite_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::opposite_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::next_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"previous_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::previous_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"source_vertex_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::source_vertex_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"destination_vertex_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::destination_vertex_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"face_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::face_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"boundary_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::boundary_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_mesh_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::with_mesh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"raw_opposite_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::raw_opposite_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"raw_next_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::raw_next_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"raw_previous_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::raw_previous_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"split_half_at\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::split_half_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lateral\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::lateral"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"extrude\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G>>::extrude"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G> as std::convert::AsRef<graph::topology::edge::EdgeView<M, G>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G> as std::convert::AsMut<graph::topology::edge::EdgeView<M, G>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::edge::EdgeView<M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_mesh\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::EdgeView<M, G> as graph::topology::View<M, G>>::from_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::OrphanEdgeView<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::OrphanEdgeView<'a, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::OrphanEdgeView<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::OrphanEdgeView<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_topology\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::edge::OrphanEdgeView<'a, G> as graph::topology::OrphanView<'a, G>>::from_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::topology::edge::EdgeKeyTopology::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::topology::edge::EdgeKeyTopology::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::topology::edge::EdgeKeyTopology::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceView<M, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceView<M, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_key_topology\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::to_key_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::arity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"faces\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_mesh_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::with_mesh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::vertices_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edges_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::edges_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"faces_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::faces_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_mesh_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::with_mesh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"centroid\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::centroid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"extrude\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::extrude"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"extrude_vertex_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G>>::extrude_vertex_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceView<M, G> as std::convert::AsRef<graph::topology::face::FaceView<M, G>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceView<M, G> as std::convert::AsMut<graph::topology::face::FaceView<M, G>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceView<M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_mesh\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceView<M, G> as graph::topology::View<M, G>>::from_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::OrphanFaceView<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::OrphanFaceView<'a, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::OrphanFaceView<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::OrphanFaceView<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_topology\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::OrphanFaceView<'a, G> as graph::topology::OrphanView<'a, G>>::from_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"graph::topology::face::FaceKeyTopology::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::topology::face::FaceKeyTopology::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::topology::face::FaceKeyTopology::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_edge_circulator\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::VertexCirculator<M, G>>::from_edge_circulator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::VertexCirculator<&'a graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::VertexCirculator<&'a mut graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::EdgeCirculator<M, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::EdgeCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::EdgeCirculator<&'a graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::EdgeCirculator<&'a mut graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from_edge_circulator\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceCirculator<M, G>>::from_edge_circulator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::face::FaceCirculator<&'a graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::face::FaceCirculator<&'a mut graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::VertexView<M, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::VertexView<M, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"outgoing_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_outgoing_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::into_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"incoming_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::incoming_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"faces\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_mesh_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::with_mesh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"raw_outgoing_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::raw_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw_outgoing_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::into_raw_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"outgoing_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::outgoing_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"incoming_edges_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::incoming_edges_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"faces_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::faces_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_mesh_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::with_mesh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"raw_outgoing_edge_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G>>::raw_outgoing_edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::VertexView<M, G> as std::convert::AsRef<graph::topology::vertex::VertexView<M, G>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::VertexView<M, G> as std::convert::AsMut<graph::topology::vertex::VertexView<M, G>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::VertexView<M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_mesh\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::VertexView<M, G> as graph::topology::View<M, G>>::from_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::OrphanVertexView<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::OrphanVertexView<'a, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::OrphanVertexView<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::OrphanVertexView<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_topology\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::OrphanVertexView<'a, G> as graph::topology::OrphanView<'a, G>>::from_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::EdgeCirculator<M, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::EdgeCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::EdgeCirculator<&'a graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::EdgeCirculator<&'a mut graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_edge_circulator\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::FaceCirculator<M, G>>::from_edge_circulator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::FaceCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::topology::vertex::FaceCirculator<&'a graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graph::topology::vertex::FaceCirculator<&'a mut graph::mesh::Mesh<G>, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::GraphError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_GraphError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::_DERIVE_failure_Fail_FOR_GraphError::<impl failure::Fail for graph::GraphError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_GraphError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::_DERIVE_failure_Fail_FOR_GraphError::<impl failure::Fail for graph::GraphError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_GraphError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"graph::_DERIVE_failure_core_fmt_Display_FOR_GraphError::<impl std::fmt::Display for graph::GraphError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"perimeter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as graph::Perimeter<'a, T, U>>::perimeter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::PerimeterIter<'a, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graph::PerimeterIter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_some\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bool as BoolExt>::into_some"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"and_if\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::option::Option<T> as OptionExt<T>>::and_if"}
