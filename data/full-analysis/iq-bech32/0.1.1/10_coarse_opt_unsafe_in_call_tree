{"def_path":"[DisambiguatedDefPathData { data: Module(\"base32\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"base32::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"base32\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"base32::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"base32\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert\"), disambiguator: 0 }]","has_unsafe":false,"name":"base32::convert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"checksum::Checksum::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"verify\"), disambiguator: 0 }]","has_unsafe":false,"name":"checksum::Checksum::verify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<checksum::Checksum as std::convert::AsRef<[u8]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<checksum::Checksum as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polymod\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<checksum::polymod::Polymod as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polymod\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"compute\"), disambiguator: 0 }]","has_unsafe":false,"name":"checksum::polymod::Polymod::compute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polymod\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"input_slice\"), disambiguator: 0 }]","has_unsafe":false,"name":"checksum::polymod::Polymod::input_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polymod\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"input_byte\"), disambiguator: 0 }]","has_unsafe":false,"name":"checksum::polymod::Polymod::input_byte"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polymod\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":false,"name":"checksum::polymod::Polymod::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polymod\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<checksum::polymod::Polymod as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_Error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::_DERIVE_failure_Fail_FOR_Error::<impl failure::Fail for error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_Error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::_DERIVE_failure_Fail_FOR_Error::<impl failure::Fail for error::Error>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_Error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::_DERIVE_failure_core_fmt_Display_FOR_Error::<impl std::fmt::Display for error::Error>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Bech32 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lower_case\"), disambiguator: 0 }]","has_unsafe":false,"name":"Bech32::lower_case"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"upper_case\"), disambiguator: 0 }]","has_unsafe":false,"name":"Bech32::upper_case"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"Bech32::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"separator\"), disambiguator: 0 }]","has_unsafe":false,"name":"Bech32::separator"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"Bech32::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"Bech32::decode"}
