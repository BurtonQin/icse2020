{"def_path":"[DisambiguatedDefPathData { data: Module(\"display_html_safe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"display_html_safe::EscapingWriter::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display_html_safe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"part\"), disambiguator: 0 }]","has_unsafe":false,"name":"display_html_safe::part"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display_html_safe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display_html_safe::EscapingWriter<'a> as std::fmt::Write>::write_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display_html_safe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"safe_fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as display_html_safe::DisplayHtmlSafe>::safe_fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conditional\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bool as conditional::Conditional>::val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conditional\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as conditional::Conditional>::val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conditional\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [T] as conditional::Conditional>::val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conditional\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a T as conditional::Conditional>::val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"negative_iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neg_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::option::Option<T> as negative_iterator::NegativeIterator>::neg_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"negative_iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neg_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a std::result::Result<T, E> as negative_iterator::NegativeIterator>::neg_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"negative_iterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a T as negative_iterator::NegativeIterator>::neg_iter"}
