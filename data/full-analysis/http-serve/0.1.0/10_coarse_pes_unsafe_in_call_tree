{"def_path":"[DisambiguatedDefPathData { data: Module(\"chunker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chunk_size\"), disambiguator: 0 }]","has_unsafe":true,"name":"<chunker::BodyWriter<D, E>>::with_chunk_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chunker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abort\"), disambiguator: 0 }]","has_unsafe":true,"name":"<chunker::BodyWriter<D, E>>::abort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chunker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<chunker::BodyWriter<D, E> as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chunker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"<chunker::BodyWriter<D, E> as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"chunker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<chunker::BodyWriter<D, E> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"etag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"weak_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"etag::weak_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"etag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"strong_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"etag::strong_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"etag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"etag::List::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"etag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<etag::List<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"etag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"none_match\"), disambiguator: 0 }]","has_unsafe":true,"name":"etag::none_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"etag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"any_match\"), disambiguator: 0 }]","has_unsafe":true,"name":"etag::any_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<file::ChunkedReadFile<D, E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<file::ChunkedReadFile<D, E>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<file::ChunkedReadFile<D, E> as Entity>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_range\"), disambiguator: 0 }]","has_unsafe":true,"name":"<file::ChunkedReadFile<D, E> as Entity>::get_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_headers\"), disambiguator: 0 }]","has_unsafe":true,"name":"<file::ChunkedReadFile<D, E> as Entity>::add_headers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"etag\"), disambiguator: 0 }]","has_unsafe":true,"name":"<file::ChunkedReadFile<D, E> as Entity>::etag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"last_modified\"), disambiguator: 0 }]","has_unsafe":false,"name":"<file::ChunkedReadFile<D, E> as Entity>::last_modified"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gzip::BodyWriter<D, E>>::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gzipped\"), disambiguator: 0 }]","has_unsafe":true,"name":"<gzip::BodyWriter<D, E>>::gzipped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abort\"), disambiguator: 0 }]","has_unsafe":true,"name":"<gzip::BodyWriter<D, E>>::abort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<gzip::BodyWriter<D, E> as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"<gzip::BodyWriter<D, E> as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::ResolvedRanges as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::ResolvedRanges as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::ResolvedRanges as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::ResolvedRanges as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"range::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serving\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_modified_hdrs\"), disambiguator: 0 }]","has_unsafe":true,"name":"serving::parse_modified_hdrs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serving\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"static_body\"), disambiguator: 0 }]","has_unsafe":false,"name":"serving::static_body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serving\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty_body\"), disambiguator: 0 }]","has_unsafe":false,"name":"serving::empty_body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serving\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serve\"), disambiguator: 0 }]","has_unsafe":true,"name":"serving::serve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serving\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<serving::InnerBody<B, C> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serving\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"send_multipart\"), disambiguator: 0 }]","has_unsafe":true,"name":"serving::send_multipart"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":true,"name":"Entity::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"should_gzip\"), disambiguator: 0 }]","has_unsafe":true,"name":"should_gzip"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"streaming_body\"), disambiguator: 0 }]","has_unsafe":true,"name":"streaming_body"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chunk_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"StreamingBodyBuilder::with_chunk_size"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_gzip_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"StreamingBodyBuilder::with_gzip_level"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":true,"name":"StreamingBodyBuilder::build"}
