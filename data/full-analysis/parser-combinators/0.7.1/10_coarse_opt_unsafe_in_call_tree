{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::BytePosition as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Info<T> as std::convert::From<&'static str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Error<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Error<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Error<T> as std::convert::From<E>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_input\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Error<T>>::end_of_input"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitives::Consumed<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitives::Consumed<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_consumed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T>>::as_consumed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T>>::as_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"combine\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Consumed<T>>::combine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_errors\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::from_errors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"end_of_input\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::end_of_input"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add_message\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::add_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_expected\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::set_expected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"merge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P>>::merge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P> as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::ParseError<P> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::SourcePosition as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::Error<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"as_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I>>::as_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"uncons\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I>>::uncons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::State<I>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"uncons\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as primitives::Stream>::uncons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"uncons\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [T] as primitives::Stream>::uncons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::IteratorStream<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::IteratorStream<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"uncons\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitives::IteratorStream<I> as primitives::Stream>::uncons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a T as primitives::Positioner>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a T as primitives::Positioner>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char as primitives::Positioner>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char as primitives::Positioner>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as primitives::Positioner>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as primitives::Positioner>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Parser::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Parser::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Parser::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitives::Parser::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut P as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut P as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut P as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::boxed::Box<P> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::boxed::Box<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::boxed::Box<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Any<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Any<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"any\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::any"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Satisfy<I, P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"satisfy_impl\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::satisfy_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Satisfy<I, P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"satisfy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::satisfy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Token<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Token<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Token<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"token\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Choice<S, P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Choice<S, P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choice\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::choice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Unexpected<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Unexpected<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Unexpected<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unexpected\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::unexpected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Value<I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Value<I, T> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::NotFollowedBy<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::NotFollowedBy<P> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::NotFollowedBy<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::NotFollowedBy<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"not_followed_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::not_followed_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"not_followed_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"f\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::not_followed_by::f"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Iter<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_result\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Iter<P>>::into_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Iter<P> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Many<F, P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Many<F, P> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Many1<F, P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Many1<F, P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Many1<F, P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany<P> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::skip_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ignore\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::skip_many::ignore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany1<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany1<P> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany1<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SkipMany1<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::skip_many1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_many1\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ignore\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::skip_many1::ignore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"many1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::many1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SepBy<F, P, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SepBy<F, P, S> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::SepBy<F, P, S> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sep_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::sep_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinator::<impl primitives::Parser for (dyn std::ops::FnMut(primitives::State<I>) -> std::result::Result<(O, primitives::Consumed<primitives::State<I>>), primitives::Consumed<primitives::ParseError<<I as primitives::Stream>::Item>>> + 'a)>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::FnParser<I, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parser\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::parser"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::FnParser<I, F> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for fn(primitives::State<I>) -> std::result::Result<(O, primitives::Consumed<primitives::State<I>>), primitives::Consumed<primitives::ParseError<<I as primitives::Stream>::Item>>>>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Optional<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Optional<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"optional\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::optional"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Between<L, R, P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"parse_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Between<L, R, P> as primitives::Parser>::parse_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Between<L, R, P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Between<L, R, P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"between\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::between"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Chainl1<P, Op> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Chainl1<P, Op> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Chainl1<P, Op> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chainl1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::chainl1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Chainr1<P, Op> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Chainr1<P, Op> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Chainr1<P, Op> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chainr1\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::chainr1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Try<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Try<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Try<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::And<P1, P2> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::And<P1, P2> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::And<P1, P2> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::With<P1, P2> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::With<P1, P2> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::With<P1, P2> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Skip<P1, P2> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Skip<P1, P2> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Skip<P1, P2> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Message<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Message<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Message<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Or<P1, P2> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Or<P1, P2> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Or<P1, P2> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Map<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Map<P, F> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Map<P, F> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Then<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Then<P, F> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Then<P, F> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Expected<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Expected<P> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::Expected<P> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::AndThen<P, F> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinator::AndThen<P, F> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::skip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::and"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"then\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::then"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"message\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expected\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::expected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ParserExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::ParserExt::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I, J)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I, J)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I, J, K)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I, J, K)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I, J, K, L)>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinator::<impl primitives::Parser for (A, B, C, D, E, F, G, H, I, J, K, L)>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Digit<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Digit<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Digit<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digit\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::digit::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Space<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Space<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Space<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"space\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::space"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Spaces<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Spaces<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Spaces<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spaces\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::spaces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::NewLine<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::NewLine<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::NewLine<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"newline\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::newline"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"newline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::newline::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::CrLf<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::CrLf<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::CrLf<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"crlf\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::crlf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"crlf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::crlf::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Tab<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Tab<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Tab<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tab\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::tab"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::tab::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Upper<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Upper<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Upper<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"upper\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::upper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"upper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::upper::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Lower<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Lower<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Lower<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lower\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::lower"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lower\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::lower::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::AlphaNum<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::AlphaNum<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::AlphaNum<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"alpha_num\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::alpha_num"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"alpha_num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::alpha_num::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Letter<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Letter<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::Letter<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"letter\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::letter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"letter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::letter::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::OctDigit<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::OctDigit<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::OctDigit<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"oct_digit\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::oct_digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"oct_digit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::oct_digit::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::HexDigit<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::HexDigit<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::HexDigit<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hex_digit\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::hex_digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hex_digit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"temp\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::hex_digit::temp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::String<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_lazy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::String<I> as primitives::Parser>::parse_lazy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<char::String<I> as primitives::Parser>::add_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"string\"), disambiguator: 0 }]","has_unsafe":false,"name":"char::string"}
