{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Board as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"center_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::center_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"star_points\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::star_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fixed_handicaps\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::fixed_handicaps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_vacant\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::is_vacant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty_verts\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::empty_verts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pass_alive_chains\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::pass_alive_chains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::with_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"place_stone\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::board::Board::place_stone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_letters\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::push_letters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_stone\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::add_stone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_captures\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::board::Board::remove_captures"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"small_enclosed_regions\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::board::Board::small_enclosed_regions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_ascii\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::board::Board::to_ascii"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Board as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Board as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Move as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Move as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Neighbors as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::board::Neighbors as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::chain::Chain as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::chain::Chain as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chain::Chain::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eat\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chain::Chain::eat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::chains::Chains as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::chains::Chains as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_stone\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::add_stone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::remove_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_dead_chains\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::chains::Chains::remove_dead_chains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"chains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::chains::Chains::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_from_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::matrix::vertex_from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index_from_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::matrix::index_from_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"verts_in_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::verts_in_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exterior\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::exterior"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::with_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_not_state_region\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::get_not_state_region"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_by_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::split_by_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_in_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T>>::is_in_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T> as std::ops::Index<&'a game::vertex::Vertex>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::matrix::Matrix<T> as std::ops::IndexMut<&'a game::vertex::Vertex>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::player::Player as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::player::Player as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::player::Player as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game::player::Player as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enemy\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::player::Player::enemy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::player::Player as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::player::Player as std::convert::From<game::web::WEB>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertex as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertexes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::vertex::Vertexes as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::web::WEB as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::web::WEB as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::web::WEB as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game::web::WEB as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game::web::WEB as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::web::WEB as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"web\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::web::WEB as std::convert::From<game::player::Player>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Handicap as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Handicap as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Clock as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Clock as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear_board\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::clear_board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"genmove_random\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::genmove_random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"all_legal_moves\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::all_legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_board_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::with_board_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_legal_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::is_legal_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"play\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::play"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"undo\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::undo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"place_handicap\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::place_handicap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_free_handicap\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::set_free_handicap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"player_turn\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::player_turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_over\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::is_over"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::RuleSet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::RuleSet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::command::CommandsIter<B> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::command::Commands::commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::command::CommandsIter<C> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"preprocess_line\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::command::preprocess_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::command::Command as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::command::Command as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::command::Command as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::command::Command as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"command\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_line\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::command::Command::from_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gtp_boardsize\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::gtp_boardsize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gtp_genmove\"), disambiguator: 0 }]","has_unsafe":true,"name":"gtp::engine::gtp_genmove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gtp_place_handicap\"), disambiguator: 0 }]","has_unsafe":true,"name":"gtp::engine::gtp_place_handicap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gtp_play\"), disambiguator: 0 }]","has_unsafe":true,"name":"gtp::engine::gtp_play"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_color\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::parse_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exec\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::exec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_all_commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::register_all_commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_dlc_commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::register_dlc_commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_extra_commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::register_extra_commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_kgs_commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::register_kgs_commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_regression_commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::register_regression_commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_tournament_commands\"), disambiguator: 0 }]","has_unsafe":false,"name":"gtp::engine::Engine::register_tournament_commands"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::engine::Engine as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::engine::Engine as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::response::Response as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gtp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<gtp::response::Response as std::fmt::Display>::fmt"}
