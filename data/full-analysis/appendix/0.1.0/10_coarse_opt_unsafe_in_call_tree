{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"diskvec::min_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rank_ofs\"), disambiguator: 0 }]","has_unsafe":false,"name":"diskvec::rank_ofs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<diskvec::MutableReference<'a, T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<diskvec::MutableReference<'a, T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<diskvec::DiskVec<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"anonymous\"), disambiguator: 0 }]","has_unsafe":true,"name":"<diskvec::DiskVec<T>>::anonymous"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_rank_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"<diskvec::DiskVec<T>>::get_rank_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<diskvec::DiskVec<T>>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<diskvec::DiskVec<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<diskvec::DiskVec<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<diskvec::DiskVec<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diskvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":true,"name":"<diskvec::DiskVec<T>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<RawPage<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<RawPage<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<RawPage<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"valid_key_val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Entry<K, V>>::valid_key_val"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Entry<K, V>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"probe_insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<RawPage<K, V>>::probe_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<RawPage<K, V>>::try_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<RawPage<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Index<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"anonymous\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Index<K, V>>::anonymous"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"entries_per_page\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Index<K, V>>::entries_per_page"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Index<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Index<K, V>>::get"}
