{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<serde_json::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<hyper::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<errors::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<errors::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as errors::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::option::Option<T> as errors::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<client::Github as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"client::Github::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_token\"), disambiguator: 0 }]","has_unsafe":false,"name":"client::Github::get_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_token\"), disambiguator: 0 }]","has_unsafe":true,"name":"client::Github::set_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_core\"), disambiguator: 0 }]","has_unsafe":false,"name":"client::Github::get_core"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":true,"name":"client::Github::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mutation\"), disambiguator: 0 }]","has_unsafe":true,"name":"client::Github::mutation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"client::Github::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"query\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"query::Query::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"query\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_raw\"), disambiguator: 0 }]","has_unsafe":true,"name":"query::Query::new_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"query\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_query\"), disambiguator: 0 }]","has_unsafe":true,"name":"query::Query::raw_query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"query\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_github_req\"), disambiguator: 0 }]","has_unsafe":true,"name":"<query::Query as IntoGithubRequest>::into_github_req"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"mutation::Mutation::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_raw\"), disambiguator: 0 }]","has_unsafe":true,"name":"mutation::Mutation::new_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_mutation\"), disambiguator: 0 }]","has_unsafe":true,"name":"mutation::Mutation::raw_mutation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_github_req\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mutation::Mutation as IntoGithubRequest>::into_github_req"}
