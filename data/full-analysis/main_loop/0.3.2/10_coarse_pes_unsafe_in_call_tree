{"def_path":"[DisambiguatedDefPathData { data: Module(\"glutin\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"run\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"glutin::run::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"winit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"run\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"winit::run::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"platform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"MAIN_TARGET_FPS\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__init\"), disambiguator: 0 }]","has_unsafe":false,"name":"platform::native::MAIN_TARGET_FPS::__init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"platform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_target_fps\"), disambiguator: 0 }]","has_unsafe":false,"name":"platform::native::set_target_fps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"platform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"target_fps\"), disambiguator: 0 }]","has_unsafe":false,"name":"platform::native::target_fps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"platform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"native\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"platform::native::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::Events<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::Events<T>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut events::Events<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control_flow::ControlFlow as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control_flow::ControlFlow as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control_flow::ControlFlow as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control_flow::ControlFlow as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control_flow::ControlFlow as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control_flow::ControlFlow as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control_flow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control_flow::ControlFlow as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"now\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"now\"), disambiguator: 0 }]","has_unsafe":true,"name":"now::now"}
