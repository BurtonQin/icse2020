{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U512 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U512 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U512 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U512 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U512 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U512::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U512::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_bit\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U512::get_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"divrem\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U512::divrem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interpret\"), disambiguator: 0 }]","has_unsafe":true,"name":"arith::U512::interpret"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arith::U512 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arith::U512 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arith::U256 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arith::U256 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::U256 as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"arith::U256::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"to_big_endian\"), disambiguator: 0 }]","has_unsafe":true,"name":"arith::U256::to_big_endian"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_bit\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::set_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_bit\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::get_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_even\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::is_even"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::U256::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arith::BitIterator<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div2\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::div2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul2\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::mul2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::split_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"combine_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::combine_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"adc\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::adc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_nocarry\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::add_nocarry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_noborrow\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::sub_noborrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sub_noborrow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sbb\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::sub_noborrow::sbb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_digit\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::mac_digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_digit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_with_carry\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::mac_digit::mac_with_carry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_reduce\"), disambiguator: 0 }]","has_unsafe":false,"name":"arith::mul_reduce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::<impl std::convert::From<fields::fp::Fr> for arith::U256>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::fp::Fr as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::fp::Fr as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fr::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fr::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new_mul_factor\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fr::new_mul_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"interpret\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fp::Fr::interpret"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"modulus\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fr::modulus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"inv\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fr::inv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fr::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as fields::FieldElement>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as fields::FieldElement>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as fields::FieldElement>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as fields::FieldElement>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as fields::FieldElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fr as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::<impl std::convert::From<fields::fp::Fq> for arith::U256>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::fp::Fq as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::fp::Fq as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fq::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fq::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new_mul_factor\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fq::new_mul_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"interpret\"), disambiguator: 0 }]","has_unsafe":true,"name":"fields::fp::Fq::interpret"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"modulus\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fq::modulus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"inv\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fq::inv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::Fq::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as fields::FieldElement>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as fields::FieldElement>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as fields::FieldElement>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as fields::FieldElement>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as fields::FieldElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fp::Fq as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"const_fq\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fp::const_fq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fq_non_residue\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq2::fq_non_residue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fq2_nonresidue\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq2::fq2_nonresidue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::fq2::Fq2 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fields::fq2::Fq2 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq2::Fq2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq2::Fq2::scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mul_by_nonresidue\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq2::Fq2::mul_by_nonresidue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"frobenius_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq2::Fq2::frobenius_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as fields::FieldElement>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as fields::FieldElement>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as fields::FieldElement>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as fields::FieldElement>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"squared\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as fields::FieldElement>::squared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as fields::FieldElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq2::Fq2 as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frobenius_coeffs_c1\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq6::frobenius_coeffs_c1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frobenius_coeffs_c2\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq6::frobenius_coeffs_c2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq6::Fq6::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_by_nonresidue\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq6::Fq6::mul_by_nonresidue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq6::Fq6::scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frobenius_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq6::Fq6::frobenius_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as fields::FieldElement>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as fields::FieldElement>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as fields::FieldElement>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as fields::FieldElement>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"squared\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as fields::FieldElement>::squared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as fields::FieldElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq6::Fq6 as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frobenius_coeffs_c1\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::frobenius_coeffs_c1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"final_exponentiation_first_chunk\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::final_exponentiation_first_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"final_exponentiation_last_chunk\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::final_exponentiation_last_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"final_exponentiation\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::final_exponentiation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frobenius_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::frobenius_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_by_neg_z\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::exp_by_neg_z"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unitary_inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::unitary_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_by_024\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::mul_by_024"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cyclotomic_squared\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::cyclotomic_squared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cyclotomic_pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::fq12::Fq12::cyclotomic_pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as fields::FieldElement>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as fields::FieldElement>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as fields::FieldElement>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as fields::FieldElement>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"squared\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as fields::FieldElement>::squared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as fields::FieldElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fq12\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fields::fq12::Fq12 as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FieldElement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"squared\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::FieldElement::squared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fields\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FieldElement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"fields::FieldElement::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"GroupParams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_order\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::GroupParams::check_order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"x_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::x_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::y_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"z\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::z"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"z_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::z_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P>>::x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"x_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P>>::x_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P>>::y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"y_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P>>::y_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"to_affine\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P>>::to_affine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"to_jacobian\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P>>::to_jacobian"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P> as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P> as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as groups::GroupElement>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as groups::GroupElement>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as groups::GroupElement>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as groups::GroupElement>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"double\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as groups::GroupElement>::double"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::ops::Mul<fields::fp::Fr>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<P> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<P> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G1Params as groups::GroupParams>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G1Params as groups::GroupParams>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"coeff_b\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G1Params as groups::GroupParams>::coeff_b"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Params as groups::GroupParams>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Params as groups::GroupParams>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"coeff_b\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Params as groups::GroupParams>::coeff_b"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"check_order\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Params as groups::GroupParams>::check_order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"twist\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::twist"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"two_inv\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::two_inv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ate_loop_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::ate_loop_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"twist_mul_by_q_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::twist_mul_by_q_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"twist_mul_by_q_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::twist_mul_by_q_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::EllCoeffs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::EllCoeffs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::EllCoeffs as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Precomp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Precomp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G2Precomp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"miller_loop\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::G2Precomp::miller_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"mul_by_q\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<groups::G2Params>>::mul_by_q"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"precompute\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::AffineG<groups::G2Params>>::precompute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"mixed_addition_step_for_flipped_miller_loop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<groups::G2Params>>::mixed_addition_step_for_flipped_miller_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"doubling_step_for_flipped_miller_loop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<groups::G<groups::G2Params>>::doubling_step_for_flipped_miller_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pairing\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::pairing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"groups\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"test_y_at_point_at_infinity\"), disambiguator: 0 }]","has_unsafe":false,"name":"groups::test_y_at_point_at_infinity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::random"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fr::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interpret\"), disambiguator: 0 }]","has_unsafe":true,"name":"Fr::interpret"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"Fr::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_big_endian\"), disambiguator: 0 }]","has_unsafe":true,"name":"Fr::to_big_endian"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fr as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<FieldError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::random"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"interpret\"), disambiguator: 0 }]","has_unsafe":true,"name":"Fq::interpret"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"Fq::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_big_endian\"), disambiguator: 0 }]","has_unsafe":true,"name":"Fq::to_big_endian"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fq as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq2::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq2::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fq2::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"set_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::set_x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"set_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::set_y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"z\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::z"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"set_z\"), disambiguator: 0 }]","has_unsafe":false,"name":"G1::set_z"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as Group>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as Group>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as Group>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as Group>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as Group>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::ops::Mul<Fr>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG1 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG1 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG1 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG1 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG1 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG1::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG1::x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"set_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG1::set_x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG1::y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"set_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG1::set_y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from_jacobian\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG1::from_jacobian"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G1 as std::convert::From<AffineG1>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"set_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::set_x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"set_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::set_y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"z\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::z"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"set_z\"), disambiguator: 0 }]","has_unsafe":false,"name":"G2::set_z"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as Group>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as Group>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as Group>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as Group>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as Group>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::ops::Mul<Fr>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Gt as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Gt as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Gt as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Gt as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"Gt::one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"Gt::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"Gt::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Gt as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"pairing\"), disambiguator: 0 }]","has_unsafe":false,"name":"pairing"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG2 as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG2 as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AffineG2 as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG2::x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"set_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG2::set_x"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG2::y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"set_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG2::set_y"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from_jacobian\"), disambiguator: 0 }]","has_unsafe":false,"name":"AffineG2::from_jacobian"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<G2 as std::convert::From<AffineG2>>::from"}
