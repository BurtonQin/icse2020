{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as contiguous::ContiguousBuffer<T>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as contiguous::ContiguousBuffer<T>>::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as contiguous::ContiguousBuffer<T>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as contiguous::ContiguousBuffer<T>>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as contiguous::ContiguousBuffer<T>>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_buffer\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T>>::with_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T>>::pack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unpack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T>>::unpack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T> as contiguous::ContiguousBuffer<I>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T> as contiguous::ContiguousBuffer<I>>::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T> as contiguous::ContiguousBuffer<I>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T> as contiguous::ContiguousBuffer<I>>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"contiguous\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<contiguous::ContiguousBuffers<T> as contiguous::ContiguousBuffer<I>>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"four_bytes_to_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::four_bytes_to_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eight_bytes_to_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::eight_bytes_to_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ipv4_to_bytes_be\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::ipv4_to_bytes_be"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ipv6_to_bytes_be\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::ipv6_to_bytes_be"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"port_to_bytes_be\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::port_to_bytes_be"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sock_v4_to_bytes_be\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::sock_v4_to_bytes_be"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sock_v6_to_bytes_be\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::sock_v6_to_bytes_be"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes_be_to_ipv4\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::bytes_be_to_ipv4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes_be_to_ipv6\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::bytes_be_to_ipv6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes_be_to_port\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::bytes_be_to_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes_be_to_sock_v4\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::bytes_be_to_sock_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes_be_to_sock_v6\"), disambiguator: 0 }]","has_unsafe":false,"name":"convert::bytes_be_to_sock_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<net::IpAddr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<net::IpAddr as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<net::IpAddr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<net::IpAddr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<net::IpAddr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<net::IpAddr as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_socket_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"net::IpAddr::from_socket_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"net\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default_route_v4\"), disambiguator: 0 }]","has_unsafe":false,"name":"net::default_route_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_sender\"), disambiguator: 0 }]","has_unsafe":false,"name":"send::split_sender::split_sender"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<send::split_sender::SplitSender<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<send::split_sender::SplitSender<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sender_ack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<send::split_sender::SplitSender<S>>::sender_ack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_count_increment\"), disambiguator: 0 }]","has_unsafe":false,"name":"<send::split_sender::SplitSender<S>>::try_count_increment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_send\"), disambiguator: 0 }]","has_unsafe":false,"name":"<send::split_sender::SplitSender<S> as send::TrySender<T>>::try_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"split_sender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ack\"), disambiguator: 0 }]","has_unsafe":false,"name":"send::split_sender::SplitSenderAck::ack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_send\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::sync::mpsc::Sender<T> as send::TrySender<T>>::try_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"send\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_send\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::sync::mpsc::SyncSender<T> as send::TrySender<T>>::try_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::builder::ShaHashBuilder as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::builder::ShaHashBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::builder::ShaHashBuilder::add_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::builder::ShaHashBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::ShaHash::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::ShaHash::from_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::ShaHash::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::ShaHash::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::convert::AsRef<[u8]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::convert::Into<[u8; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::convert::From<[u8; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::cmp::PartialEq<[u8]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::ShaHash as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorRep as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sha::XorRep as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorRep as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sha::XorRep as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorRep as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::XorBits<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::BitRep as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sha::BitRep as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::BitRep as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sha::BitRep as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::BitRep as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::BitRep as std::cmp::PartialEq<sha::XorRep>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"sha::Bits::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sha\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sha::Bits<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"travel_into_future\"), disambiguator: 0 }]","has_unsafe":true,"name":"test::travel_into_future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"travel_into_past\"), disambiguator: 0 }]","has_unsafe":true,"name":"test::travel_into_past"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dummy_ipv4_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::dummy_ipv4_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dummy_ipv6_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::dummy_ipv6_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dummy_socket_addr_v4\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::dummy_socket_addr_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dummy_block_socket_addrs\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::dummy_block_socket_addrs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dummy_node_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::dummy_node_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dummy_block_node_ids\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::dummy_block_node_ids"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sequential\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trans::sequential::SequentialIds<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sequential\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_at\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trans::sequential::SequentialIds<T>>::start_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sequential\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trans::sequential::SequentialIds<T> as trans::TransactionIds<T>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"locally_shuffled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trans::locally_shuffled::LocallyShuffledIds<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"locally_shuffled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_at\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trans::locally_shuffled::LocallyShuffledIds<T>>::start_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"locally_shuffled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"refill_stored_ids\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trans::locally_shuffled::LocallyShuffledIds<T>>::refill_stored_ids"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"locally_shuffled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trans::locally_shuffled::LocallyShuffledIds<T> as trans::TransactionIds<T>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthErrorKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::LengthErrorKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthErrorKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::LengthErrorKind as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::LengthError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthError as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::LengthError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::LengthError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::LengthError::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::LengthError::with_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::LengthError::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::LengthError::index"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"fisher_shuffle\"), disambiguator: 0 }]","has_unsafe":true,"name":"fisher_shuffle"}
