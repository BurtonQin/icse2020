{"def_path":"[DisambiguatedDefPathData { data: Module(\"try_read_full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<try_read_full::TryReadFull<A, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try_read_full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<try_read_full::State<A, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try_read_full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_read_full\"), disambiguator: 0 }]","has_unsafe":false,"name":"try_read_full::try_read_full"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try_read_full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<try_read_full::TryReadFull<A, T> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read_lim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<read_lim::ReadN<A, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read_lim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<read_lim::State<A, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read_lim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_n\"), disambiguator: 0 }]","has_unsafe":false,"name":"read_lim::read_n"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read_lim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<read_lim::ReadN<A, T> as futures::Future>::poll"}
