{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"builder\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::builder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_with_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_edges_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_with_edges_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_empty\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_complete\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_complete_binary_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_complete_binary_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_random_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_random_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_random_tree_with_diameter\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_random_tree_with_diameter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_gn\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_gn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_gn_connected\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_gn_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_gnm\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_gnm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithBuilder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_gnm_connected\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::WithBuilder::new_gnm_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"complete\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"complete_binary_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::complete_binary_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::random_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_tree_with_diameter\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::random_tree_with_diameter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_num_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::max_num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gnm_connected\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::gnm_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gnm\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::gnm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<builder::RandomTreeIter<R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<builder::RandomTreeIter<R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"graph_macro\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::graph_macro"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"graph_prop_macro\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::graph_prop_macro"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"complete\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"complete_binary_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::complete_binary_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::random_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gnm\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::gnm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BuilderTests\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gnm_connected\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::BuilderTests::gnm_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut T as params::ParamDerefMut>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_owned\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as params::IntoOwned<T>>::into_owned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_owned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a T as params::IntoOwned<T>>::into_owned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_owned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut T as params::IntoOwned<T>>::into_owned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<params::Owned<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<params::Owned<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"<params::Owned<T> as params::ParamDerefMut>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":true,"name":"<params::NewVertexProp<'a, G, T> as params::ParamDerefMut>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<params::AllVertices<'a, G> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"params\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<params::AllEdges<'a, G> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_components\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::Components::num_components"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connected_components\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::Components::connected_components"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_connected\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::Components::is_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cut_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::Components::cut_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cut_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::Components::cut_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"IsConnected\"), disambiguator: 0 }]","has_unsafe":false,"name":"algs::components::IsConnected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::components::IsConnected<'a> as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::components::IsConnected<'a> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NumComponents\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::NumComponents"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ConnectedComponents\"), disambiguator: 0 }]","has_unsafe":false,"name":"algs::components::ConnectedComponents"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::components::ConnectedComponents<G, V> as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::ConnectedComponents<G, V> as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_connected\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::ConnectedComponents<G, V>>::is_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_disconnected\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::ConnectedComponents<G, V>>::is_disconnected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"component\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::ConnectedComponents<G, V>>::component"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"num_components\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::components::ConnectedComponents<G, V>>::num_components"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::components::FindCutVertices<G> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutVertices<G> as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutVertices<G> as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutVertices<G> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutVertices<G> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutVertices<G> as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutEdges<G> as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutEdges<G> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::components::FindCutEdges<G> as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cut_vertices_naive\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::cut_vertices_naive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_cut_vertex_naive\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::is_cut_vertex_naive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cut_edges_naive\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::cut_edges_naive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"components\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_cut_edge_naive\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::components::is_cut_edge_naive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_acyclic\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::cycles::Cycles::is_acyclic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_dag\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::cycles::Cycles::is_dag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::cycles::IsAcyclic<'a> as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::cycles::IsAcyclic<'a> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::cycles::IsDag<'a> as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::cycles::IsDag<'a> as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::cycles::IsDag<'a> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"degree_spanning_subgraph\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::degree_spanning_subgraph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"degree_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::degree_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_k_regular\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::is_k_regular"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_regular\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::is_regular"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maximum_out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::maximum_out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minimum_out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::minimum_out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_isolated\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::is_isolated"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Degrees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_pendant\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::degrees::Degrees::is_pendant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"distances\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Distances\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"diameter\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::distances::Distances::diameter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"after_union\"), disambiguator: 0 }]","has_unsafe":false,"name":"algs::kruskal::Visitor::after_union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::AcceptAll as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::AcceptAll as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::AcceptAll as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::AcceptAll as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::AcceptAll as algs::kruskal::Visitor<G>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","has_unsafe":true,"name":"<F as algs::kruskal::Visitor<G>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::kruskal::Iter<'a, G, E, V, U> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kruskal_mst\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::kruskal::Kruskal::kruskal_mst"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kruskal\"), disambiguator: 0 }]","has_unsafe":false,"name":"algs::kruskal::Kruskal::kruskal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"graph\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::KruskalAlg<A, B, C, D>>::graph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::KruskalAlg<A, B, C, D>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"visitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::KruskalAlg<A, B, C, D>>::visitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"unionfind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::kruskal::KruskalAlg<A, B, C, D>>::unionfind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"weight\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::kruskal::KruskalAlg<&'a G, E, V, U>>::weight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"kruskal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::kruskal::KruskalAlg<&'a G, E, V, U> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::paths::Paths::find_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_walk\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::paths::Paths::is_walk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::paths::Paths::is_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RecordPath\"), disambiguator: 0 }]","has_unsafe":false,"name":"algs::paths::RecordPath"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::paths::RecordPath<'a, G> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"paths\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::paths::RecordPath<'a, G> as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prim\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::prim::Prim::prim"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"graph\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::PrimAlg<A, B, C, D, E, F>>::graph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"weight\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::PrimAlg<A, B, C, D, E, F>>::weight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"color\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::PrimAlg<A, B, C, D, E, F>>::color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"parent\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::PrimAlg<A, B, C, D, E, F>>::parent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"queue\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::PrimAlg<A, B, C, D, E, F>>::queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"_marker\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::PrimAlg<A, B, C, D, E, F>>::_marker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::prim::PrimAlg<&'a G, W, C, P, Q, std::marker::PhantomData<T>> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::prim::Iter<'a, G, W, C, P, Q, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::prim::QueueItem<A, B>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::prim::QueueItem<A, B> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::prim::QueueItem<A, B> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::prim::QueueItem<A, B> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_complement\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::sets::Sets::vertices_complement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges_complement\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::sets::Sets::edges_complement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"independent_vertex_set_from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::sets::Sets::independent_vertex_set_from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_independent_vertex_set\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::sets::Sets::is_independent_vertex_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::sets::VerticesComplement<'a, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::sets::EdgesComplement<'a, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::sets::IndependentVertexSetFromIter<'a, G, I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::trees::Trees::is_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tree_diameter\"), disambiguator: 0 }]","has_unsafe":true,"name":"algs::trees::Trees::tree_diameter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"IsTree\"), disambiguator: 0 }]","has_unsafe":false,"name":"algs::trees::IsTree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"<algs::trees::IsTree<'a> as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::trees::IsTree<'a> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algs::trees::IsTree<'a> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as std::convert::AsRef<G>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::end_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"opposite\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::opposite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::WithEdge>::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::VertexList>::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::VertexList>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::EdgeList>::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::EdgeList>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::EdgeList>::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::Adjacency>::out_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::Adjacency>::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as graphs::Incidence>::out_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as choose::Choose>::choose_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_neighbor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as choose::Choose>::choose_out_neighbor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as choose::Choose>::choose_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::subgraph::Subgraph<'a, G> as choose::Choose>::choose_out_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"spanning_subgraph\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graphs::adaptors::subgraph::WithSubgraph<G>>::spanning_subgraph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"empty_spanning_subgraph\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graphs::adaptors::subgraph::WithSubgraph<G>>::empty_spanning_subgraph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"edge_induced_subgraph\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graphs::adaptors::subgraph::WithSubgraph<G>>::edge_induced_subgraph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"induced_subgraph\"), disambiguator: 0 }]","has_unsafe":true,"name":"<G as graphs::adaptors::subgraph::WithSubgraph<G>>::induced_subgraph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::add_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::set_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::add_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::clear_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"replace_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::replace_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G>>::remove_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vec_find_swap_remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::adaptors::spanning_subgraph::vec_find_swap_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as std::convert::AsRef<G>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::WithEdge>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::WithEdge>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::WithEdge>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"end_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::WithEdge>::end_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"opposite\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::WithEdge>::opposite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::WithEdge>::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::VertexList>::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::VertexList>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::EdgeList>::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::EdgeList>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::EdgeList>::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::Adjacency>::out_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::Adjacency>::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as graphs::Incidence>::out_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"choose_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as choose::Choose>::choose_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_neighbor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as choose::Choose>::choose_out_neighbor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"choose_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as choose::Choose>::choose_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adaptors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spanning_subgraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adaptors::spanning_subgraph::SpanningSubgraph<'a, G> as choose::Choose>::choose_out_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::UndirectedEdge<V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::UndirectedEdge<V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::UndirectedEdge<V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::UndirectedEdge<V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::UndirectedEdge<V> as std::cmp::PartialEq<(V, V)>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::UndirectedEdge<V> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::UndirectedEdge<V> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::UndirectedEdge<V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::UndirectedEdge<V> as graphs::adjset::AdjSetEdge<V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::UndirectedEdge<V> as graphs::adjset::AdjSetEdge<V>>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::UndirectedEdge<V> as graphs::adjset::AdjSetEdge<V>>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<(V, V) as graphs::adjset::AdjSetEdge<V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":false,"name":"<(V, V) as graphs::adjset::AdjSetEdge<V>>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":false,"name":"<(V, V) as graphs::adjset::AdjSetEdge<V>>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::AdjSet<V, K> as graphs::WithEdge>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::AdjSet<V, K> as graphs::WithEdge>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::AdjSet<V, K> as graphs::WithEdge>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::AdjSet<V, K> as graphs::WithEdge>::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::VertexList>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::VertexList>::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::EdgeList>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::EdgeList>::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::EdgeList>::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::Adjacency>::out_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::Adjacency>::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K> as graphs::Incidence>::out_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K>>::add_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::AdjSet<V, K>>::add_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors_\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::AdjSet<V, K>>::out_neighbors_"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::adjset::Edges<'a, V, K> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::OutEdges<'a, V, K> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::OutEdges<'a, V, K> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"adjset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::adjset::OutEdges<'a, V, K> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::WithEdge>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::WithEdge>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::WithEdge>::end_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::WithEdge>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::WithEdge>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::WithEdge>::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as graphs::VertexList>::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as graphs::VertexList>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::EdgeList>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::EdgeList>::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as graphs::EdgeList>::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as graphs::Adjacency>::out_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as graphs::Adjacency>::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as graphs::Incidence>::out_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as choose::Choose>::choose_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_neighbor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as choose::Choose>::choose_out_neighbor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as choose::Choose>::choose_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::Complete<K> as choose::Choose>::choose_out_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::CVertexIndexProp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::CVertexIndexProp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::CVertexIndexProp as props::PropGet<u32>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as props::WithVertexIndexProp>::vertex_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::CEdgeIndexProp<E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::CEdgeIndexProp<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::CEdgeIndexProp<E> as props::PropGet<E>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"edge_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::Complete<K> as props::WithEdgeIndexProp>::edge_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::MaxNone<E> as fera_optional::BuildNone<E>>::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::MaxNone<E> as fera_optional::BuildNone<E>>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::COutEdgeIter<E>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::complete::COutEdgeIter<E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::COutEdgeIter<E> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::COutEdgeIter<E> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as graphs::complete::EdgeImpl>::from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"to_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as graphs::complete::EdgeImpl>::to_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as graphs::complete::EdgeImpl>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"ends\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as graphs::complete::EdgeImpl>::ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::UndirectedEdge as graphs::complete::EdgeImpl>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as graphs::complete::EdgeImpl>::from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"to_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as graphs::complete::EdgeImpl>::to_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as graphs::complete::EdgeImpl>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ends\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as graphs::complete::EdgeImpl>::ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::complete::DirectedEdge as graphs::complete::EdgeImpl>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::StaticDirectedEdge<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"max_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as num_traits::Bounded>::max_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"min_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as num_traits::Bounded>::min_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as graphs::static_::EdgeImpl>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_checked\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as graphs::static_::EdgeImpl>::new_checked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as graphs::static_::EdgeImpl>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as graphs::static_::EdgeImpl>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticDirectedEdge<N> as graphs::static_::EdgeImpl>::to_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::StaticDirectedEdge<N> as graphs::static_::EdgeImpl>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"max_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as num_traits::Bounded>::max_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"min_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as num_traits::Bounded>::min_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as graphs::static_::EdgeImpl>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_checked\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::StaticUndirectedEdge<N> as graphs::static_::EdgeImpl>::new_checked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as graphs::static_::EdgeImpl>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as graphs::static_::EdgeImpl>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as graphs::static_::EdgeImpl>::to_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as graphs::static_::EdgeImpl>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticUndirectedEdge<N> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"inc\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K>>::inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_inc\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K>>::get_inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticBuilder<V, K> as builder::Builder>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticBuilder<V, K> as builder::Builder>::add_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"finalize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticBuilder<V, K> as builder::Builder>::finalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"finalize_\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::StaticBuilder<V, K> as builder::Builder>::finalize_"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::WithEdge>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::WithEdge>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::WithEdge>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::WithEdge>::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as graphs::VertexList>::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::VertexList>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as graphs::EdgeList>::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as graphs::EdgeList>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::EdgeList>::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::Adjacency>::out_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::Adjacency>::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as graphs::Incidence>::out_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SEdgeIter<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SEdgeIter<K> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SEdgeIter<K> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SEdgeIter<K> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SVertexIndexProp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SVertexIndexProp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::SVertexIndexProp as props::PropGet<V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as props::WithVertexIndexProp>::vertex_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SEdgeIndexProp<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::SEdgeIndexProp<K> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::SEdgeIndexProp<K> as props::PropGet<<K as graphs::static_::StaticEdgeKind>::Edge>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"edge_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::static_::Static<V, K> as props::WithEdgeIndexProp>::edge_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"choose_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as choose::Choose>::choose_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_neighbor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as choose::Choose>::choose_out_neighbor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"choose_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as choose::Choose>::choose_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::static_::Static<V, K> as choose::Choose>::choose_out_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as graphs::static_::Num>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as graphs::static_::Num>::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"from_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as graphs::static_::Num>::from_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as graphs::static_::Num>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u16 as graphs::static_::Num>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u16 as graphs::static_::Num>::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"from_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u16 as graphs::static_::Num>::from_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u16 as graphs::static_::Num>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as graphs::static_::Num>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as graphs::static_::Num>::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"from_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as graphs::static_::Num>::from_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as graphs::static_::Num>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u64 as graphs::static_::Num>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u64 as graphs::static_::Num>::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"from_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u64 as graphs::static_::Num>::from_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u64 as graphs::static_::Num>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as graphs::static_::Num>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as graphs::static_::Num>::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"from_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as graphs::static_::Num>::from_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"static_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as graphs::static_::Num>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::common::OutNeighborFromOutEdge<'a, G, I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::common::OutNeighborFromOutEdge<'a, G, I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::common::OutNeighborFromOutEdge<'a, G, I> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::common::OutNeighborFromOutEdge<'a, G, I> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_none\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithVertex for &'a G>::vertex_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_some\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithVertex for &'a G>::vertex_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"end_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::end_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"opposite\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::opposite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"edge_none\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::edge_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"edge_some\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::WithEdge for &'a G>::edge_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::VertexList for &'a G>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::VertexList for &'a G>::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::EdgeList for &'a G>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::EdgeList for &'a G>::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::EdgeList for &'a G>::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"out_neighbors\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::Adjacency for &'a G>::out_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::Adjacency for &'a G>::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl graphs::Incidence for &'a G>::out_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl props::WithVertexIndexProp for &'a G>::vertex_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"edge_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl props::WithEdgeIndexProp for &'a G>::edge_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::ref_::RefVertexProp<G, T> as std::ops::Index<<G as graphs::WithVertex>::Vertex>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::ref_::RefVertexProp<G, T> as std::ops::IndexMut<<G as graphs::WithVertex>::Vertex>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::ref_::RefVertexProp<G, T> as props::VertexPropMutNew<&'a G, T>>::new_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl props::WithVertexProp<T> for &'a G>::default_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::ref_::RefEdgeProp<G, T> as std::ops::Index<<G as graphs::WithEdge>::Edge>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::ref_::RefEdgeProp<G, T> as std::ops::IndexMut<<G as graphs::WithEdge>::Edge>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"new_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::ref_::RefEdgeProp<G, T> as props::EdgePropMutNew<&'a G, T>>::new_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"default_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl props::WithEdgeProp<T> for &'a G>::default_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"choose_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl choose::Choose for &'a G>::choose_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_neighbor\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl choose::Choose for &'a G>::choose_out_neighbor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"choose_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl choose::Choose for &'a G>::choose_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ref_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::ref_::<impl choose::Choose for &'a G>::choose_out_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Orientation as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Orientation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Orientation as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Orientation as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Orientation as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Orientation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_directed\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::Orientation::is_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_undirected\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::Orientation::is_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UniformEdgeKind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_directed\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::UniformEdgeKind::is_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UniformEdgeKind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_undirected\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::UniformEdgeKind::is_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Directed as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Directed as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Directed as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Directed as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Directed as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Directed as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Directed as graphs::UniformEdgeKind>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Undirected as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Undirected as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Undirected as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Undirected as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Undirected as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Undirected as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"orientation\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Undirected as graphs::UniformEdgeKind>::orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Mixed as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Mixed as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<graphs::Mixed as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Mixed as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Mixed as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::Mixed as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithVertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_none\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithVertex::vertex_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithVertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_some\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithVertex::vertex_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithVertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithVertex::vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithVertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_prop_from_fn\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithVertex::vertex_prop_from_fn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::end_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::with_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"opposite\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::opposite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_incident\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::is_incident"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_reverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"graphs::WithEdge::get_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_none\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::edge_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_some\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::edge_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_prop_from_fn\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::WithEdge::edge_prop_from_fn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"VertexList\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::VertexList::num_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"EdgeList\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::EdgeList::edges_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"EdgeList\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges_with_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::EdgeList::edges_with_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"EdgeList\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_edges\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::EdgeList::num_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"EdgeList\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::EdgeList::get_edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"EdgeList\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_by_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::EdgeList::edge_by_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Adjacency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"out_degree\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::Adjacency::out_degree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Incidence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::Incidence::out_edges_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Incidence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"out_edges_with_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"graphs::Incidence::out_edges_with_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<<G as graphs::WithEdge>::Edge as graphs::Ends<'a, G, (<G as graphs::WithVertex>::Vertex, <G as graphs::WithVertex>::Vertex)>>::_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<<G as graphs::WithEdge>::Edge as graphs::Ends<'a, G, (<G as graphs::WithEdge>::Edge, <G as graphs::WithVertex>::Vertex, <G as graphs::WithVertex>::Vertex)>>::_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"_ends\"), disambiguator: 0 }]","has_unsafe":true,"name":"<I as graphs::Ends<'a, G, graphs::EdgesEnds<'a, G, <I as std::iter::IntoIterator>::IntoIter>>>::_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::EdgesEnds<'a, G, I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::EdgesEnds<'a, G, I> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::EdgesWithEnds<'a, G, I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<graphs::EdgesWithEnds<'a, G, I> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::array::ArrayProp<P, D> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::array::ArrayProp<P, D> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::array::ArrayProp<P, D>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::array::ArrayProp<P, D> as props::PropGet<I>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::array::ArrayProp<P, D> as std::ops::Index<I>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::array::ArrayProp<P, D> as std::ops::IndexMut<I>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::array::ArrayProp<<G as props::WithVertexIndexProp>::VertexIndexProp, std::vec::Vec<T>> as props::VertexPropMutNew<G, T>>::new_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::array::ArrayProp<<G as props::WithEdgeIndexProp>::EdgeIndexProp, std::vec::Vec<T>> as props::EdgePropMutNew<G, T>>::new_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::delegate::DelegateVertexProp<G, T> as std::ops::Index<<G as graphs::WithVertex>::Vertex>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::delegate::DelegateVertexProp<G, T> as std::ops::IndexMut<<G as graphs::WithVertex>::Vertex>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::delegate::DelegateVertexProp<D, T> as props::VertexPropMutNew<G, T>>::new_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::delegate::DelegateEdgeProp<G, T> as std::ops::Index<<G as graphs::WithEdge>::Edge>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::delegate::DelegateEdgeProp<G, T> as std::ops::IndexMut<<G as graphs::WithEdge>::Edge>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::delegate::DelegateEdgeProp<D, T> as props::EdgePropMutNew<G, T>>::new_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fn_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::fn_::FnProp<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fn_\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::fn_::FnProp<F> as props::PropGet<I>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::hashmap::HashMapProp<I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::hashmap::HashMapProp<I, T, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::hashmap::HashMapProp<I, T, S> as std::ops::Index<I>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::hashmap::HashMapProp<I, T, S> as std::ops::IndexMut<I>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::hashmap::HashMapProp<<G as graphs::WithVertex>::Vertex, T, S> as props::VertexPropMutNew<G, T>>::new_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::hashmap::HashMapProp<<G as graphs::WithEdge>::Edge, T, S> as props::EdgePropMutNew<G, T>>::new_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ignore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::ignore::IgnoreWriteProp<T> as std::ops::Index<I>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ignore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::ignore::IgnoreWriteProp<T> as std::ops::IndexMut<I>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ignore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::ignore::IgnoreWriteProp<T> as props::VertexPropMutNew<G, T>>::new_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ignore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::ignore::IgnoreWriteProp<T> as props::EdgePropMutNew<G, T>>::new_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PropGet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":false,"name":"props::PropGet::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PropGet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"props::PropGet::by_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a P as props::PropGet<K>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PropIndexMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_values_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"props::PropIndexMut::set_values_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PropIndexMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_values\"), disambiguator: 0 }]","has_unsafe":true,"name":"props::PropIndexMut::set_values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithVertexProp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default_vertex_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"props::WithVertexProp::default_vertex_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithVertexProp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default_vertex_prop_from_fn\"), disambiguator: 0 }]","has_unsafe":true,"name":"props::WithVertexProp::default_vertex_prop_from_fn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdgeProp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default_edge_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"props::WithEdgeProp::default_edge_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithEdgeProp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default_edge_prop_from_fn\"), disambiguator: 0 }]","has_unsafe":true,"name":"props::WithEdgeProp::default_edge_prop_from_fn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::Color as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::Color as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::Color as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::Color as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::Color as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<props::Color as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"props\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<props::Map<P, F> as props::PropGet<K>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::control::Control as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::control::Control as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::control::Control as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::control::Control as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::control::Control as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::control::Control as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::control::Control as std::convert::From<()>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"continue_if\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::control::continue_if"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"break_if\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::control::break_if"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::Visitor::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut V as traverse::visitor::Visitor<G>>::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::EmptyVisitor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::EmptyVisitor as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::EmptyVisitor as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::EmptyVisitor as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B) as traverse::visitor::Visitor<G>>::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C) as traverse::visitor::Visitor<G>>::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(A, B, C, D) as traverse::visitor::Visitor<G>>::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::TraverseEvent<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::TraverseEvent<G> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::TraverseEvent<G> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::TraverseEvent<G> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::TraverseEvent<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnTraverseEvent<F> as traverse::visitor::Visitor<G>>::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"visit_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<F as traverse::visitor::VisitVertex<G>>::visit_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnDiscoverRootVertex<V> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"finish_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnFinishRootVertex<V> as traverse::visitor::Visitor<G>>::finish_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"discover_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnDiscoverVertex<V> as traverse::visitor::Visitor<G>>::discover_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"finish_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnFinishVertex<V> as traverse::visitor::Visitor<G>>::finish_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"visit_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<F as traverse::visitor::VisitEdge<G>>::visit_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"discover_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnDiscoverEdge<V> as traverse::visitor::Visitor<G>>::discover_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"finish_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnFinishEdge<V> as traverse::visitor::Visitor<G>>::finish_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnDiscoverTreeEdge<V> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnFinishTreeEdge<V> as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"discover_back_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnDiscoverBackEdge<V> as traverse::visitor::Visitor<G>>::discover_back_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"discover_cross_or_forward_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::OnDiscoverCrossOrBackEdge<V> as traverse::visitor::Visitor<G>>::discover_cross_or_forward_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add1\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as traverse::visitor::Counter>::add1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"visit_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::Add1<'a, T> as traverse::visitor::VisitVertex<G>>::visit_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"visit_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::Add1<'a, T> as traverse::visitor::VisitEdge<G>>::visit_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::Time<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_and_inc\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::Time<T>>::get_and_inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"visit_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::StampTime<'a, T, P> as traverse::visitor::VisitVertex<G>>::visit_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RecordDistance\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::RecordDistance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::RecordDistance<'a, P, T> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::RecordDistance<'a, P, T> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::RecordParent<'a, P> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::RecordParent<'a, P> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"discover_root_vertex\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::RecordParentEdge<'a, P> as traverse::visitor::Visitor<G>>::discover_root_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::RecordParentEdge<'a, P> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FarthestVertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::visitor::FarthestVertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::FarthestVertex<'a, G> as traverse::visitor::Visitor<G>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"finish_tree_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::visitor::FarthestVertex<'a, G> as traverse::visitor::Visitor<G>>::finish_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"visitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"discover_tree_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::visitor::FarthestVertex<'a, G> as traverse::visitor::Visitor<G>>::discover_tree_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bfs\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::bfs::Bfs::bfs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"graph\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::bfs::BfsAlg<A, B, C, D, E>>::graph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::bfs::BfsAlg<A, B, C, D, E>>::visitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"roots\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::bfs::BfsAlg<A, B, C, D, E>>::roots"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"color\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::bfs::BfsAlg<A, B, C, D, E>>::color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"queue\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::bfs::BfsAlg<A, B, C, D, E>>::queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::bfs::BfsAlg<&'a G, V, R, C, Q>>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::bfs::BfsAlg<&'a G, V, R, C, Q>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ignore_color_changes\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::bfs::BfsAlg<&'a G, V, R, C, Q>>::ignore_color_changes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bfs_visit\"), disambiguator: 0 }]","has_unsafe":true,"name":"traverse::bfs::bfs_visit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dfs\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::dfs::Dfs::dfs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"graph\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::dfs::DfsAlg<A, B, C, D, E>>::graph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::dfs::DfsAlg<A, B, C, D, E>>::visitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"roots\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::dfs::DfsAlg<A, B, C, D, E>>::roots"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"color\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::dfs::DfsAlg<A, B, C, D, E>>::color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"stack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::dfs::DfsAlg<A, B, C, D, E>>::stack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::dfs::DfsAlg<&'a G, V, R, C, S>>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::dfs::DfsAlg<&'a G, V, R, C, S>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ignore_color_changes\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::dfs::DfsAlg<&'a G, V, R, C, S>>::ignore_color_changes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dfs_visit\"), disambiguator: 0 }]","has_unsafe":true,"name":"traverse::dfs::dfs_visit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"RecursiveDfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recursive_dfs\"), disambiguator: 0 }]","has_unsafe":false,"name":"traverse::recursive_dfs::RecursiveDfs::recursive_dfs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"graph\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<A, B, C, D>>::graph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<A, B, C, D>>::visitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"roots\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<A, B, C, D>>::roots"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"color\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<A, B, C, D>>::color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<&'a G, V, R, C>>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","has_unsafe":false,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<&'a G, V, R, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ignore_color_changes\"), disambiguator: 0 }]","has_unsafe":true,"name":"<traverse::recursive_dfs::RecursiveDfsAlg<&'a G, V, R, C>>::ignore_color_changes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"recursive_dfs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recursive_dfs_visit\"), disambiguator: 0 }]","has_unsafe":true,"name":"traverse::recursive_dfs::recursive_dfs_visit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traverse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Traverser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"traverse_vertices\"), disambiguator: 0 }]","has_unsafe":true,"name":"traverse::Traverser::traverse_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_vertex_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"choose::Choose::choose_vertex_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_neighbor_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"choose::Choose::choose_out_neighbor_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_edge_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"choose::Choose::choose_edge_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_out_edge_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"choose::Choose::choose_out_edge_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_walk\"), disambiguator: 0 }]","has_unsafe":true,"name":"choose::Choose::random_walk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<choose::ChooseVertexIter<'a, G, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<choose::ChooseOutNeighborIter<'a, G, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<choose::ChooseEdgeIter<'a, G, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<choose::ChooseOutEdgeIter<'a, G, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"choose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<choose::RandomWalk<'a, G, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_sorted_by_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<[T] as ext::GraphsSliceExt<T>>::is_sorted_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by_prop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<[T] as ext::GraphsSliceExt<T>>::sort_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_unstable_by_prop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<[T] as ext::GraphsSliceExt<T>>::sort_unstable_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binary_search_by_prop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<[T] as ext::GraphsSliceExt<T>>::binary_search_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sorted_by_prop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as ext::GraphsVecExt<T>>::sorted_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sorted_unstable_by_prop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as ext::GraphsVecExt<T>>::sorted_unstable_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sets::FastVecSet<T, P>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sets::FastVecSet<T, P>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sets::FastVecSet<T, P>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::choose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P>>::set_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sets::FastVecSet<T, P> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a sets::FastVecSet<T, P> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<T, P> as std::iter::Extend<T>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_vertex_set\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<usize, std::vec::Vec<usize>>>::new_vertex_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sets\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_edge_set\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sets::FastVecSet<usize, std::vec::Vec<usize>>>::new_edge_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unionfind::UnionFind<G>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"in_same_set\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unionfind::UnionFind<G>>::in_same_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_set\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unionfind::UnionFind<G>>::find_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_sets\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unionfind::UnionFind<G>>::num_sets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unionfind::UnionFind<G>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"WithUnionFind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_unionfind\"), disambiguator: 0 }]","has_unsafe":true,"name":"unionfind::WithUnionFind::new_unionfind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unionfind::NewUnionFind<'a, G> as params::ParamDerefMut>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_by_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"fun::min_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_by_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"fun::max_by_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"fun::min_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"fun::max_prop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum_prop\"), disambiguator: 0 }]","has_unsafe":true,"name":"fun::sum_prop"}
