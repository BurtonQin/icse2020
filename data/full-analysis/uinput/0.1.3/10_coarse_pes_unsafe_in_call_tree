{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::convert::From<std::ffi::NulError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::convert::From<nix::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::convert::From<udev::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Keyboard as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Keyboard as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Keyboard as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Keyboard as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Keyboard as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Keyboard as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Keyboard as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Keyboard as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Keyboard as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Key as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Key as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Key as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Key as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Key as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Key::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Key as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Key as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Key as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPad as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::KeyPad as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPad as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::KeyPad as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPad as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPadVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPadVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::KeyPad::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPad as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPad as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::KeyPad as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Misc as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Misc as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Misc as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Misc as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Misc as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::MiscVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::MiscVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Misc::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Misc as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Misc as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Misc as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Function as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Function as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Function as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Function as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Function as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::FunctionVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::FunctionVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Function::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Function as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Function as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Function as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Braille as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Braille as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Braille as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Braille as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Braille as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::BrailleVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::BrailleVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Braille::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Braille as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Braille as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Braille as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Numeric as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Numeric as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Numeric as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Numeric as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Numeric as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::NumericVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::NumericVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Numeric::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Numeric as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Numeric as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Numeric as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPad as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::TouchPad as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPad as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::TouchPad as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPad as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPadVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPadVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::TouchPad::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPad as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPad as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::TouchPad as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Camera as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Camera as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Camera as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Camera as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Camera as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::CameraVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::CameraVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Camera::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Camera as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Camera as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Camera as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Attendant as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Attendant as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Attendant as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::Attendant as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Attendant as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::AttendantVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::AttendantVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::Attendant::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Attendant as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Attendant as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::Attendant as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssist as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::InputAssist as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssist as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::keyboard::InputAssist as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssist as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssistVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssistVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::keyboard::InputAssist::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssist as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssist as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::keyboard::InputAssist as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Controller as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Controller as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Controller as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Controller as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Controller as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Controller as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Controller as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Controller as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Controller as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Misc as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Misc as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Misc as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Misc as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Misc as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::MiscVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::MiscVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::Misc::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Misc as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Misc as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Misc as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Mouse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Mouse as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Mouse as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Mouse as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Mouse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::MouseVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::MouseVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::Mouse::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Mouse as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Mouse as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStick as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::JoyStick as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStick as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::JoyStick as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStick as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStickVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStickVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::JoyStick::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStick as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStick as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::JoyStick as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePad as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::GamePad as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePad as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::GamePad as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePad as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePadVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePadVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::GamePad::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePad as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePad as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::GamePad as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Digi as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Digi as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Digi as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Digi as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Digi as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DigiVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DigiVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::Digi::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Digi as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Digi as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Digi as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Wheel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Wheel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Wheel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::Wheel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Wheel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::WheelVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::WheelVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::Wheel::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Wheel as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Wheel as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::Wheel as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPad as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::DPad as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPad as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::DPad as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPad as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPadVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPadVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::DPad::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPad as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPad as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::DPad as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::TriggerHappy as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappy as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::controller::TriggerHappy as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappyVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappyVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::controller::TriggerHappy::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappy as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappy as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"controller\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::controller::TriggerHappy as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Relative as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Relative as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Relative as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Relative as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Relative as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Relative as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Relative as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Relative as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Relative as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Position as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Position as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Position as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Position as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Position as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::PositionVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::PositionVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::relative::Position::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Position as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Position as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Position as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Wheel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Wheel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Wheel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::relative::Wheel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Wheel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::WheelVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::WheelVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::relative::Wheel::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Wheel as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Wheel as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"relative\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::relative::Wheel as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Absolute as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Absolute as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Absolute as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Absolute as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Absolute as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Absolute as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Absolute as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Absolute as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Absolute as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Position as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Position as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Position as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Position as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Position as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::PositionVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::PositionVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::absolute::Position::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Position as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Position as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Position as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Wheel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Wheel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Wheel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Wheel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Wheel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::WheelVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::WheelVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::absolute::Wheel::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Wheel as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Wheel as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Wheel as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Hat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Hat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Hat as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Hat as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Hat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::HatVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::HatVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::absolute::Hat::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Hat as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Hat as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Hat as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Digi as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Digi as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Digi as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Digi as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Digi as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::DigiVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::DigiVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::absolute::Digi::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Digi as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Digi as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Digi as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Multi as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Multi as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Multi as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::absolute::Multi as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Multi as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::MultiVariants as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::MultiVariants as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"iter_variants\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::absolute::Multi::iter_variants"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Multi as std::convert::Into<event::Event>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Multi as event::Kind>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"absolute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::absolute::Multi as event::Code>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::builder::Builder::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::builder::Builder::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::builder::Builder::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bus\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::bus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vendor\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::vendor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"product\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"version\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"event\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::builder::Builder::event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fuzz\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::fuzz"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flat\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::builder::Builder::flat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::builder::Builder::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"device::device::Device::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"synchronize\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::synchronize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"press\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::press"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"release\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::release"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"click\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::click"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","has_unsafe":true,"name":"device::device::Device::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<device::device::Device as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"default"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"open"}
