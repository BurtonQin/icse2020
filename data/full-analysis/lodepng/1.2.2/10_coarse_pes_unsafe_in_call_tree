{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::ColorType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::ColorType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::ColorType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::ColorType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::ColorMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::ColorMode as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_color_mode\"), disambiguator: 0 }]","has_unsafe":true,"name":"ffi::ColorType::to_color_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::Time as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::Time as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::FilterStrategy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::FilterStrategy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::FilterStrategy as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::FilterStrategy as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::ColorMode>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"colortype\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::ColorMode>::colortype"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bitdepth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::ColorMode>::bitdepth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_bitdepth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::ColorMode>::set_bitdepth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette_clear\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::palette_clear"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::palette_add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::palette"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::palette_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bpp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::bpp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"channels\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::channels"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_greyscale_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::is_greyscale_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_alpha_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::is_alpha_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_palette_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::is_palette_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_palette_alpha\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::has_palette_alpha"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"can_have_alpha\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::can_have_alpha"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_size\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::ColorMode>::raw_size"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clear_text\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::clear_text"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_text\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::add_text"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clear_itext\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::clear_itext"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_itext\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::add_itext"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"append_chunk\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::append_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"create_chunk\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::create_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Info>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unknown_chunks\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::Info>::unknown_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Chunks<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_auto_convert\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::set_auto_convert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_filter_strategy\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::set_filter_strategy"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::info_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info_raw_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::info_raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info_png\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::info_png"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info_png_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::info_png_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"color_convert\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::color_convert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"read_text_chunks\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::read_text_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remember_unknown_chunks\"), disambiguator: 0 }]","has_unsafe":false,"name":"State::remember_unknown_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_icc\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::get_icc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decode_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::decode_file"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"inspect\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::inspect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"State::encode_file"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<State as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<State as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Grey<ComponentType> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Grey<ComponentType> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Grey<ComponentType> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Grey<ComponentType> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Grey<ComponentType> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GreyAlpha<ComponentType> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<GreyAlpha<ComponentType> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GreyAlpha<ComponentType> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<GreyAlpha<ComponentType> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<GreyAlpha<ComponentType> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Grey<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<GreyAlpha<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Image as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::Error>::as_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"to_result\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::Error>::to_result"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::convert::From<ffi::Error> for std::result::Result<(), ffi::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl std::fmt::Debug for ffi::Error>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl std::fmt::Display for ffi::Error>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl std::error::Error for ffi::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::convert::From<std::io::Error> for ffi::Error>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ChunkPosition as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ChunkPosition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ChunkPosition as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Bitmap<PixelType> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"required_size\"), disambiguator: 0 }]","has_unsafe":true,"name":"required_size"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"save_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"save_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"load_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"load_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode_memory\"), disambiguator: 0 }]","has_unsafe":true,"name":"decode_memory"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode32\"), disambiguator: 0 }]","has_unsafe":true,"name":"decode32"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode24\"), disambiguator: 0 }]","has_unsafe":true,"name":"decode24"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"decode_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode32_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"decode32_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode24_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"decode24_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"with_buffer_for_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"with_buffer_for_type"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode_memory\"), disambiguator: 0 }]","has_unsafe":true,"name":"encode_memory"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode32\"), disambiguator: 0 }]","has_unsafe":true,"name":"encode32"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode24\"), disambiguator: 0 }]","has_unsafe":true,"name":"encode24"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"encode_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode32_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"encode32_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode24_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"encode24_file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"convert\"), disambiguator: 0 }]","has_unsafe":true,"name":"convert"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"auto_choose_color\"), disambiguator: 0 }]","has_unsafe":true,"name":"auto_choose_color"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::name"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::is_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_ancillary\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::is_ancillary"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_private\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::is_private"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_safe_to_copy\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::is_safe_to_copy"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::data"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"data_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::data_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"check_crc\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::check_crc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"generate_crc\"), disambiguator: 0 }]","has_unsafe":true,"name":"Chunk::generate_crc"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"zlib_compress\"), disambiguator: 0 }]","has_unsafe":true,"name":"zlib_compress"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"zlib_decompress\"), disambiguator: 0 }]","has_unsafe":true,"name":"zlib_decompress"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"deflate\"), disambiguator: 0 }]","has_unsafe":true,"name":"deflate"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::CompressSettings>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl ffi::DecompressSettings>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::default::Default for ffi::DecompressSettings>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::EncoderSettings>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl ffi::DecoderSettings>::new"}
