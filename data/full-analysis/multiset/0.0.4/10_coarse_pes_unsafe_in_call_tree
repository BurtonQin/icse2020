{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"total_elements\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::total_elements"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"distinct_elements\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::distinct_elements"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::insert_times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::remove_times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_all\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::remove_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_of\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multiset::HashMultiSet<K>>::count_of"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<multiset::HashMultiSet<T> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<multiset::HashMultiSet<T> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multiset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<multiset::HashMultiSet<A> as std::iter::FromIterator<A>>::from_iter"}
