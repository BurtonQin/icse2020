{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Automaton\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::Automaton::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Automaton\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::Automaton::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Automaton\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::Automaton::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Automaton\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_overlapping\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::Automaton::find_overlapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Automaton\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stream_find\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::Automaton::stream_find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Automaton\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stream_find_overlapping\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::Automaton::stream_find_overlapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a A as autiter::Automaton<P>>::next_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a A as autiter::Automaton<P>>::has_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a A as autiter::Automaton<P>>::start_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"patterns\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a A as autiter::Automaton<P>>::patterns"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pattern\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a A as autiter::Automaton<P>>::pattern"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a A as autiter::Automaton<P>>::get_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Match as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Match as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Match as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Match as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Match as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Match as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Matches<'a, 's, P, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"step_to_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::step_to_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_to_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"autiter::skip_to_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip1\"), disambiguator: 0 }]","has_unsafe":true,"name":"autiter::skip1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip2\"), disambiguator: 0 }]","has_unsafe":true,"name":"autiter::skip2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip3\"), disambiguator: 0 }]","has_unsafe":true,"name":"autiter::skip3"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::Matches<'a, 's, P, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::StreamMatches<'a, R, P, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::StreamMatches<'a, R, P, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::MatchesOverlapping<'a, 's, P, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::MatchesOverlapping<'a, 's, P, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::StreamMatchesOverlapping<'a, R, P, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autiter::StreamMatchesOverlapping<'a, R, P, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"memory_usage\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P>>::memory_usage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"heap_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P>>::heap_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P>>::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_states\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P>>::num_states"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_state\"), disambiguator: 0 }]","has_unsafe":true,"name":"<full::FullAcAutomaton<P> as autiter::Automaton<P>>::next_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P> as autiter::Automaton<P>>::get_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"has_match\"), disambiguator: 0 }]","has_unsafe":true,"name":"<full::FullAcAutomaton<P> as autiter::Automaton<P>>::has_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P> as autiter::Automaton<P>>::start_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"patterns\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P> as autiter::Automaton<P>>::patterns"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pattern\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P> as autiter::Automaton<P>>::pattern"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"build_matrix\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P>>::build_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"full\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<full::FullAcAutomaton<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_transitions\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::with_transitions"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_full\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::into_full"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"num_states\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::num_states"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"heap_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::heap_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as autiter::Automaton<P>>::next_state"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as autiter::Automaton<P>>::get_match"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"has_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as autiter::Automaton<P>>::has_match"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as autiter::Automaton<P>>::start_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"patterns\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as autiter::Automaton<P>>::patterns"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pattern\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as autiter::Automaton<P>>::pattern"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fill\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::fill"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T>>::add_state"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T>>::goto"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T>>::set_goto"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"heap_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T>>::heap_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dense as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dense as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<DenseChoice as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<DenseChoice as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dense as Transitions>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dense as Transitions>::goto"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dense as Transitions>::set_goto"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"heap_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dense as Transitions>::heap_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Sparse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Sparse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Sparse as Transitions>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Sparse as Transitions>::goto"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Sparse as Transitions>::set_goto"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"heap_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Sparse as Transitions>::heap_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<S> as std::iter::FromIterator<S>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<P, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"debug\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T>>::debug"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"goto_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T>>::goto_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<State<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AcAutomaton<std::string::String, T>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"vec_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"vec_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"usize_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"usize_bytes"}
