{"def_path":"[DisambiguatedDefPathData { data: Module(\"env\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<env::Env as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"env\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<env::Env as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"env\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<env::Env as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"env\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<env::Env as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"env\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"env::Env::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BenvError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BenvError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BenvError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"load\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"load::load_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"load\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_lines_reverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"load::read_lines_reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"load\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"load::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"load\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":false,"name":"load::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"load\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_comment\"), disambiguator: 0 }]","has_unsafe":false,"name":"load::is_comment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"run\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"run::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"run\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_program_and_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"run::split_program_and_args"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Args as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Args as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"main\"), disambiguator: 0 }]","has_unsafe":true,"name":"main"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"print_user_friendly_error_and_exit\"), disambiguator: 0 }]","has_unsafe":false,"name":"print_user_friendly_error_and_exit"}
