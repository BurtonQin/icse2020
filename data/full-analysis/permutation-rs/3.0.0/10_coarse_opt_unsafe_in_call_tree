{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::permutation::Permutation::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as group::GroupElement>::is_identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as group::GroupElement>::times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as group::GroupElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"act_on\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as group::GroupAction>::act_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::permutation::Permutation as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"permutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cycles\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::permutation::cycles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::free::Word::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"generator\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::free::Word::generator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::free::Word::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::free::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as group::GroupElement>::is_identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as group::GroupElement>::times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as group::GroupElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"free\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::free::Word as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<group::tree::SLP as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<group::tree::SLP as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<group::tree::SLP as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::tree::SLP::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as group::GroupElement>::is_identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as group::GroupElement>::times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as group::GroupElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::tree::SLP as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::special::SLPPermutation::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::special::SLPPermutation::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as group::GroupElement>::is_identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"times\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as group::GroupElement>::times"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as group::GroupElement>::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"special\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"act_on\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::special::SLPPermutation as group::GroupAction>::act_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"calculation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"elements_generated_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::calculation::elements_generated_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"calculation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::calculation::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"calculation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fact\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::calculation::fact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Group<Domain, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Group<Domain, G>>::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_member\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Group<Domain, G>>::is_member"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"strip\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Group<Domain, G>>::strip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_base\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::find_base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Group<Domain, G> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::BaseStrongGeneratorLevel<Domain, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"has_transversal_for\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::BaseStrongGeneratorLevel<Domain, G>>::has_transversal_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"transversal_for\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::BaseStrongGeneratorLevel<Domain, G>>::transversal_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::BaseStrongGeneratorLevel<Domain, G>>::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_stabilizers\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::add_to_stabilizers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::BaseStrongGeneratorLevel<Domain, G> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transversal_for\"), disambiguator: 0 }]","has_unsafe":false,"name":"group::transversal_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Morphism<G, H>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","has_unsafe":false,"name":"<group::Morphism<G, H>>::transform"}
