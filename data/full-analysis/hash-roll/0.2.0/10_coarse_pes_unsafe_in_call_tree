{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::RollSum as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::RollSum as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::RollSum as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"digest\"), disambiguator: 0 }]","has_unsafe":false,"name":"bup::RollSum::digest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"bup::RollSum::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"roll_byte\"), disambiguator: 0 }]","has_unsafe":false,"name":"bup::RollSum::roll_byte"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"roll\"), disambiguator: 0 }]","has_unsafe":false,"name":"bup::RollSum::roll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","has_unsafe":false,"name":"bup::RollSum::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"at_split\"), disambiguator: 0 }]","has_unsafe":false,"name":"bup::RollSum::at_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::RollSum as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"find_chunk_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bup::Bup as Splitter>::find_chunk_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bup::Bup as Splitter>::next_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::Zpaq as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<zpaq::Zpaq as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<zpaq::Zpaq as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<zpaq::Zpaq as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::Zpaq as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fragment_ave_from_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::fragment_ave_from_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fragment_ave_from_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::fragment_ave_from_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"range_from_fragment_ave\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::range_from_fragment_ave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"range_from_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::range_from_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_hash_from_fragment_ave\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::max_hash_from_fragment_ave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::with_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_average_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::with_average_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_max_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::with_max_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_average_and_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::with_average_and_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"average_block_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::average_block_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_here\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::Zpaq::split_here"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::Zpaq as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"find_chunk_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::Zpaq as Splitter>::find_chunk_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<zpaq::Zpaq as Splitter>::next_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::ZpaqHash as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::ZpaqHash as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::ZpaqHash as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<zpaq::ZpaqHash as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zpaq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"feed\"), disambiguator: 0 }]","has_unsafe":false,"name":"zpaq::ZpaqHash::feed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::HashState as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"rsyncable::HashState::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"find_chunk_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as Splitter>::find_chunk_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<rsyncable::Rsyncable as Splitter>::next_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_window_and_modulus\"), disambiguator: 0 }]","has_unsafe":false,"name":"rsyncable::Rsyncable::with_window_and_modulus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rsyncable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rsyncable::Rsyncable as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHash as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHash as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHash as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHash as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHash as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHash as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHash::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHash::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHash::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHash::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHashBuf::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_byte\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHashBuf::push_byte"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHashBuf::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHashBuf::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHashBuf::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"find_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::BuzHashBuf::find_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"buzhash::<impl std::convert::From<buzhash::BuzHashBuf> for std::boxed::Box<[u8]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buzhash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buzhash::BuzHashBuf as std::convert::From<buzhash::BuzHash>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_chunk_edge\"), disambiguator: 0 }]","has_unsafe":true,"name":"Splitter::find_chunk_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"Splitter::split"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_slices\"), disambiguator: 0 }]","has_unsafe":false,"name":"Splitter::into_slices"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_slices\"), disambiguator: 0 }]","has_unsafe":false,"name":"Splitter::as_slices"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_vecs\"), disambiguator: 0 }]","has_unsafe":false,"name":"Splitter::into_vecs"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_vecs\"), disambiguator: 0 }]","has_unsafe":false,"name":"Splitter::as_vecs"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a S as Splitter>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a S as Splitter>::next_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Bound<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Bound<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Bound<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Bound<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Bound<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Range<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Range<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Range<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T>>::from_range"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_inclusive\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T>>::from_inclusive"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"exceeds_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T>>::exceeds_max"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"under_min\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T>>::under_min"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Range<T>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterSlices<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterSlices<'a, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterSlices<'a, T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterSlices<'a, T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterSlices<'a, T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterSlices<'a, T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterSlices<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterSlices<'a, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterVecs<T, P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterVecs<T, P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterVecs<T, P> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterVecs<T, P> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterVecs<T, P> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SplitterVecs<T, P>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterVecs<T, P> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SplitterVecs<T, P> as std::iter::Iterator>::size_hint"}
