{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<builder::Builder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"builder::Builder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"offset\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","has_unsafe":false,"name":"builder::Builder::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_cubic\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::add_cubic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_linear\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::add_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_quadratic\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::add_quadratic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"jump\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::jump"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"restart\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::restart"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_segment\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::add_segment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_compensation\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::add_compensation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"use_compensation\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::use_compensation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_bounding_box\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::Builder::set_bounding_box"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_horizontal_metrics\"), disambiguator: 0 }]","has_unsafe":false,"name":"builder::Builder::set_horizontal_metrics"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"track_bounding_box\"), disambiguator: 0 }]","has_unsafe":false,"name":"builder::Builder::track_bounding_box"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"builder::<impl std::convert::From<builder::Builder> for glyph::Glyph>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"file::File::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"file::File::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<file::File as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"file\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<file::File as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"font\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"font::Font::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"font\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"font::Font::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"font\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<font::Font as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::mapping::Mapping::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::mapping::Mapping::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metrics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::metrics::Metrics::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metrics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::metrics::Metrics::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metrics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<format::opentype::metrics::Metrics as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"postscript\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::postscript::PostScript::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"postscript\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"draw\"), disambiguator: 0 }]","has_unsafe":true,"name":"<format::opentype::postscript::PostScript as case::Case>::draw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"truetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::truetype::TrueType::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"truetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"draw_glyph\"), disambiguator: 0 }]","has_unsafe":true,"name":"format::opentype::truetype::TrueType::draw_glyph"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"truetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"draw\"), disambiguator: 0 }]","has_unsafe":true,"name":"<format::opentype::truetype::TrueType as case::Case>::draw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"truetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"draw_simple\"), disambiguator: 0 }]","has_unsafe":true,"name":"format::opentype::truetype::draw_simple"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"truetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"draw_composite\"), disambiguator: 0 }]","has_unsafe":true,"name":"format::opentype::truetype::draw_composite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"format::opentype::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_font\"), disambiguator: 0 }]","has_unsafe":true,"name":"format::opentype::read_font"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"opentype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_font\"), disambiguator: 0 }]","has_unsafe":false,"name":"format::opentype::new_font"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Glyph as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Glyph as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Contour as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Contour as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Contour as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Segment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Segment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<glyph::Segment as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<glyph::Segment as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"advance_width\"), disambiguator: 0 }]","has_unsafe":false,"name":"glyph::Glyph::advance_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"glyph::Glyph::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"glyph::Glyph::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Glyph as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Glyph as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Glyph as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Contour as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"glyph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<glyph::Contour as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"offset::<impl std::convert::From<offset::Offset> for (f32, f32)>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::Div<f32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::DivAssign<f32>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::MulAssign<f32>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::convert::From<i16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::Div<i16>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::DivAssign<i16>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::Mul<i16>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::MulAssign<i16>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::convert::From<(f32, f32)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::convert::From<(i16, i16)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<offset::Offset as std::ops::Add<T>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<offset::Offset as std::ops::AddAssign<T>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<offset::Offset as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<offset::Offset as std::ops::Sub<T>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<offset::Offset as std::ops::SubAssign<T>>::sub_assign"}
