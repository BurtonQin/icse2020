{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<result::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":true,"name":"<result::Error as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"result::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"result::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"result::Error::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"result::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"result::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"result::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":true,"name":"result::Error::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<nix::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<result::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"result::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::ErrorKind as std::convert::From<result::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as result::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::option::Option<T> as result::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Handle as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::connector::<impl std::convert::From<control::connector::Handle> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Info as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Info as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::connector::Info as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Info as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Info as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Type as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Type as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::connector::Type as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Type as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::State as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::State as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::connector::State as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::State as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"connector_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::connector::Info::connector_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"connection_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::connector::Info::connection_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"modes\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::connector::Info::modes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"current_encoder\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::connector::Info::current_encoder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encoders\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::connector::Info::encoders"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::connector::Info as control::ResourceInfo>::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Info as control::ResourceInfo>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::Type as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::connector::State as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Handle as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::encoder::<impl std::convert::From<control::encoder::Handle> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Info as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Info as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::encoder::Info as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Info as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Info as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Type as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Type as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::encoder::Type as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Type as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encoder_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::encoder::Info::encoder_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"possible_crtcs\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::encoder::Info::possible_crtcs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"current_crtc\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::encoder::Info::current_crtc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::encoder::Info as control::ResourceInfo>::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Info as control::ResourceInfo>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::encoder::Type as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Handle as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::crtc::<impl std::convert::From<control::crtc::Handle> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Info as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Info as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Info as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Info as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Info as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::crtc::Info::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mode\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::crtc::Info::mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fb\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::crtc::Info::fb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::crtc::Info as control::ResourceInfo>::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::Info as control::ResourceInfo>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::PageFlipFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::PageFlipFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::crtc::PageFlipFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::PageFlipFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::crtc::PageFlipFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"page_flip\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::page_flip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::crtc::Events as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"receive_events\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::receive_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"receive_events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::crtc::receive_events::DeviceWrapper<'a, T> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_cursor\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::set_cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_cursor2\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::set_cursor2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"move_cursor\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::move_cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear_cursor\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::clear_cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::GammaRamp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::crtc::GammaRamp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crtc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_gamma\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::crtc::set_gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Handle as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::framebuffer::<impl std::convert::From<control::framebuffer::Handle> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Info as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Info as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Info as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Info as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Info as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::framebuffer::Info as control::ResourceInfo>::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::framebuffer::Info as control::ResourceInfo>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::framebuffer::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mark_dirty\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::framebuffer::mark_dirty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"framebuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"destroy\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::framebuffer::destroy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Handle as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::plane::<impl std::convert::From<control::plane::Handle> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Info as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Info as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Info as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Info as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Info as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::plane::Info as control::ResourceInfo>::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::Info as control::ResourceInfo>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::PresentFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::PresentFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::plane::PresentFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::plane::PresentFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::plane::PresentFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::plane::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Handle as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::<impl std::convert::From<control::property::Handle> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Info as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Info as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::Info as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::Info as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Info as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::Info as control::ResourceInfo>::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Info as control::ResourceInfo>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"associate_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::Info::associate_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::PropertyInfoType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::PropertyInfoType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::PropertyInfoType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::PropertyInfoType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::PropertyInfoType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::AssociatedPropertyHandle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::AssociatedPropertyHandle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::AssociatedPropertyHandle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::AssociatedPropertyHandle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::AssociatedPropertyHandle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::ResourceProperties as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::ResourceProperties as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::ResourceProperties as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::ResourceProperties as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::ResourceProperties as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::ResourceProperties::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"handles\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::ResourceProperties::handles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumValue as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::<impl std::convert::From<control::property::EnumValue> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumName as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumName as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumName as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumName as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumName as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumEntry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumEntry as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumEntry as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumEntry as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumEntry as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::EnumInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::URangeInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::URangeInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::URangeInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::URangeInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::URangeInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::URangeInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::IRangeInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::IRangeInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::IRangeInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::IRangeInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::IRangeInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::IRangeInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::EnumEntry::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::EnumEntry::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"continue_loading\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::EnumInfo::continue_loading"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"entries\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::EnumInfo::entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"continue_loading\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::URangeInfo::continue_loading"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"continue_loading\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::IRangeInfo::continue_loading"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_ffi_and_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::PropertyInfoType::from_ffi_and_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_enum\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::PropertyInfoType::is_enum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_urange\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::PropertyInfoType::is_urange"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_irange\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::PropertyInfoType::is_irange"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_object\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::PropertyInfoType::is_object"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_blob\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::PropertyInfoType::is_blob"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::UnassociatedValue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::UnassociatedValue as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::UnassociatedValue as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::UnassociatedValue as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::UnassociatedValue as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::UnassociatedValue as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::property::<impl std::convert::From<control::property::UnassociatedValue> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Value as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::Value as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::Value as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::property::Value as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"LoadProperties\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_resource_properties\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::property::LoadProperties::load_resource_properties"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"property\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::property::EnumName as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::dumbbuffer::DumbBuffer as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::dumbbuffer::DumbBuffer::create_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"destroy\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::dumbbuffer::DumbBuffer::destroy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::dumbbuffer::DumbBuffer::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbMapping<'a> as std::convert::AsMut<[u8]>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::dumbbuffer::DumbMapping<'a> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as buffer::Buffer>::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"format\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as buffer::Buffer>::format"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as buffer::Buffer>::pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dumbbuffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::dumbbuffer::DumbBuffer as buffer::Buffer>::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::RawName as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::RawName as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::RawName as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::RawName as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::RawName as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::RawName as std::convert::From<[i8; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::<impl std::convert::From<control::RawName> for [i8; _]>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resource_handles\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::Device::resource_handles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"plane_handles\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::Device::plane_handles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resource_info\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::Device::resource_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_crtc\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::Device::set_crtc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_framebuffer\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::Device::create_framebuffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandles as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandles as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandles as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandles as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandles as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::PlaneResourceHandles as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::PlaneResourceHandles as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::PlaneResourceHandles as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::PlaneResourceHandles as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::PlaneResourceHandles as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::ResourceHandles::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connectors\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::connectors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encoders\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::encoders"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"crtcs\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::crtcs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"framebuffers\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::framebuffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_crtcs\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::ResourceHandles::filter_crtcs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"load_from_device\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::PlaneResourceHandles::load_from_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"planes\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::PlaneResourceHandles::planes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Type as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Type as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::Type as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Type as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::<impl std::convert::From<control::Type> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandleType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandleType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::ResourceHandleType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::ResourceHandleType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::ResourceHandleType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::GammaLookupTable as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::GammaLookupTable as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::GammaLookupTable as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::GammaLookupTable as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::GammaLookupTable as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::CrtcListFilter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::CrtcListFilter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::CrtcListFilter as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::CrtcListFilter as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::CrtcListFilter as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Mode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Mode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clock\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hsync\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::hsync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"vsync\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::vsync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hskew\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::hskew"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"vscan\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::vscan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"vrefresh\"), disambiguator: 0 }]","has_unsafe":false,"name":"control::Mode::vrefresh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":true,"name":"control::Mode::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Mode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<control::Mode as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"control\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<control::RawName as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::Id as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::<impl std::convert::From<buffer::Id> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::Id::from_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::Id::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::PixelFormat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::PixelFormat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::PixelFormat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<buffer::PixelFormat as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<buffer::PixelFormat as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::PixelFormat::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"depth\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::PixelFormat::depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bpp\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::PixelFormat::bpp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"buffer::PixelFormat::from_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AuthToken as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::convert::From<AuthToken> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ClientCapability as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ClientCapability as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ClientCapability as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ClientCapability as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_auth_token\"), disambiguator: 0 }]","has_unsafe":true,"name":"Device::get_auth_token"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_client_cap\"), disambiguator: 0 }]","has_unsafe":true,"name":"Device::set_client_cap"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_master\"), disambiguator: 0 }]","has_unsafe":true,"name":"Device::set_master"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drop_master\"), disambiguator: 0 }]","has_unsafe":true,"name":"Device::drop_master"}
