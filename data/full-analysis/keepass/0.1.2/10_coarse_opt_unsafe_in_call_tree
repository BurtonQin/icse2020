{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decrypt::AES256Cipher as decrypt::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decrypt::Salsa20Cipher as decrypt::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decrypt::PlainCipher as decrypt::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decrypt::NoOpDecryptor as crypto::symmetriccipher::Decryptor>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calculate_sha256\"), disambiguator: 0 }]","has_unsafe":false,"name":"decrypt::calculate_sha256"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":true,"name":"decrypt::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"derive_composite_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"decrypt::derive_composite_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decrypt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"derive_transformed_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"decrypt::derive_transformed_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decompress::DecompressionError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decompress::DecompressionError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decompress::DecompressionError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decompress::DecompressionError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decompress::DecompressionError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decompress\"), disambiguator: 0 }]","has_unsafe":false,"name":"<decompress::NoCompression as decompress::Decompress>::decompress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"decompress\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"decompress\"), disambiguator: 0 }]","has_unsafe":true,"name":"<decompress::GZipCompression as decompress::Decompress>::decompress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xmlparse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_xml_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"xmlparse::parse_xml_block"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Database as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::convert::From<crypto::symmetriccipher::SymmetricCipherError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OpenDBError as std::convert::From<decompress::DecompressionError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Value as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Entry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"Entry::get"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_title\"), disambiguator: 0 }]","has_unsafe":false,"name":"Entry::get_title"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_username\"), disambiguator: 0 }]","has_unsafe":false,"name":"Entry::get_username"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_password\"), disambiguator: 0 }]","has_unsafe":false,"name":"Entry::get_password"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Group as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"Database::open"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<NodeIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"Group::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a Group as std::iter::IntoIterator>::into_iter"}
