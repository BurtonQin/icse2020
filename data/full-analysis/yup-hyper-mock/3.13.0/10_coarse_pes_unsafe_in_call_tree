{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"streams::MockPollStream::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockHttpStream as mio::Evented>::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reregister\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockHttpStream as mio::Evented>::reregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deregister\"), disambiguator: 0 }]","has_unsafe":false,"name":"<streams::MockHttpStream as mio::Evented>::deregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockHttpStream as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockPollStream as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockHttpStream as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":false,"name":"<streams::MockHttpStream as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","has_unsafe":false,"name":"<streams::MockHttpStream as tokio_io::AsyncWrite>::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockPollStream as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"<streams::MockPollStream as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"streams\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","has_unsafe":false,"name":"<streams::MockPollStream as tokio_io::AsyncWrite>::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<HostToReplyConnector as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<HostToReplyConnector as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","has_unsafe":true,"name":"<HostToReplyConnector as hyper::client::connect::Connect>::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SequentialConnector as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SequentialConnector as hyper::client::connect::Connect>::connect"}
