{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Sum<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Sum<'a, I, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Sum<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Sum<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Mean<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Mean<'a, I, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Mean<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Mean<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Max<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Max<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Max<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Min<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Min<'a, I, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Min<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Min<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Stdev<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::aggregate::Stdev<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Mean<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Mean<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Mean<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Max<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Max<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Max<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Min<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Min<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Min<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Sum<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Sum<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"aggregate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::aggregate::Sum<'a, I, T> as util::traits::ToDataFrame<'a, T, T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::Concat<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::Concat<'a, I, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::Concat<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::Concat<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::InnerJoin<'a, L, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::InnerJoin<'a, L, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::InnerJoin<'a, L, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::OuterJoin<'a, L, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::OuterJoin<'a, L, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::interact::OuterJoin<'a, L, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::InnerJoin<'a, L, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::InnerJoin<'a, L, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::InnerJoin<'a, L, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::OuterJoin<'a, L, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>, std::option::Option<ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::OuterJoin<'a, L, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>, std::option::Option<ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::OuterJoin<'a, L, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>, std::option::Option<ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::Concat<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::Concat<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"interact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::interact::Concat<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::MapDF<'a, T, I, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::MapDF<'a, T, I, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::MapDF<'a, T, I, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::MapDF<'a, T, I, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::Impute<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::Impute<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::Impute<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"impute\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::MapDF<'a, T, I, F> as util::traits::Process<'a, T, F>>::impute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_mut_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::MapDF<'a, T, I, F> as util::traits::Process<'a, T, F>>::to_mut_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"mapdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::MapDF<'a, T, I, F> as util::traits::Process<'a, T, F>>::mapdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"impute\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::Impute<'a, I, T> as util::traits::Process<'a, T, F>>::impute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_mut_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::Impute<'a, I, T> as util::traits::Process<'a, T, F>>::to_mut_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"mapdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::process::Impute<'a, I, T> as util::traits::Process<'a, T, F>>::mapdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"impute\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::process::<impl util::traits::Process<'a, T, F> for dataframe::DataFrameMutIterator<'a, T>>::impute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_mut_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::process::<impl util::traits::Process<'a, T, F> for dataframe::DataFrameMutIterator<'a, T>>::to_mut_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mapdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::process::<impl util::traits::Process<'a, T, F> for dataframe::DataFrameMutIterator<'a, T>>::mapdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::process::<impl util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T> for dataframe::DataFrameMutIterator<'a, T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::process::<impl util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T> for dataframe::DataFrameMutIterator<'a, T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::process::<impl util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T> for dataframe::DataFrameMutIterator<'a, T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::Impute<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::Impute<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::Impute<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::MapDF<'a, T, I, F> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::MapDF<'a, T, I, F> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::process::MapDF<'a, T, I, F> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a mut T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"sumdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Aggregate<'a, T> for dataframe::DataFrameIterator<'a, T>>::sumdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"maxdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Aggregate<'a, T> for dataframe::DataFrameIterator<'a, T>>::maxdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mindf\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Aggregate<'a, T> for dataframe::DataFrameIterator<'a, T>>::mindf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mean\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Aggregate<'a, T> for dataframe::DataFrameIterator<'a, T>>::mean"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Transform<'a, T> for dataframe::DataFrameIterator<'a, T>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Transform<'a, T> for dataframe::DataFrameIterator<'a, T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":false,"name":"combinators::transform::<impl util::traits::Transform<'a, T> for dataframe::DataFrameIterator<'a, T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"sumdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Aggregate<'a, T>>::sumdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"maxdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Aggregate<'a, T>>::maxdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"mindf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Aggregate<'a, T>>::mindf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"mean\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Aggregate<'a, T>>::mean"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Transform<'a, T>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Transform<'a, T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Select<'a, I, T> as util::traits::Transform<'a, T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"sumdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Aggregate<'a, T>>::sumdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"maxdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Aggregate<'a, T>>::maxdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"mindf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Aggregate<'a, T>>::mindf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"mean\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Aggregate<'a, T>>::mean"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Transform<'a, T>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Transform<'a, T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::Transform<'a, T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"sumdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Aggregate<'a, T>>::sumdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"maxdf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Aggregate<'a, T>>::maxdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"mindf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Aggregate<'a, T>>::mindf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"mean\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Aggregate<'a, T>>::mean"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Transform<'a, T>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Transform<'a, T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":false,"name":"<combinators::transform::Append<'a, I, T> as util::traits::Transform<'a, T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Remove<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Append<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Append<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Append<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Select<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Select<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"<combinators::transform::Select<'a, I, T> as util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::transform::<impl util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T> for dataframe::DataFrameIterator<'a, T>>::as_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::transform::<impl util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T> for dataframe::DataFrameIterator<'a, T>>::as_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"combinators\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"combinators::transform::<impl util::traits::ToDataFrame<'a, (std::string::String, ndarray::ArrayBase<ndarray::ViewRepr<&'a T>, ndarray::Dim<[usize; _]>>), T> for dataframe::DataFrameIterator<'a, T>>::as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dataframe::DataFrame<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrame<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrame<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dataframe::DataFrame<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dataframe::DataFrameMut<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrameMut<'a, T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dataframe::DataFrameMut<'a, T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dataframe::DataFrameIterator<'a, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrameIterator<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrameMutIterator<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dataframe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_df\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrameMut<'a, T>>::to_df"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"<util::error::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::error::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::error::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::error::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::error::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<util::error::Error as std::convert::From<util::error::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<util::error::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<util::error::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::error::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::error::ErrorKind as std::convert::From<util::error::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as util::error::ResultExt<T, E>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"readcsv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_csv\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dataframe::DataFrame<T> as util::readcsv::ReadCSV<T>>::read_csv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::types::UtahAxis as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::types::UtahAxis as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::types::ImputeStrategy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::types::ImputeStrategy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_constructor_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_constructor_generic::<impl util::traits::Constructor<'a, T> for dataframe::DataFrame<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_constructor_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_array\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_constructor_generic::<impl util::traits::Constructor<'a, T> for dataframe::DataFrame<T>>::from_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_constructor_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"columns\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_constructor_generic::<impl util::traits::Constructor<'a, T> for dataframe::DataFrame<T>>::columns"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_constructor_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_constructor_generic::<impl util::traits::Constructor<'a, T> for dataframe::DataFrame<T>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_constructor_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"df_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_constructor_generic::<impl util::traits::Constructor<'a, T> for dataframe::DataFrame<T>>::df_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_constructor_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"df_iter_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_constructor_generic::<impl util::traits::Constructor<'a, T> for dataframe::DataFrame<T>>::df_iter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shape\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::shape"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inner_left_join\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::inner_left_join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"outer_left_join\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::outer_left_join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inner_right_join\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::inner_right_join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"outer_right_join\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::outer_right_join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sumdf\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::sumdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mapdf\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::mapdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mean\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::mean"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maxdf\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::maxdf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mindf\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::mindf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_ops_generic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"impute\"), disambiguator: 0 }]","has_unsafe":true,"name":"implement::impl_ops_generic::<impl util::traits::Operations<'a, T> for dataframe::DataFrame<T>>::impute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<f64> for f64>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<f64> for f64>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<i32> for i32>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<i32> for i32>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<std::option::Option<i32>> for std::option::Option<i32>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<std::option::Option<i32>> for std::option::Option<i32>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<std::option::Option<f64>> for std::option::Option<f64>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"impl_empty\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"implement::impl_empty::<impl util::traits::Empty<std::option::Option<f64>> for std::option::Option<f64>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mixedtypes::OuterType as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::AsMut<mixedtypes::InnerType>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as num::One>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as num::Zero>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as num::Zero>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as util::traits::Empty<mixedtypes::InnerType>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as util::traits::Empty<mixedtypes::InnerType>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<&'a i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<&'a i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<&'b &'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::convert::From<&'a std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<&'b &'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<&'a std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<&'a i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<&'a i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::OuterType as std::convert::From<usize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mixedtypes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mixedtypes::InnerType as std::str::FromStr>::from_str"}
