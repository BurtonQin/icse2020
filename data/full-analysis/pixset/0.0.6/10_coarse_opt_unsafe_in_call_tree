{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tileset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'static pix::Tileset as pix::TilesetLike>::get_tileset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tile_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'static pix::Tileset as pix::TilesetLike>::get_tile_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::Pix as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::Pix as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::Pix as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pix::Pix as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pix::Pix as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"pix_order\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::Pix as pix::PixLike>::pix_order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::Pix as pix::PixLike>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::Pix as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ch_to_pix\"), disambiguator: 0 }]","has_unsafe":false,"name":"pix::Pix::ch_to_pix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"pix::PixStr::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"pix::FontIter::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::FontIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pix::PixStr<'a> as std::convert::From<&'a str>>::from"}
