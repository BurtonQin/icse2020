{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"blocks_for_bits\"), disambiguator: 0 }]","has_unsafe":true,"name":"blocks_for_bits"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"match_words\"), disambiguator: 0 }]","has_unsafe":true,"name":"match_words"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet<B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet<B> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::iter::FromIterator<usize>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::iter::Extend<usize>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_bit_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet>::from_bit_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_len\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::reserve_len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_len_exact\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::reserve_len_exact"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_bit_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet<B>>::into_bit_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"get_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet<B>>::get_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"other_op\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::other_op"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"shrink_to_fit\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::shrink_to_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::union::or"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::intersection::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"diff\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::difference::diff"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"symmetric_difference\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::symmetric_difference"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"symmetric_difference\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::symmetric_difference::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"union_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::union_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"intersect_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::intersect_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"difference_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::difference_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"symmetric_difference_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::symmetric_difference_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet<B>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitSet<B>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_disjoint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::is_disjoint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_subset\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::is_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_superset\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::is_superset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitSet<B> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BlockIter<T, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_blocks\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BlockIter<T, B>>::from_blocks"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<TwoBitPositions<'a, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Iter<'a, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Union<'a, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Intersection<'a, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Difference<'a, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SymmetricDifference<'a, B> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BlockIter<T, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BlockIter<T, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<TwoBitPositions<'a, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<TwoBitPositions<'a, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Iter<'a, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Iter<'a, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Union<'a, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Union<'a, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Intersection<'a, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Intersection<'a, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Difference<'a, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Difference<'a, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SymmetricDifference<'a, B> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SymmetricDifference<'a, B> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a BitSet<B> as std::iter::IntoIterator>::into_iter"}
