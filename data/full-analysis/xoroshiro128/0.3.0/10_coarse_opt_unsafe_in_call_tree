{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"xoroshiro::Xoroshiro128Rng::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_unseeded\"), disambiguator: 0 }]","has_unsafe":false,"name":"xoroshiro::Xoroshiro128Rng::new_unseeded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_u32\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::Rng>::next_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::Rng>::next_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::SeedableRng<[u64; _]>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::SeedableRng<[u64; _]>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splitmix_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"xoroshiro::splitmix_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::SeedableRng<u64>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::SeedableRng<u64>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::SeedableRng<()>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::SeedableRng<()>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xoroshiro\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"rand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xoroshiro::Xoroshiro128Rng as rand::Rand>::rand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"xorshift::XorShift1024Rng::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_u32\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::Rng>::next_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::Rng>::next_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::SeedableRng<[u64; _]>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::SeedableRng<[u64; _]>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splitmix_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"xorshift::splitmix_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::SeedableRng<u64>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::SeedableRng<u64>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"xorshift\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"rand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<xorshift::XorShift1024Rng as rand::Rand>::rand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"splitmix::SplitMix64Rng::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_u32\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::Rng>::next_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::Rng>::next_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::SeedableRng<u64>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::SeedableRng<u64>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reseed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::SeedableRng<()>>::reseed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::SeedableRng<()>>::from_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"splitmix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"rand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<splitmix::SplitMix64Rng as rand::Rand>::rand"}
