{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"simple_graph::SimpleGraph::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"simple_graph::SimpleGraph::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"simple_graph::SimpleGraph::to_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_digraph_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"simple_graph::SimpleGraph::to_digraph_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as traits::BasicGraphMethods>::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as traits::BasicGraphMethods>::get_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"simple_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<simple_graph::SimpleGraph as traits::BasicGraphMethods>::set_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"digraph::Digraph::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"digraph::Digraph::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"digraph::Digraph::to_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as traits::BasicGraphMethods>::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as traits::BasicGraphMethods>::get_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"digraph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<digraph::Digraph as traits::BasicGraphMethods>::set_edge"}
