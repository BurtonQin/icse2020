{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::Interval as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<intervals::Interval as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<intervals::Interval as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::Interval as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::Interval as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::parse_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::Adjustment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::RunConfig as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_interval\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::RunConfig::from_interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::RunConfig::with_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_subinterval\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::RunConfig::with_subinterval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply_adjustment\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::RunConfig::apply_adjustment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::RunConfig as intervals::NextTime>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::RunConfig as intervals::NextTime>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"day_of_week\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::day_of_week"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::Interval as intervals::NextTime>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intervals::Interval as intervals::NextTime>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeUnits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"second\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::TimeUnits::second"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeUnits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minute\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::TimeUnits::minute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeUnits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hour\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::TimeUnits::hour"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeUnits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"day\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::TimeUnits::day"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TimeUnits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"week\"), disambiguator: 0 }]","has_unsafe":false,"name":"intervals::TimeUnits::week"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as intervals::TimeUnits>::seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"minutes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as intervals::TimeUnits>::minutes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hours\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as intervals::TimeUnits>::hours"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"days\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as intervals::TimeUnits>::days"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intervals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"weeks\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as intervals::TimeUnits>::weeks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<job::Job as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"job::Job::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"last_frequency\"), disambiguator: 0 }]","has_unsafe":false,"name":"job::Job::last_frequency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"at\"), disambiguator: 0 }]","has_unsafe":false,"name":"job::Job::at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"plus\"), disambiguator: 0 }]","has_unsafe":false,"name":"job::Job::plus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"and_every\"), disambiguator: 0 }]","has_unsafe":false,"name":"job::Job::and_every"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"job::Job::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_pending\"), disambiguator: 0 }]","has_unsafe":true,"name":"job::Job::is_pending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","has_unsafe":true,"name":"job::Job::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::Scheduler as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::Scheduler as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"every\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::every"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run_pending\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::run_pending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"watch_thread\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::watch_thread"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"stop\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::ScheduleHandle::stop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::ScheduleHandle as std::ops::Drop>::drop"}
