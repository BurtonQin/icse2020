{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_conf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::new_with_conf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_addr\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::get_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tag\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::get_tag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_conf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::get_conf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"closure_send_as_json\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fluent::Fluent<'a, A>>::closure_send_as_json"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"closure_send_as_msgpack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::closure_send_as_msgpack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fluent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"closure_send_as_forward\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fluent::Fluent<'a, A>>::closure_send_as_forward"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<record::Record<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<record::Record<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<record::Record<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<record::Record<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<record::Record<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<record::Record<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dump\"), disambiguator: 0 }]","has_unsafe":true,"name":"<record::Record<T> as dumpable::Dumpable>::dump"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<record::Record<T> as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"json\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"post\"), disambiguator: 0 }]","has_unsafe":true,"name":"forwardable::json::<impl forwardable::JsonForwardable for fluent::Fluent<'a, A>>::post"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"json\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"post_with_time\"), disambiguator: 0 }]","has_unsafe":true,"name":"forwardable::json::<impl forwardable::JsonForwardable for fluent::Fluent<'a, A>>::post_with_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"msgpack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"post\"), disambiguator: 0 }]","has_unsafe":true,"name":"forwardable::msgpack::<impl forwardable::MsgpackForwardable for fluent::Fluent<'a, A>>::post"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"msgpack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"post_with_time\"), disambiguator: 0 }]","has_unsafe":true,"name":"forwardable::msgpack::<impl forwardable::MsgpackForwardable for fluent::Fluent<'a, A>>::post_with_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"msgpack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"post_with_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"make_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"forwardable::msgpack::<impl forwardable::MsgpackForwardable for fluent::Fluent<'a, A>>::post_with_time::make_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<forwardable::forward::Forward<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<forwardable::forward::Forward<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<forwardable::forward::Forward<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<forwardable::forward::Forward<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<forwardable::forward::Forward<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_Forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"forwardable::forward::_IMPL_SERIALIZE_FOR_Forward::<impl serde::Serialize for forwardable::forward::Forward<T>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<forwardable::forward::Forward<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dump\"), disambiguator: 0 }]","has_unsafe":true,"name":"<forwardable::forward::Forward<T> as dumpable::Dumpable>::dump"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dump\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"make_timespec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<forwardable::forward::Forward<T> as dumpable::Dumpable>::dump::make_timespec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"forwardable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"forward\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"post\"), disambiguator: 0 }]","has_unsafe":true,"name":"forwardable::forward::<impl forwardable::Forwardable for fluent::Fluent<'a, A>>::post"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<retry_conf::RetryConf as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<retry_conf::RetryConf as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<retry_conf::RetryConf as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<retry_conf::RetryConf as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<retry_conf::RetryConf as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"multiplier\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::multiplier"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"store_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::store_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"need_to_store\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::need_to_store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"store_path\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::store_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"retry_conf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"retry_conf::RetryConf::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"store_buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ensure_file_with_wca\"), disambiguator: 0 }]","has_unsafe":false,"name":"store_buffer::ensure_file_with_wca"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"store_buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maybe_write_events\"), disambiguator: 0 }]","has_unsafe":false,"name":"store_buffer::maybe_write_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::convert::From<rmp_serde::encode::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::convert::From<retry::RetryError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::FluentError as std::convert::From<serde_json::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_Event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"event_record::_IMPL_SERIALIZE_FOR_Event::<impl serde::Serialize for event_record::Event<T>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T>>::get_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_event_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::Event<T>>::get_event_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dump\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event_record::EventRecord<T> as dumpable::Dumpable>::dump"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_record::EventRecord<T> as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_time::EventTime as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_time::EventTime as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_time::EventTime as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_time::EventTime as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event_time::EventTime as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"event_time::EventTime::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"event_time::EventTime::get_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event_time\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event_time::EventTime as serde::Serialize>::serialize"}
