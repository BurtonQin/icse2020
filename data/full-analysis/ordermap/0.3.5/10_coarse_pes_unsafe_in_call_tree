{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"third\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::third"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enumerate\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::enumerate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ptrdistance\"), disambiguator: 0 }]","has_unsafe":false,"name":"util::ptrdistance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"equivalent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"equivalent\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Q as equivalent::Equivalent<K>>::equivalent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutable_keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_full_mut2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as mutable_keys::MutableKeys>::get_full_mut2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutable_keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"retain2\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as mutable_keys::MutableKeys>::retain2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mutable_keys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__private_marker\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S> as mutable_keys::MutableKeys>::__private_marker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity_and_hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::with_capacity_and_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"symmetric_difference\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::symmetric_difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_full\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::get_full"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::swap_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"swap_take\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::swap_take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove_full\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::swap_remove_full"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sort\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::sort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::sort_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sorted_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::sorted_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::drain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::get_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S>>::swap_remove_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::IntoIter<T> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Iter<'a, T> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Drain<'a, T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a set::OrderSet<T, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S> as std::iter::Extend<T>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S> as std::iter::Extend<&'a T>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::OrderSet<T, S> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S1> as std::cmp::PartialEq<set::OrderSet<T, S2>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"is_disjoint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::is_disjoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"is_subset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::is_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"is_superset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::OrderSet<T, S>>::is_superset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Difference<'a, T, S> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Difference<'a, T, S> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Difference<'a, T, S> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Intersection<'a, T, S> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Intersection<'a, T, S> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Intersection<'a, T, S> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SymmetricDifference<'a, T, S1, S2> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SymmetricDifference<'a, T, S1, S2> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SymmetricDifference<'a, T, S1, S2> as std::iter::Iterator>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SymmetricDifference<'a, T, S1, S2> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Union<'a, T, S> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Union<'a, T, S> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Union<'a, T, S> as std::iter::Iterator>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Union<'a, T, S> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a set::OrderSet<T, S1> as std::ops::BitAnd<&'b set::OrderSet<T, S2>>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a set::OrderSet<T, S1> as std::ops::BitOr<&'b set::OrderSet<T, S2>>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a set::OrderSet<T, S1> as std::ops::BitXor<&'b set::OrderSet<T, S2>>>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a set::OrderSet<T, S1> as std::ops::Sub<&'b set::OrderSet<T, S2>>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"hash_elem_using\"), disambiguator: 0 }]","has_unsafe":true,"name":"hash_elem_using"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<HashValue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"HashValue::get"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<HashValue as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<HashValue as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ShortHash<Sz> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ShortHash<Sz>>::into_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ShortHash<Sz> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ShortHash<Sz> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ShortHash<Sz> as std::cmp::PartialEq<HashValue>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<HashValue as std::convert::From<ShortHash<Sz>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Pos as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Pos as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"Pos::none"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"is_none\"), disambiguator: 0 }]","has_unsafe":false,"name":"Pos::is_none"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"pos\"), disambiguator: 0 }]","has_unsafe":false,"name":"Pos::pos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"set_pos\"), disambiguator: 0 }]","has_unsafe":true,"name":"Pos::set_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"Pos::with_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"resolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"Pos::resolve"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"resolve_existing_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"Pos::resolve_existing_index"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"lo32\"), disambiguator: 0 }]","has_unsafe":false,"name":"lo32"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"split_lo_hi\"), disambiguator: 0 }]","has_unsafe":false,"name":"split_lo_hi"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ShortHashProxy<Sz>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"get_short_hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ShortHashProxy<Sz>>::get_short_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Bucket<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Bucket<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"desired_pos\"), disambiguator: 0 }]","has_unsafe":false,"name":"desired_pos"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"probe_distance\"), disambiguator: 0 }]","has_unsafe":false,"name":"probe_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"usable_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"usable_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"to_raw_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"to_raw_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity_and_hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::with_capacity_and_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hasher\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"size_class_is_64bit\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::size_class_is_64bit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"raw_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::raw_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Size\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_same_size\"), disambiguator: 0 }]","has_unsafe":true,"name":"Size::is_same_size"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_64_bit\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as Size>::is_64_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"is_64_bit\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u64 as Size>::is_64_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"or_insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Entry<'a, K, V, S>>::or_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"or_insert_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Entry<'a, K, V, S>>::or_insert_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Entry<'a, K, V, S>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Entry<'a, K, V, S>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OccupiedEntry<'a, K, V, S>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OccupiedEntry<'a, K, V, S>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OccupiedEntry<'a, K, V, S>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OccupiedEntry<'a, K, V, S>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"into_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OccupiedEntry<'a, K, V, S>>::into_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OccupiedEntry<'a, K, V, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OccupiedEntry<'a, K, V, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"remove_entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OccupiedEntry<'a, K, V, S>>::remove_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<VacantEntry<'a, K, V, S>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"into_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<VacantEntry<'a, K, V, S>>::into_key"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<VacantEntry<'a, K, V, S>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<VacantEntry<'a, K, V, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"insert_impl\"), disambiguator: 0 }]","has_unsafe":true,"name":"<VacantEntry<'a, K, V, S>>::insert_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"entry_phase_1\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::entry_phase_1"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clear_indices\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::clear_indices"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"insert_phase_1\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::insert_phase_1"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"first_allocation\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::first_allocation"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"double_capacity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::double_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"reinsert_entry_in_order\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::reinsert_entry_in_order"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_one\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::reserve_one"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::entry"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"iter_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::iter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"keys\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::keys"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::values"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"values_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::values_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"contains_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"get_full\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::get_full"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"get_full_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::get_full_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::swap_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove_full\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::swap_remove_full"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"retain_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::retain_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"retain_in_order_impl\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::retain_in_order_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sort_keys\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::sort_keys"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::sort_by"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"apply_new_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::apply_new_index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sorted_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::sorted_by"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"drain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::drain"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"get_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::get_index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"get_index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::get_index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::swap_remove_index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"pop_impl\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::pop_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"insert_phase_2\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S>>::insert_phase_2"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"find_using\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::find_using"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"find_using_impl\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::find_using_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"find_existing_entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::find_existing_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"find_existing_entry_impl\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::find_existing_entry_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"remove_found\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::remove_found"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"remove_found_impl\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::remove_found_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"backward_shift_after_removal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S>>::backward_shift_after_removal"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"find_existing_entry_at\"), disambiguator: 0 }]","has_unsafe":true,"name":"find_existing_entry_at"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Keys<'a, K, V> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Values<'a, K, V> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ValuesMut<'a, K, V> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Iter<'a, K, V> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IterMut<'a, K, V> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<K, V> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"nth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::Iterator>::nth"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::Iterator>::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a OrderMap<K, V, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut OrderMap<K, V, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::ops::Index<&'a Q>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::ops::IndexMut<&'a Q>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::iter::FromIterator<(K, V)>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::iter::Extend<(K, V)>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::iter::Extend<(&'a K, &'a V)>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<OrderMap<K, V, S> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<OrderMap<K, V1, S1> as std::cmp::PartialEq<OrderMap<K, V2, S2>>>::eq"}
