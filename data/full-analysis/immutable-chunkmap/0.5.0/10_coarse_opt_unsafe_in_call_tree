{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Loc as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Loc as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_chunk\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Elts<K, V>>::update_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove_elt_at\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::remove_elt_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"min_max_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::min_max_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"min_elt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::min_elt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"max_elt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::max_elt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Elts<K, V> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a avl::Elts<K, V> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Node<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V> as std::ops::Index<&'a Q>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"any_elts_above_lbound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Iter<'a, Q, K, V>>::any_elts_above_lbound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"any_elts_below_ubound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Iter<'a, Q, K, V>>::any_elts_below_ubound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"any_elts_in_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Iter<'a, Q, K, V>>::any_elts_in_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"above_lbound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Iter<'a, Q, K, V>>::above_lbound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"below_ubound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Iter<'a, Q, K, V>>::below_ubound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Iter<'a, Q, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Iter<'a, Q, K, V> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a avl::Tree<K, V> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V>>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bal\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::bal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"update_chunk\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V>>::update_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"insert_chunk\"), disambiguator: 0 }]","has_unsafe":true,"name":"<avl::Tree<K, V>>::insert_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"update_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::update_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"insert_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::insert_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"min_elts\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::min_elts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"remove_min_elts\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::remove_min_elts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"get_gen\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::get_gen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"get_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::get_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"get_full\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::get_full"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"invariant\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::invariant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"invariant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"in_range\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::invariant::in_range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"invariant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sorted\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::invariant::sorted"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"avl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"invariant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check\"), disambiguator: 0 }]","has_unsafe":false,"name":"<avl::Tree<K, V>>::invariant::check"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V> as std::ops::Index<&'a Q>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V> as std::iter::FromIterator<(K, V)>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a map::Map<K, V> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"insert_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::insert_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"update_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::update_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::get_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_full\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::get_full"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V>>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"invariant\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::invariant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K> as std::iter::FromIterator<K>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::SetIter<'a, Q, K> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::SetIter<'a, Q, K> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a set::Set<K> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"insert_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::insert_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"remove_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::remove_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"update_many\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::update_many"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K>>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"invariant\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::invariant"}
