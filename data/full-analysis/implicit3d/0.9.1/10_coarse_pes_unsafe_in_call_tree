{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<transformer::AffineTransformer<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<transformer::AffineTransformer<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_parameters\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as Object<S>>::set_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as Object<S>>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as Object<S>>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S> as Object<S>>::scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S>>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_scaler\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S>>::new_with_scaler"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_translate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S>>::new_translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_rotate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S>>::new_rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transformer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_scale\"), disambiguator: 0 }]","has_unsafe":true,"name":"<transformer::AffineTransformer<S>>::new_scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<twister::Twister<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<twister::Twister<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_parameters\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S> as Object<S>>::set_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"twist_point\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S>>::twist_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tilt_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S>>::tilt_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"twister\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"untwist_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<twister::Twister<S>>::untwist_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bender::Bender<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bender::Bender<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_parameters\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S> as Object<S>>::set_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_polar\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S>>::to_polar"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tilt_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S>>::tilt_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bender\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bend_normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bender::Bender<S>>::bend_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Union<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Union<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Union<S>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Union<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Union<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_parameters\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Union<S> as Object<S>>::set_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Union<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Intersection<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Intersection<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Intersection<S>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"difference_from_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Intersection<S>>::difference_from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Intersection<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Intersection<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_parameters\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Intersection<S> as Object<S>>::set_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Intersection<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Negation<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Negation<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Negation<S>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Negation<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<boolean::Negation<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<boolean::Negation<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rvmin\"), disambiguator: 0 }]","has_unsafe":true,"name":"boolean::rvmin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"boolean\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rvmax\"), disambiguator: 0 }]","has_unsafe":true,"name":"boolean::rvmax"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sphere::Sphere<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sphere::Sphere<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sphere::Sphere<S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sphere::Sphere<S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sphere::Sphere<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sphere::Sphere<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sphere::Sphere<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sphere::Sphere<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cylinder<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cylinder::Cylinder<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cylinder<S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cylinder<S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cylinder<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cylinder<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cylinder::Cylinder<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cylinder<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cylinder::Cone<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cylinder::Cone<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_bbox\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S> as Object<S>>::set_bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cylinder::Cone<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisX as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisX as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisX as slab::Axis>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisY as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisY as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisY as slab::Axis>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisZ as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisZ as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::AxisZ as slab::Axis>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<slab::Slab<A, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::Slab<A, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<slab::Slab<A, S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<slab::Slab<A, S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<slab::Slab<A, S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<slab::Slab<A, S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<slab::Slab<A, S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slab\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<slab::Slab<A, S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Face<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mesh::Face<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Face<S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mesh::Face<S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Mesh<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mesh::Mesh<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Mesh<S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mesh::Mesh<S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Mesh<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Mesh<S>>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"point_over_line\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::point_over_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"point_over_triangle\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::point_over_triangle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vector_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::vector_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"distance_point_face\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::distance_point_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bbox_for_mesh\"), disambiguator: 0 }]","has_unsafe":true,"name":"mesh::bbox_for_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Mesh<S> as Object<S>>::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mesh::Mesh<S> as Object<S>>::bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mesh::Mesh<S> as Object<S>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"normal_from_object\"), disambiguator: 0 }]","has_unsafe":true,"name":"normal_from_object"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_bbox\"), disambiguator: 0 }]","has_unsafe":false,"name":"Object::set_bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_parameters\"), disambiguator: 0 }]","has_unsafe":false,"name":"Object::set_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"approx_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"Object::approx_value"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","has_unsafe":false,"name":"Object::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","has_unsafe":true,"name":"Object::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","has_unsafe":true,"name":"Object::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","has_unsafe":true,"name":"Object::scale"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_box\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as ObjectClone<S>>::clone_box"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<impl std::clone::Clone for std::boxed::Box<(dyn Object<S> + 'static)>>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::cmp::PartialEq for std::boxed::Box<(dyn Object<S> + 'static)>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::cmp::PartialOrd for std::boxed::Box<(dyn Object<S> + 'static)>>::partial_cmp"}
