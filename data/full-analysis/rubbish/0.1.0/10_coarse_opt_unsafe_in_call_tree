{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::hash::Hash as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_hex\"), disambiguator: 0 }]","has_unsafe":false,"name":"cas::hash::Hash::from_hex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"cas::hash::Hash::for_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_hex\"), disambiguator: 0 }]","has_unsafe":true,"name":"cas::hash::Hash::to_hex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cas::hash::Hash as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"content\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::content::Content<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"content\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::content::Content<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"content\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::content::Content<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"content\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::content::Content<T>>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"content\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::content::Content<T>>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::storage::Storage<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::storage::Storage<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"store\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::storage::Storage<T> as cas::traits::ContentAddressibleStorage<T>>::store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"retrieve\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cas::storage::Storage<T> as cas::traits::ContentAddressibleStorage<T>>::retrieve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::object::Object as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::object::Object as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"object\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::object::Object as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::commit::Parent as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::commit::Parent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::commit::Commit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::commit::Commit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","has_unsafe":false,"name":"fs::commit::Commit::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tree\"), disambiguator: 0 }]","has_unsafe":false,"name":"fs::commit::Commit::tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"make_child\"), disambiguator: 0 }]","has_unsafe":false,"name":"fs::commit::Commit::make_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"retrieve\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::commit::Commit::retrieve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"commit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"store\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::commit::Commit::store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::tree::Tree as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::tree::Tree as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::tree::Node as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::tree::Node as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::tree::SubTree as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fs::tree::SubTree as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_root\"), disambiguator: 0 }]","has_unsafe":false,"name":"fs::tree::Tree::for_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"fs::tree::Tree::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"store_subtree\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::Tree::store_subtree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"store\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::Tree::store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::Tree::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::Tree::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::Tree::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::Tree::modify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"resolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"fs::tree::SubTree::resolve"}
