{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"quantity\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::quantity"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::as_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_bit\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::into_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lsb\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::lsb"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"msb\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::msb"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"removing\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::removing"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inserting\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::inserting"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toggling\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::toggling"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersecting\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::intersecting"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"setting\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::setting"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"BitCollection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":true,"name":"BitCollection::set"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::convert::From<C>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::convert::AsRef<C>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::convert::AsMut<C>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"borrow\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::borrow::Borrow<C>>::borrow"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"borrow_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<BitIter<C> as std::borrow::BorrowMut<C>>::borrow_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":true,"name":"<BitIter<C> as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Quantity as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Quantity as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Quantity as std::cmp::Ord>::cmp"}
