{"def_path":"[DisambiguatedDefPathData { data: Module(\"alert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<alert::Response as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"alert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<alert::Response as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"alert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"alert\"), disambiguator: 0 }]","has_unsafe":false,"name":"alert::alert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"alert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_alert\"), disambiguator: 0 }]","has_unsafe":false,"name":"alert::system_alert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bitmap::Bitmap as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bitmap::Bitmap as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bitmap::Bitmap as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bitmap::Bitmap as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"bitmap::Bitmap::bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"copy_to_pasteboard\"), disambiguator: 0 }]","has_unsafe":false,"name":"bitmap::Bitmap::copy_to_pasteboard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cropped\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::cropped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_pixel\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::get_pixel"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bitmap_eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::bitmap_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find_color\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::find_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find_every_color\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::find_every_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"count_of_color\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::count_of_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find_bitmap\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::find_bitmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find_every_bitmap\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::find_every_bitmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"count_of_bitmap\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::count_of_bitmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"multiplier\"), disambiguator: 0 }]","has_unsafe":false,"name":"bitmap::Bitmap::multiplier"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_needle_oversized\"), disambiguator: 0 }]","has_unsafe":false,"name":"bitmap::Bitmap::is_needle_oversized"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_needle_at\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::is_needle_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find_all\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::Bitmap::find_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"system_copy_to_pasteboard\"), disambiguator: 0 }]","has_unsafe":false,"name":"bitmap::Bitmap::system_copy_to_pasteboard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"colors_match\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::colors_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"capture_screen\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::capture_screen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"capture_screen_portion\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::capture_screen_portion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_capture_screen_portion\"), disambiguator: 0 }]","has_unsafe":true,"name":"bitmap::system_capture_screen_portion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Size as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Size as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Size as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Size as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Point as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Point as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Point as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Point as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Rect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Rect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Rect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Rect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Rect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Size as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Point as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Point::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"scaled\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Point::scaled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Point::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Size::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"scaled\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Size::scaled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Size::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"scaled\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::scaled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_point_visible\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::is_point_visible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_rect_visible\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::is_rect_visible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"max_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::max_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"max_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::max_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"iter_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Rect::iter_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Point as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Size as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Rect as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"internal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"X_MAIN_DISPLAY\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__init\"), disambiguator: 0 }]","has_unsafe":true,"name":"internal::X_MAIN_DISPLAY::__init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"internal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"X_SCALE_FACTOR\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__init\"), disambiguator: 0 }]","has_unsafe":true,"name":"internal::X_SCALE_FACTOR::__init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Flag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Flag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<key::Flag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::KeyCode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::KeyCode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<key::KeyCode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"KeyCodeConvertible\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"character\"), disambiguator: 0 }]","has_unsafe":false,"name":"key::KeyCodeConvertible::character"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"KeyCodeConvertible\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flags\"), disambiguator: 0 }]","has_unsafe":false,"name":"key::KeyCodeConvertible::flags"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Character as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Character as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Code as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Code as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"type_string\"), disambiguator: 0 }]","has_unsafe":true,"name":"key::type_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tap\"), disambiguator: 0 }]","has_unsafe":true,"name":"key::tap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","has_unsafe":true,"name":"key::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char_to_key_code\"), disambiguator: 0 }]","has_unsafe":true,"name":"key::char_to_key_code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flags_for_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"key::flags_for_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"character\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Character as key::KeyCodeConvertible>::character"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":true,"name":"<key::Character as key::KeyCodeConvertible>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"<key::Code as key::KeyCodeConvertible>::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"key::<impl std::convert::From<key::Flag> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"key::<impl std::convert::From<key::KeyCode> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"x_send_key_event\"), disambiguator: 0 }]","has_unsafe":true,"name":"key::x_send_key_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"key\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_toggle\"), disambiguator: 0 }]","has_unsafe":false,"name":"key::system_toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::Button as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::Button as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mouse::Button as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::ScrollDirection as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::ScrollDirection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mouse::ScrollDirection as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"smooth_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"mouse::smooth_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"click\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::click"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"move_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"mouse::move_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"location\"), disambiguator: 0 }]","has_unsafe":true,"name":"mouse::location"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scroll\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::scroll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::<impl std::convert::From<mouse::Button> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::<impl std::convert::From<mouse::ScrollDirection> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_move_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"mouse::system_move_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_location\"), disambiguator: 0 }]","has_unsafe":true,"name":"mouse::system_location"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"send_button_event\"), disambiguator: 0 }]","has_unsafe":true,"name":"mouse::send_button_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_toggle\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::system_toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_scroll\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::system_scroll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":true,"name":"screen::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","has_unsafe":false,"name":"screen::scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_point_visible\"), disambiguator: 0 }]","has_unsafe":true,"name":"screen::is_point_visible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_rect_visible\"), disambiguator: 0 }]","has_unsafe":true,"name":"screen::is_rect_visible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_color\"), disambiguator: 0 }]","has_unsafe":true,"name":"screen::get_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_size\"), disambiguator: 0 }]","has_unsafe":true,"name":"screen::system_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"screen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system_scale\"), disambiguator: 0 }]","has_unsafe":false,"name":"screen::system_scale"}
