{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"semver::Semver::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::convert::From<(u32, u32, u32)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"semver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<semver::Semver as std::convert::From<(u32, u32)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::backend::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::UsefulAtoms as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::UsefulAtoms as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::UsefulAtoms as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::UsefulAtoms as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::UsefulAtoms as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fetch\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::UsefulAtoms::fetch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::GlxExt as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::GlxExt::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"load_functions\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::GlxExt::load_functions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Glx as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Glx as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Glx as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Glx as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Glx as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Display as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Display as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Display as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Display as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Display as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::backend::Display as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Display::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"open_x11_display_name\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Display::open_x11_display_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"query_glx\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Display::query_glx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Window<'dpy> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Window<'dpy> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Window<'dpy> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Window<'dpy> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::backend::Window<'dpy> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"create_window\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Display::create_window"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::backend::Window<'dpy> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_capabilities\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::get_capabilities"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"show\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Window::show"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"_is_mapped\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Window::_is_mapped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"create_child\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::create_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hide\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::hide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"maximize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::maximize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"minimize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::minimize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"raise\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::raise"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_style\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::set_style"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"enter_fullscreen\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::enter_fullscreen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"leave_fullscreen\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::leave_fullscreen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_icon\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::set_icon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_minimum_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::set_minimum_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_maximum_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::set_maximum_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_opacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::set_opacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"move_absolute\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::move_absolute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"move_relative_to_self\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::move_relative_to_self"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"move_relative_to_parent\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::move_relative_to_parent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"recenter\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::recenter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"resize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::resize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_title\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Window::set_title"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"gl_swap_buffers\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Window::gl_swap_buffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"query_screenspace_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::query_screenspace_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"query_canvas_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::query_canvas_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"gl_set_swap_interval\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Window::gl_set_swap_interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gen_visual_attribs\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Display::gen_visual_attribs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gen_fbconfig_attribs\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Display::gen_fbconfig_attribs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"create_gl_context\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::Display::create_gl_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"create_software_gl_context\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::backend::Display::create_software_gl_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::backend::GLContext<'dpy> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"make_current\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::backend::GLContext::make_current"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Mode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Mode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Mode as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Mode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Mode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Mode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Settings as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Settings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Settings as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Settings as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Settings as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Settings as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Mode as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Settings as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Borders as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Borders as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Borders as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Borders as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Borders as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Borders as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Borders as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::TitleBarStyle as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Mode as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Settings as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::WindowOpResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::WindowOpResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::WindowOpResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::WindowOpResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::WindowOpResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::WindowOpResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ignore\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::WindowOpResult::ignore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::WindowOpResult::unwrap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_result\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::WindowOpResult::into_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Capabilities as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Capabilities as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Capabilities as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Capabilities as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::window::Capabilities as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Capabilities as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::window::Window<'dpy> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_capabilities\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::get_capabilities"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"show\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::window::Window::show"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hide\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::hide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_title\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::window::Window::set_title"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_icon\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::window::Window::set_icon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_style\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::set_style"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"recenter\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::recenter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_opacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::set_opacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"create_child\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::create_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"query_screenspace_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::query_screenspace_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"query_canvas_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::query_canvas_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"maximize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::maximize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"minimize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::minimize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"restore\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::restore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"raise\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::raise"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"enter_fullscreen\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::enter_fullscreen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"leave_fullscreen\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::leave_fullscreen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_minimum_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::set_minimum_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_maximum_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::set_maximum_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"move_absolute\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::move_absolute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"move_relative_to_self\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::move_relative_to_self"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"move_relative_to_parent\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::move_relative_to_parent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"window\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"resize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::window::Window::resize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::Display as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::Display::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open_x11_display_name\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::Display::open_x11_display_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_window\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::Display::create_window"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_window_and_show\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::Display::create_window_and_show"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_gl_context\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::Display::create_gl_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_software_gl_context\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::Display::create_software_gl_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_gl_context_from_lib\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::Display::create_gl_context_from_lib"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLProfile as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLProfile as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLProfile as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLProfile as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLProfile as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLProfile as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLVariant as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLVariant as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLVariant as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLVariant as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLVariant as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLVersion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLVersion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLVersion as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLVersion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLVersion as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLVersion as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_from_semver\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::GLVersion::try_from_semver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_semver\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::GLVersion::to_semver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::Requirement<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::Requirement<'a, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::Requirement<'a, T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::Requirement<'a, T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::Requirement<'a, T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::Requirement<'a, T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLMsaa as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLContextSettings<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLContextSettings<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLContextSettings<'a> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLContextSettings<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLContextSettings<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLContextSettings<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLContextSettings<'a> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"sanitize\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::GLContextSettings::sanitize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"make_current\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::GLContext::make_current"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"present\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::GLSwapChain::present"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_interval\"), disambiguator: 0 }]","has_unsafe":false,"name":"display::GLSwapChain::set_interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"force_make_current\"), disambiguator: 0 }]","has_unsafe":true,"name":"display::GLSwapChain::force_make_current"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLSwapInterval as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLSwapInterval as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLSwapInterval as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLSwapInterval as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<display::GLSwapInterval as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLSwapInterval as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<display::GLSwapInterval as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Vec3<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Vec3<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec3<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Vec2<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Vec2<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Vec2<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Minmax<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Minmax<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Minmax<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as game_input_device::SignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<i8 as game_input_device::SignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<i16 as game_input_device::SignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<i32 as game_input_device::SignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as game_input_device::UnsignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as game_input_device::UnsignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u16 as game_input_device::UnsignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"normalized_axis_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u32 as game_input_device::UnsignedAxis>::normalized_axis_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Dpad as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"to_axes\"), disambiguator: 0 }]","has_unsafe":true,"name":"game_input_device::Dpad::to_axes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AxisInfo<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AxisInfo<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AxisInfo<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AxisInfo<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AxisInfo<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AxisInfo<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AxisInfo<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericIAxis<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericIAxis<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"to_normalized_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericIAxis<T>>::to_normalized_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"to_normalized_signed_axis\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericIAxis<T>>::to_normalized_signed_axis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"to_normalized_unsigned_axis\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericIAxis<T>>::to_normalized_unsigned_axis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericUAxis<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericUAxis<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GenericUAxis<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_normalized_f32\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericUAxis<u32>>::to_normalized_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_normalized_signed_axis\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericUAxis<u32>>::to_normalized_signed_axis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"to_normalized_unsigned_axis\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GenericUAxis<u32>>::to_normalized_unsigned_axis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::State as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::State as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::State as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::State as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::State as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::State as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::State as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Capabilities as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Capabilities as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Capabilities as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Capabilities as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Capabilities as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Capabilities as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Capabilities as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::ButtonPressed as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::ButtonPressed as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::ButtonPressed as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::ButtonPressed as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::ButtonPressed as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::ButtonPressed as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::ButtonReleased as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::ButtonReleased as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::ButtonReleased as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::ButtonReleased as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::ButtonReleased as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::ButtonReleased as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::RelativeAxisMotion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::RelativeAxisMotion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::RelativeAxisMotion as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::RelativeAxisMotion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::RelativeAxisMotion as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::RelativeAxisMotion as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::RelativeAxis as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::RelativeAxis as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::RelativeAxis as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::RelativeAxis as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::RelativeAxis as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AbsoluteAxisMotion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AbsoluteAxisMotion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AbsoluteAxisMotion as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AbsoluteAxisMotion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AbsoluteAxisMotion as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AbsoluteAxisMotion as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AbsoluteAxis as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AbsoluteAxis as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::AbsoluteAxis as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AbsoluteAxis as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AbsoluteAxis as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::AbsoluteAxis as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Error as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Error as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::JoystickModel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::JoystickModel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::JoystickModel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::JoystickModel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::JoystickModel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::SteeringWheelModel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::SteeringWheelModel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::SteeringWheelModel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::SteeringWheelModel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::SteeringWheelModel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GamepadModel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GamepadModel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GamepadModel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GamepadModel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GamepadModel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Model as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Model as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Model as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Model as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Model as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Model as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Bus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Bus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Bus as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Bus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Bus as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Info<'dev> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Info<'dev> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Info<'dev> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Info<'dev> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Info<'dev> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Info<'dev> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GameInputDevice<'dev> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GameInputDevice<'dev> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GameInputDevice<'dev> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::GameInputDevice<'dev> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"is_connected\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::is_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"query_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::query_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"query_battery\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::query_battery"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"info\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"upload_haptic_effect\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::upload_haptic_effect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rumble\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::rumble"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"stop_rumble\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::stop_rumble"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"poll_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::GameInputDevice::poll_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"wait_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"game_input_device::GameInputDevice::wait_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::GameInputDevice<'dev> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::PollIter<'a, 'dev> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::WaitIter<'a, 'dev> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Event as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Event as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Event as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Event as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::Event as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::Event as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::PollIter<'dev, 'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::WaitIter<'dev, 'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::monitor::PollIter<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::monitor::WaitIter<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::monitor::PollIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::monitor::WaitIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::monitor::Monitor as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::monitor::Monitor::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::monitor::Monitor::poll_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"monitor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"wait_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"game_input_device::monitor::Monitor::wait_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_sdl2_mapping_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::mapping::Mapping::from_sdl2_mapping_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mapping\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::mapping::Mapping as std::convert::From<std::collections::HashMap<game_input_device::Event, game_input_device::Event>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::Error as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::Error as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::UploadedEffect<'a, 'dev> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::UploadedEffect<'a, 'dev> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::UploadedEffect<'a, 'dev> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::UploadedEffect<'a, 'dev> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::UploadedEffect<'a, 'dev> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PlayingEffect<'a, 'b, 'dev> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PlayingEffect<'a, 'b, 'dev> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PlayingEffect<'a, 'b, 'dev> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PlayingEffect<'a, 'b, 'dev> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PlayingEffect<'a, 'b, 'dev> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"play\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::haptic::UploadedEffect::play"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"stop\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::haptic::PlayingEffect::stop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_playing\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_input_device::haptic::PlayingEffect::is_playing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::UploadedEffect<'a, 'dev> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RumbleEffect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Envelope as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConstantEffect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Waveform as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Waveform as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::Waveform as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::Waveform as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::Waveform as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PeriodicEffect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PeriodicEffect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PeriodicEffect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::PeriodicEffect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::PeriodicEffect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::PeriodicEffect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::RampEffect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConditionEffect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConditionEffect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game_input_device::haptic::ConditionEffect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::ConditionEffect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::ConditionEffect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game_input_device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"haptic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game_input_device::haptic::ConditionEffect as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::VKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::VKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::VKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::VKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Key as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Key as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Key as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Key as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Click as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Click as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Click as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Click as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Click as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::MouseButton as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::MouseButton as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::MouseButton as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::MouseButton as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::MouseButton as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::MouseButton as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Clipboard as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Clipboard as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_buffer\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::Clipboard::get_raw_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"overwrite_with_utf8\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::Clipboard::overwrite_with_utf8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::TextInput as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::TextInput as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::TextInput::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_buffer\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::TextInputRecording::get_raw_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::EventQueue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::PeekIter<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::PollIter<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::WaitIter<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::PollIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::WaitIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::queue::PeekIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::queue::EventQueue::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::queue::EventQueue::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"wait\"), disambiguator: 0 }]","has_unsafe":true,"name":"event::queue::EventQueue::wait"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"event::queue::EventQueue::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battery::BatteryStatus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battery::BatteryStatus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<battery::BatteryStatus as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<battery::BatteryStatus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battery::BatteryStatus as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battery::BatteryState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battery::BatteryState as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battery::BatteryState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<battery::BatteryState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<battery::BatteryState as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":false,"name":"battery::BatteryState::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timeout::Timeout as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timeout::Timeout as std::convert::From<std::time::Duration>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T> as std::convert::From<std::option::Option<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_known\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::is_known"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_unknown\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::is_unknown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_option\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::into_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_option\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::as_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_option\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<T>>::as_mut_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_all\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<std::option::Option<T>>>::unwrap_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_all_or\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<std::option::Option<T>>>::unwrap_all_or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_known_some\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<std::option::Option<T>>>::is_known_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_known_none\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Knowledge<std::option::Option<T>>>::is_known_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_all_or_default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Knowledge<std::option::Option<T>>>::unwrap_all_or_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T> as std::convert::From<std::option::Option<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"is_manual\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::is_manual"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"is_auto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::is_auto"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"into_option\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::into_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_option\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::as_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_option\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<T>>::as_mut_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_all\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<std::option::Option<T>>>::unwrap_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_all_or\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<std::option::Option<T>>>::unwrap_all_or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"is_manual_some\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<std::option::Option<T>>>::is_manual_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"is_manual_none\"), disambiguator: 0 }]","has_unsafe":false,"name":"<option_alternatives::Decision<std::option::Option<T>>>::is_manual_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"option_alternatives\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_all_or_default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<option_alternatives::Decision<std::option::Option<T>>>::unwrap_all_or_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vec::Extent2<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Extent2<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Extent2<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Extent2<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Extent2<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Extent2<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vec::Extent2<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vec::Extent2<T> as std::convert::From<(T, T)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vec::Extent2<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vec::Vec2<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Vec2<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Vec2<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Vec2<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<vec::Vec2<T> as std::cmp::PartialEq>::ne"}
