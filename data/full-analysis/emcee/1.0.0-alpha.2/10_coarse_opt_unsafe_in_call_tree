{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::EmceeError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::EmceeError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::EmceeError as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::EmceeError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::EmceeError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<guess::Guess as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<guess::Guess as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<guess::Guess as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<guess::Guess as std::ops::IndexMut<usize>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_initial_guess\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::create_initial_guess"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_initial_guess_with_rng\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::create_initial_guess_with_rng"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains_infs\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::contains_infs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains_nans\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::contains_nans"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"perturb\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::perturb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"guess\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"perturb_with_rng\"), disambiguator: 0 }]","has_unsafe":false,"name":"guess::Guess::perturb_with_rng"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"prob\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Prob\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lnprob\"), disambiguator: 0 }]","has_unsafe":false,"name":"prob::Prob::lnprob"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stretch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stretch::Stretch as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stretch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stretch::Stretch as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stretch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"preallocated_accept\"), disambiguator: 0 }]","has_unsafe":false,"name":"stretch::Stretch::preallocated_accept"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stores::Chain as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stores::Chain as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::Chain::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::Chain::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::Chain::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_params\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::Chain::set_params"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatchain\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::Chain::flatchain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::Chain::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stores::ProbStore as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stores::ProbStore as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::ProbStore::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::ProbStore::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_probs\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::ProbStore::set_probs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stores\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"stores::ProbStore::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Step as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"seed\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::seed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::sample"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run_mcmc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::run_mcmc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_initial_state\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::set_initial_state"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatchain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::flatchain"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acceptance_fraction\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::acceptance_fraction"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"propose_stretch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::propose_stretch"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_lnprob\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EnsembleSampler<'a, T>>::get_lnprob"}
