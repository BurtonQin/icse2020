{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynprog\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"align\"), disambiguator: 0 }]","has_unsafe":true,"name":"<M as dynprog::Align<'a, M, T>>::align"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynprog\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"distance\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dynprog::Alignment<'a, M, T>>::distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynprog\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edit_script\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dynprog::Alignment<'a, M, T>>::edit_script"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynprog\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edit_scripts\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dynprog::Alignment<'a, M, T>>::edit_scripts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynprog\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cost_matrix\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dynprog::Alignment<'a, M, T>>::cost_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dynprog\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"seq_pair\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dynprog::Alignment<'a, M, T>>::seq_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::Levenshtein as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::Levenshtein as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"measures::Levenshtein::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"operations\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::Levenshtein as Measure<T>>::operations"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinOp as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinOp as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerau as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerau as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"measures::LevenshteinDamerau::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"operations\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerau as Measure<T>>::operations"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerauOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerauOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerauOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LevenshteinDamerauOp as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LevenshteinDamerauOp as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCS as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCS as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"measures::LCS::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"operations\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCS as Measure<T>>::operations"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCSOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCSOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCSOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":true,"name":"<measures::LCSOp as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"measures\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<measures::LCSOp as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Delete as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Insert as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Match as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Match as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Match as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Match as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Match as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Match as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":true,"name":"<op::archetype::Match as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Substitute as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::archetype::Transpose as op::Operation<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"archetype\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cost\"), disambiguator: 0 }]","has_unsafe":true,"name":"<op::archetype::Transpose as op::Operation<T>>::cost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<op::IndexedOperation<O> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::IndexedOperation<O> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::IndexedOperation<O> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<op::IndexedOperation<O> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<op::IndexedOperation<O> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<op::IndexedOperation<O> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::IndexedOperation<O>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"operation\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::IndexedOperation<O>>::operation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"source_idx\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::IndexedOperation<O>>::source_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"target_idx\"), disambiguator: 0 }]","has_unsafe":false,"name":"<op::IndexedOperation<O>>::target_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrack\"), disambiguator: 0 }]","has_unsafe":true,"name":"<M as op::Backtrack<T>>::backtrack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtracks\"), disambiguator: 0 }]","has_unsafe":true,"name":"<M as op::Backtrack<T>>::backtracks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"op\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"best_cost\"), disambiguator: 0 }]","has_unsafe":true,"name":"<M as op::BestCost<T>>::best_cost"}
