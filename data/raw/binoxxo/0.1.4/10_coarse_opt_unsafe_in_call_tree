{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::build_board::Game::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_full\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::build_board::Game::is_full"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::build_board::Game::new_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"undo_moves\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::build_board::Game::undo_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build_full_game\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::build_board::Game::build_full_game"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build_full_board\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::build_board::Game::build_full_board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build_puzzle_board\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::build_board::Game::build_puzzle_board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_full_board\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::build_board::create_full_board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build_board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_puzzle_board\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::build_board::create_puzzle_board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::choose_move::MoveSelection as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::choose_move::MoveSelection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bruteforce::choose_move::MoveSelection as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::choose_move::Move as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::choose_move::Move as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bruteforce::choose_move::Move as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::choose_move::Move as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"choose_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"select_next_move\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::choose_move::select_next_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"possible_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::possible_move::PossibleMove as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"possible_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bruteforce::possible_move::PossibleMove as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"possible_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bruteforce::possible_move::PossibleMove as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"possible_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<bruteforce::possible_move::PossibleMove as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"possible_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calc_possible_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::possible_move::calc_possible_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"possible_move\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calc_possible_moves\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::possible_move::calc_possible_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid_pair_rule\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::rules::is_valid_pair_rule"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid_colum\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::rules::is_valid_colum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid_row\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::rules::is_valid_row"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calc_column_siganture\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::calc_column_siganture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_unique_column\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::is_unique_column"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calc_row_siganture\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::calc_row_siganture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_unique_row\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::is_unique_row"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_move_valid\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::rules::is_move_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"are_columns_unique\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::are_columns_unique"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"are_rows_unique\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::are_rows_unique"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"are_rows_balanced\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::are_rows_balanced"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"are_columns_balanced\"), disambiguator: 0 }]","has_unsafe":false,"name":"bruteforce::rules::are_columns_balanced"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_no_more_than_two_same_neightbors\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::rules::has_no_more_than_two_same_neightbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bruteforce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_board_valid\"), disambiguator: 0 }]","has_unsafe":true,"name":"bruteforce::rules::is_board_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Field as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Field as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<field::Field as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Board as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Board as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Board as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::Board::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::Board::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::Board::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::Board::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::Board::get_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Board as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field::Board as std::string::ToString>::to_string"}
