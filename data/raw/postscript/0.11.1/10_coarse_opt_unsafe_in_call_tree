{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::tape::Tape::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_given\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::tape::Tape::take_given"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"jump\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::tape::Tape::jump"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::tape::Tape::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::tape::Tape::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u8 as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u16 as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u32 as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[u8; _] as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<u8> as tape::Walue>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"font_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::font_set::FontSet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"font_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::font_set::FontSet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"font_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::font_set::FontSet as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::header::Header as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::header::Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compact::header::Header as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"number\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::number::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"number\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_real\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::number::parse_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::offset::Offset as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::offset::<impl std::convert::From<compact::offset::Offset> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compact::offset::Offset as tape::Walue>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operations as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operations as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(compact::operation::Operator, std::vec::Vec<f32>) as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::operation::Operations::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_single\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::operation::Operations::get_single"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_double\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::operation::Operations::get_double"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operations as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operations as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operations as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operator as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operator as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::operation::Operator as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compact::operation::Operator as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compact::operation::Operator as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::operation::Operator::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::operation::Operator::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::CharSet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::CharSet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::CharSet1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::CharSet1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::Range1 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::Range1 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compact::char_set::Range1 as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::char_set::CharSet::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::CharSet as tape::Walue>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::char_set::CharSet1 as tape::Walue>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_iso_adobe\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::char_set::get_iso_adobe"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_expert\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::char_set::get_expert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_expert_subset\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::char_set::get_expert_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::encoding::Encoding as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::encoding::Encoding as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::encoding::Encoding as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compact::encoding::Encoding as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::encoding::Encoding::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_standard\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::encoding::get_standard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encoding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_expert\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::encoding::get_expert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::Index as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::Index as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::Index as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::Index as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::Index as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::char_strings::CharStrings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::char_strings::CharStrings as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::char_strings::CharStrings as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::char_strings::CharStrings as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char_strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::char_strings::CharStrings as tape::Walue>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dictionaries\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::dictionaries::Dictionaries as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dictionaries\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::dictionaries::Dictionaries as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dictionaries\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::dictionaries::Dictionaries as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dictionaries\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::dictionaries::Dictionaries as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dictionaries\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::dictionaries::Dictionaries as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dictionaries\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::index::dictionaries::Dictionaries::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"names\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::names::Names as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"names\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::names::Names as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"names\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::names::Names as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"names\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::names::Names as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"names\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::names::Names as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"names\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::index::names::Names::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::strings::Strings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::strings::Strings as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::strings::Strings as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::strings::Strings as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::strings::Strings as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::index::strings::Strings::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"strings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_standard_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::compact::index::strings::get_standard_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subroutines\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::subroutines::Subroutines as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subroutines\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::subroutines::Subroutines as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subroutines\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::subroutines::Subroutines as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subroutines\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::subroutines::Subroutines as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compact\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"subroutines\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compact::index::subroutines::Subroutines as tape::Value>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"number\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::number::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<type2::operation::Operator as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<type2::operation::Operator as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<type2::operation::Operator as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<type2::operation::Operator as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"operation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::operation::Operator::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::program::Program::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"postscript::type2::program::Program::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::program::Program::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::program::Routine::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::program::Routine::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"take_operand\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::program::Routine::take_operand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<type2::program::Routine<'l> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<type2::program::Routine<'l> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"type2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"program\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bias\"), disambiguator: 0 }]","fn_type":"Safe","name":"postscript::type2::program::bias"}
