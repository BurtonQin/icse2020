{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<executor::TaskHandle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::TaskHandle::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stop\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::TaskHandle::stop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stopped\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::TaskHandle::stopped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fixed_interval_loop\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::fixed_interval_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calculate_delay\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::calculate_delay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fixed_rate_loop\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::fixed_rate_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<executor::CoreExecutorInner as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<executor::CoreExecutor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::CoreExecutor::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_name\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::CoreExecutor::with_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_fixed_interval\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::CoreExecutor::schedule_fixed_interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_fixed_rate\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::CoreExecutor::schedule_fixed_rate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<executor::ThreadPoolExecutor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::ThreadPoolExecutor::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"with_prefix\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::ThreadPoolExecutor::with_prefix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"with_executor\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::ThreadPoolExecutor::with_executor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_fixed_rate\"), disambiguator: 0 }]","has_unsafe":true,"name":"executor::ThreadPoolExecutor::schedule_fixed_rate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"executor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"pool\"), disambiguator: 0 }]","has_unsafe":false,"name":"executor::ThreadPoolExecutor::pool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task_group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_tasks_local\"), disambiguator: 0 }]","has_unsafe":true,"name":"task_group::schedule_tasks_local"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task_group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_tasks_remote\"), disambiguator: 0 }]","has_unsafe":true,"name":"task_group::schedule_tasks_remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task_group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"schedule\"), disambiguator: 0 }]","has_unsafe":true,"name":"<executor::CoreExecutor as task_group::TaskGroupScheduler>::schedule"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"task_group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"schedule\"), disambiguator: 0 }]","has_unsafe":true,"name":"<executor::ThreadPoolExecutor as task_group::TaskGroupScheduler>::schedule"}
