{"def_path":"[DisambiguatedDefPathData { data: Module(\"bsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plane_split::bsp::<impl binary_space_partition::Plane for polygon::Polygon<T, U>>::cut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_aligned\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plane_split::bsp::<impl binary_space_partition::Plane for polygon::Polygon<T, U>>::is_aligned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bsp::BspSplitter<T, U>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bsp::BspSplitter<T, U> as Splitter<T, U>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bsp::BspSplitter<T, U> as Splitter<T, U>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bsp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sort\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bsp::BspSplitter<T, U> as Splitter<T, U>>::sort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<clip::Clipper<T, U> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<clip::Clipper<T, U>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<clip::Clipper<T, U>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frustum_planes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<clip::Clipper<T, U>>::frustum_planes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<clip::Clipper<T, U>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<clip::Clipper<T, U>>::clip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"clip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clip_transformed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<clip::Clipper<T, U>>::clip_transformed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_bounds\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::LineProjection<T>>::get_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::LineProjection<T>>::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_outside\"), disambiguator: 0 }]","fn_type":"Safe","name":"<polygon::Intersection<T>>::is_outside"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_inside\"), disambiguator: 0 }]","fn_type":"Safe","name":"<polygon::Intersection<T>>::is_inside"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<polygon::Polygon<T, U> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_points\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::from_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_rect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::from_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_transformed_rect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::from_transformed_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"untransform_point\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::untransform_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"project_on\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::project_on"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"intersect_plane\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::intersect_plane"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<polygon::Polygon<T, U>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plane_split::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"is_zero_vec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plane_split::is_zero_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Line<T, U> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Line<T, U>>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Line<T, U>>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Plane<T, U> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NegativeHemisphereError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NegativeHemisphereError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NegativeHemisphereError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NegativeHemisphereError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NegativeHemisphereError as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_unnormalized\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::from_unnormalized"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"signed_distance_to\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::signed_distance_to"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"distance_to_line\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::distance_to_line"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"signed_distance_sum_to\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::signed_distance_sum_to"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"are_outside\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::are_outside"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Plane<T, U>>::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Splitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"solve\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plane_split::Splitter::solve"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"make_grid\"), disambiguator: 0 }]","fn_type":"Safe","name":"plane_split::make_grid"}
