{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cstr::CStr<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cstr::CStr<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"cstr::CStr::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ptr\"), disambiguator: 0 }]","has_unsafe":false,"name":"cstr::CStr::as_ptr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cstr::NullableCStr<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cstr::NullableCStr<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"cstr::NullableCStr::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ptr\"), disambiguator: 0 }]","has_unsafe":false,"name":"cstr::NullableCStr::as_ptr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cstr_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cstr::CStr<'a> as cstr::CStrFrom<'a, T>>::cstr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cstr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cstr_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cstr::NullableCStr<'a> as cstr::CStrFrom<'a, std::option::Option<T>>>::cstr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::Error as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::Error as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::Error::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::<impl std::convert::From<error::Error> for std::io::Error>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::<impl std::fmt::Display for ffi::DNSServiceError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::<impl std::error::Error for ffi::DNSServiceError>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"evented::unix::PollReadFd::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll_read\"), disambiguator: 0 }]","has_unsafe":true,"name":"evented::unix::PollReadFd::poll_read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"need_read\"), disambiguator: 0 }]","has_unsafe":true,"name":"evented::unix::PollReadFd::need_read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<evented::unix::PollReadFd as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":true,"name":"<evented::unix::EventedFd as mio::Evented>::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reregister\"), disambiguator: 0 }]","has_unsafe":true,"name":"<evented::unix::EventedFd as mio::Evented>::reregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deregister\"), disambiguator: 0 }]","has_unsafe":true,"name":"<evented::unix::EventedFd as mio::Evented>::deregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"evented::EventedDNSService::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"evented::EventedDNSService::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"service\"), disambiguator: 0 }]","has_unsafe":false,"name":"evented::EventedDNSService::service"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"evented\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<evented::EventedDNSService as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::DNSServiceNoError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::DNSServiceNoError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceNoError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceNoError as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceNoError as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceNoError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::DNSServiceNoError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"ffi::DNSServiceNoError::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::DNSServiceError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::DNSServiceError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceError as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceError as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ffi::DNSServiceError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ffi::DNSServiceError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ffi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"ffi::DNSServiceError::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFuture<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFuture<T>>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inner_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFuture<T>>::inner_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"service\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFuture<T>>::service"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<future::ServiceFuture<T> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFuture<T> as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFutureSingle<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<future::ServiceFutureSingle<T> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"future\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<future::ServiceFutureSingle<T> as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"interface::InterfaceIndex::from_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"interface::InterfaceIndex::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::InterfaceIndex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::Interface as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::Interface as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<interface::Interface as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::Interface as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"interface::Interface::from_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"interface::Interface::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<interface::Interface as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raw::InnerDNSService as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fd\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::fd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"process_result\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::process_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"enumerate_domains\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::enumerate_domains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"browse\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::browse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"resolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::resolve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"create_connection\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::create_connection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"query_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSService::query_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raw::DNSService as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"raw::DNSService::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fd\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::fd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"process_result\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::process_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"enumerate_domains\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::enumerate_domains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::add_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_default_txt_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"raw::DNSService::get_default_txt_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"browse\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::browse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"resolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::resolve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"register_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::register_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_connection\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::create_connection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"query_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSService::query_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raw::InnerDNSRecord as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_service\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSRecord::get_service"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"rr_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"raw::InnerDNSRecord::rr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSRecord::add_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"register_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSRecord::register_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"update_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::InnerDNSRecord::update_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"keep\"), disambiguator: 0 }]","has_unsafe":false,"name":"raw::InnerDNSRecord::keep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"rr_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"raw::DNSRecord::rr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"update_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::DNSRecord::update_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"keep\"), disambiguator: 0 }]","has_unsafe":false,"name":"raw::DNSRecord::keep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reconfirm_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"raw::reconfirm_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw_box\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raw_box::RawBox<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw_box\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raw_box::RawBox<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raw_box\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_ptr\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raw_box::RawBox<T>>::get_ptr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowsedFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowsedFlag as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowsedFlag as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowsedFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::browse::BrowsedFlags::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::convert::From<service::browse::BrowsedFlag>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::ops::BitOr<service::browse::BrowsedFlag>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::ops::BitAnd<service::browse::BrowsedFlag>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlag as std::ops::BitAnd<service::browse::BrowsedFlags>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowsedFlags as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::Browse as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::Browse as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowseResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowseResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowseResult as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowseResult as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::browse::BrowseResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::browse::BrowseResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"resolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::browse::BrowseResult::resolve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"browse_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::browse::browse_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"browse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"browse\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::browse::browse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::Connection as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::connection::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::connection::RegisterRecordFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::connection::RegisterRecordFlag as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::connection::RegisterRecordFlag as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::connection::RegisterRecordFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::connection::RegisterRecordFlags::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::convert::From<service::connection::RegisterRecordFlag>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::ops::BitOr<service::connection::RegisterRecordFlag>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::ops::BitAnd<service::connection::RegisterRecordFlag>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlag as std::ops::BitAnd<service::connection::RegisterRecordFlags>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordFlags as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::connection::RegisterRecord as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecord as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::connection::RegisterRecordResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_record_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::connection::register_record_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"register_raw_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::connection::Connection::register_raw_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"record\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::connection::RegisterRecord::record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"rr_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::connection::RegisterRecord::rr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"update_raw_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::connection::RegisterRecord::update_raw_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"connection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"keep\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::connection::RegisterRecord::keep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::Enumerate as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::Enumerate as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::Enumerate as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::Enumerate as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::Enumerate as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::Enumerate as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::Enumerate as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::Enumerate as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumeratedFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumeratedFlag as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumeratedFlag as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumeratedFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::enumerate_domains::EnumeratedFlags::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::convert::From<service::enumerate_domains::EnumeratedFlag>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::ops::BitOr<service::enumerate_domains::EnumeratedFlag>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::ops::BitAnd<service::enumerate_domains::EnumeratedFlag>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlag as std::ops::BitAnd<service::enumerate_domains::EnumeratedFlags>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumeratedFlags as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumerateDomains as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateDomains as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumerateResult as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::enumerate_domains::EnumerateResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::enumerate_domains::EnumerateResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enumerate_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::enumerate_domains::enumerate_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"enumerate_domains\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enumerate_domains\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::enumerate_domains::enumerate_domains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::query_record::QueryRecordFlags::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::convert::From<service::query_record::QueryRecordFlag>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::ops::BitOr<service::query_record::QueryRecordFlag>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::ops::BitAnd<service::query_record::QueryRecordFlag>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlag as std::ops::BitAnd<service::query_record::QueryRecordFlags>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordFlags as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueriedRecordFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueriedRecordFlag as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueriedRecordFlag as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueriedRecordFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::query_record::QueriedRecordFlags::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::convert::From<service::query_record::QueriedRecordFlag>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::ops::BitOr<service::query_record::QueriedRecordFlag>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::ops::BitAnd<service::query_record::QueriedRecordFlag>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlag as std::ops::BitAnd<service::query_record::QueriedRecordFlags>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueriedRecordFlags as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueryRecord as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecord as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueryRecordResult as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::query_record::QueryRecordResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::query_record::QueryRecordResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"query_record_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::query_record::query_record_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"query_record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"query_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::query_record::query_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"records\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rr_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::records::Record::rr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"records\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"update_raw_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::records::Record::update_raw_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"records\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::records::Record::keep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"records\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::records::new_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::register::RegisterFlag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::register::RegisterFlag as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::register::RegisterFlag as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::register::RegisterFlag as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"none\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::register::RegisterFlags::none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::convert::From<service::register::RegisterFlag>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::convert::Into<u8>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::ops::BitOr<service::register::RegisterFlag>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::ops::BitAnd<service::register::RegisterFlag>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlag as std::ops::BitAnd<service::register::RegisterFlags>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterFlags as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::register::Register as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::Register as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::register::RegisterResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::register::register_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::register::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_raw_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::register::Register::add_raw_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_default_txt_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::register::Register::get_default_txt_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_raw_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::register::Registration::add_raw_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"register\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_default_txt_record\"), disambiguator: 0 }]","has_unsafe":false,"name":"service::register::Registration::get_default_txt_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::Resolve as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::resolve::Resolve as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::resolve::ResolveResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::resolve::ResolveResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<service::resolve::ResolveResult as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<service::resolve::ResolveResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resolve_callback\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::resolve::resolve_callback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::resolve::resolve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reconfirm_record\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::reconfirm_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"construct\"), disambiguator: 0 }]","has_unsafe":true,"name":"service::FullName::construct"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stream::ServiceStream<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stream::ServiceStream<T> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::ServiceStream<T> as remote::GetRemote>::remote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"timeout\"), disambiguator: 0 }]","has_unsafe":false,"name":"<S as timeout_stream::TimeoutTrait>::timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timeout_stream::TimeoutStream<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timeout_stream::TimeoutStreamError<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_io_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timeout_stream::TimeoutStreamError<E>>::into_io_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reset_timer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timeout_stream::TimeoutStream<S>>::reset_timer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_timer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timeout_stream::TimeoutStream<S>>::get_timer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<timeout_stream::TimeoutStream<S> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timeout_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remote\"), disambiguator: 0 }]","has_unsafe":false,"name":"<timeout_stream::TimeoutStream<S> as remote::GetRemote>::remote"}
