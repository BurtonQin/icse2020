{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::deserialize::CustomMapVisitor<K, V, S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::deserialize::CustomMapVisitor<K, V, S> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::deserialize::CustomMapVisitor<K, V, S> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"non_empty_collections::index_map::deserialize::<impl serde::Deserialize<'de> for index_map::NonEmptyIndexMap<K, V, S>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Occupied<'a, K, V, S> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Occupied<'a, K, V, S> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove_entry\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Occupied<'a, K, V, S>>::remove_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Occupied<'a, K, V, S>>::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Occupied<'a, K, V, S>>::into_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Vacant<'a, K, V, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"or_insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Entry<'a, K, V, S>>::or_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"or_insert_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::entry::Entry<'a, K, V, S>>::or_insert_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"into_iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::into_iter::IntoIter<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"non_empty_collections::index_map::serialize::<impl serde::Serialize for index_map::NonEmptyIndexMap<K, V, H>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::Index as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_item_and_iterator\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V>>::from_item_and_iterator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_iterator\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V>>::from_iterator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S2> as std::cmp::PartialEq<index_map::NonEmptyIndexMap<K, V, S1>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity_and_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::with_capacity_and_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::iter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter_with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::from_iter_with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove_entry\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::remove_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"entry\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_entry\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_entry_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_entry_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_first\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_first_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_first_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_rest\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_rest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_rest_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::get_rest_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove_first\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::remove_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S> as std::convert::Into<indexmap::IndexMap<K, V, S>>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S> as std::iter::Extend<(K, V)>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_map::NonEmptyIndexMap<K, V, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::deserialize::CustomSetVisitor<K, S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::deserialize::CustomSetVisitor<K, S> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::deserialize::CustomSetVisitor<K, S> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"non_empty_collections::index_set::deserialize::<impl serde::Deserialize<'de> for index_set::NonEmptyIndexSet<K, S>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"into_iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::into_iter::IntoIter<K> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"non_empty_collections::index_set::serialize::<impl serde::Serialize for index_set::NonEmptyIndexSet<K, H>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_iterator\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K>>::from_iterator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S2> as std::cmp::PartialEq<index_set::NonEmptyIndexSet<K, S1>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity_and_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::with_capacity_and_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter_with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::from_iter_with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_first\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::get_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_first_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::get_first_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_rest\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::get_rest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_rest_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::get_rest_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove_first\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::remove_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S> as std::convert::Into<indexmap::IndexSet<K, S>>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S> as std::iter::Extend<K>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"index_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<index_set::NonEmptyIndexSet<K, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"estimated_size\"), disambiguator: 0 }]","fn_type":"Safe","name":"non_empty_collections::estimated_size"}
