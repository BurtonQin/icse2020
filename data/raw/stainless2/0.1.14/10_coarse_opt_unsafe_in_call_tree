{"def_path":"[DisambiguatedDefPathData { data: Module(\"describe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<describe::DescribeState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"describe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<describe::SubBlock as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"describe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"describe\"), disambiguator: 0 }]","has_unsafe":false,"name":"describe::describe"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::Test as parse::Parse<test::TestConfig>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bench::Bench as parse::Parse<()>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"<describe::DescribeState as parse::Parse<(syntax::source_map::Span, &'a mut syntax::ext::base::ExtCtxt<'b>, std::option::Option<syntax::ast::Ident>)>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"illegal\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::illegal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::Test as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::TestConfig as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"failing_test\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::TestConfig::failing_test"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ignored_test\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::TestConfig::ignored_test"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"test\"), disambiguator: 0 }]","has_unsafe":false,"name":"test::TestConfig::test"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bench\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bench::Bench as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test::Test as generate::Generate<&'a describe::DescribeState>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bench::Bench as generate::Generate<()>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<describe::SubBlock as generate::Generate<&'a describe::DescribeState>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<describe::DescribeState as generate::Generate<std::option::Option<&'a describe::DescribeState>>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"plugin_registrar\"), disambiguator: 0 }]","has_unsafe":false,"name":"plugin_registrar"}
