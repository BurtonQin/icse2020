{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function2<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function2<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function2<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function2<F> as Function<(S1, S2)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function3<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function3<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function3<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function3<F> as Function<((S1, S2), S3)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function4<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function4<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function4<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function4<F> as Function<(((S1, S2), S3), S4)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function5<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function5<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function5<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function5<F> as Function<((((S1, S2), S3), S4), S5)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function6<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function6<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function6<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function6<F> as Function<(((((S1, S2), S3), S4), S5), S6)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F> as Function<std::result::Result<S, E>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F> as VariantFunction<std::result::Result<T, E>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryDiscard as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryDiscard as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryDiscard as Function<std::result::Result<S, E>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZip as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZip as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZip as Function<(std::result::Result<S, E>, T)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ZipTry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ZipTry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ZipTry as Function<(S, std::result::Result<T, E>)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as Function<(std::result::Result<S, E>, std::result::Result<T, E>)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as VariantFunction<std::result::Result<(S, T), E>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryOpt as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryOpt as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryOpt as Function<std::option::Option<std::result::Result<T, E>>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryOpt as VariantFunction<std::result::Result<std::option::Option<T>, E>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::MkSome as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::MkSome as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::MkSome as Function<T>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::IsSome<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::IsSome<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::IsSome<F> as Function<S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::IsSome<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Unwrap<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Unwrap<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Unwrap<F> as Function<S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Unwrap<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Dereference<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Dereference<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Dereference<F> as Function<S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Dereference<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::First as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::First as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::First as Function<(S, T)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::First as VariantFunction<T>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Second as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Second as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Second as Function<(S, T)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Second as VariantFunction<T>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F> as Stateful<Ch, Str, Output>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F> as Stateful<Ch, Str, Output>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F> as Committed<Ch, Str, Output>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F> as Uncommitted<Ch, Str, Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Map<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F> as Stateful<Ch, Str, Output>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F> as Stateful<Ch, Str, Output>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F> as Committed<Ch, Str, Output>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F> as Uncommitted<Ch, Str, Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::VariantMap<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThen<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThen<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThen<P, Q> as Committed<Ch, Str, (POutput, QOutput)>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThen<P, Q> as Uncommitted<Ch, Str, (POutput, QOutput)>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThen<P, Q>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenState<PState, Q, PStaticOutput, QState> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenState<PState, Q, PStaticOutput, QState> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenState<PState, Q, PStaticOutput, QState> as Stateful<Ch, Str, (POutput, QOutput)>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenState<PState, Q, PStaticOutput, QState> as Stateful<Ch, Str, (POutput, QOutput)>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElse<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElse<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElse<P, Q> as Committed<Ch, Str, Output>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElse<P, Q> as Uncommitted<Ch, Str, Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElse<P, Q>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseState<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseState<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseState<P, Q> as Stateful<Ch, Str, Output>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseState<P, Q> as Stateful<Ch, Str, Output>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarState<P, PState, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarState<P, PState, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarState<P, PState, T> as Stateful<Ch, Str, T>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarState<P, PState, T> as Stateful<Ch, Str, T>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Plus<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Plus<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Plus<P, F> as Uncommitted<Ch, Str, <F as Factory>::Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Plus<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Star<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Star<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Star<P, F> as Uncommitted<Ch, Str, <F as Factory>::Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Star<P, F> as Committed<Ch, Str, <F as Factory>::Output>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Star<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P> as Stateful<Ch, Str, std::option::Option<Output>>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P> as Stateful<Ch, Str, std::option::Option<Output>>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P> as Uncommitted<Ch, Str, std::option::Option<Output>>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P> as Committed<Ch, Str, std::option::Option<Output>>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Opt<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P> as Stateful<Ch, Str, ()>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P> as Stateful<Ch, Str, ()>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P> as Uncommitted<Ch, Str, ()>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P> as Committed<Ch, Str, ()>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Discard<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<F> as Stateful<Ch, Str, <F as Factory>::Output>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<F> as Stateful<Ch, Str, <F as Factory>::Output>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<F> as Uncommitted<Ch, Str, <F as Factory>::Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<F> as Committed<Ch, Str, <F as Factory>::Output>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Emit<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::CharacterState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterState as Stateful<Ch, Str, Ch>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterState as Stateful<Ch, Str, Ch>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Character<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Character<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Character<F> as Uncommitted<Ch, Str, Ch>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Character<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterRef<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterRef<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterRef<F> as Uncommitted<Ch, Str, Ch>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterRef<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AnyCharacter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AnyCharacter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AnyCharacter as Stateful<Ch, Str, std::option::Option<Ch>>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AnyCharacter as Stateful<Ch, Str, std::option::Option<Ch>>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AnyCharacter as Uncommitted<Ch, Str, std::option::Option<Ch>>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AnyCharacter as Committed<Ch, Str, std::option::Option<Ch>>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Buffered<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Buffered<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Buffered<P> as Uncommitted<char, std::str::Chars<'a>, std::borrow::Cow<'a, str>>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Buffered<P> as Committed<char, std::str::Chars<'a>, std::borrow::Cow<'a, str>>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Buffered<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedState<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedState<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedState<P> as Stateful<char, std::str::Chars<'a>, std::borrow::Cow<'a, str>>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedState<P> as Stateful<char, std::str::Chars<'a>, std::borrow::Cow<'a, str>>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BoxableState<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"more_boxable\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BoxableState<P> as Boxable<Ch, Str, Output>>::more_boxable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"done_boxable\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BoxableState<P> as Boxable<Ch, Str, Output>>::done_boxable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::impls::<impl Stateful<Ch, Str, Output> for std::boxed::Box<P>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::impls::<impl Stateful<Ch, Str, Output> for std::boxed::Box<P>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BoxableState<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Boxed<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Boxed<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Boxed<P, F> as Uncommitted<Ch, Str, Output>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Boxed<P, F> as Committed<Ch, Str, Output>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Boxed<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Stateful::last"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StatefulStr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"more_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::StatefulStr::more_str"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StatefulStr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::StatefulStr::last_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<State, Output> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<P, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<P, S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or_else\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::or_else"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_and_then\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then_try\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::and_then_try"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_and_then_try\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_and_then_try"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"plus\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::plus"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"star\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::star"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map2\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map2"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map3\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map3"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map4\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map4"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map5\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map5"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map6\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map6"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map2\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_map2"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map3\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_map3"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map4\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_map4"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map5\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_map5"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map6\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_map6"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::map_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"variant_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::variant_map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discard_and_then\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::discard_and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then_discard\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::and_then_discard"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_discard_and_then\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_discard_and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then_try_discard\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::and_then_try_discard"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_discard_and_then_try\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_discard_and_then_try"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_and_then_try_discard\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_and_then_try_discard"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"opt\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::opt"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_opt\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_opt"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discard\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::discard"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_discard\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::try_discard"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"boxed\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::boxed"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"in_state\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::in_state"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"buffer\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::Parser::buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"UncommittedStr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"init_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::UncommittedStr::init_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"more\"), disambiguator: 0 }]","fn_type":"Safe","name":"<InState<P, PState> as Stateful<Ch, Str, Output>>::more"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<InState<P, PState> as Stateful<Ch, Str, Output>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as Function<S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as Factory>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as Consumer<T>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<std::string::String>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<&'a str>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<std::borrow::Cow<'a, str>>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<char>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::borrow::Cow<'a, str> as Consumer<std::string::String>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::borrow::Cow<'a, str> as Consumer<&'a str>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::borrow::Cow<'a, str> as Consumer<std::borrow::Cow<'a, str>>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::borrow::Cow<'a, str> as Consumer<char>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<T> as Consumer<&'a [T]>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<T> as Consumer<T>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<C, E> as Consumer<std::result::Result<T, E>>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"upcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::borrow::Cow<'static, T> as Upcast<std::borrow::Cow<'a, T>>>::upcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"upcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(S1, S2) as Upcast<(T1, T2)>>::upcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"upcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<S> as Upcast<std::option::Option<T>>>::upcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"upcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<S, D> as Upcast<std::result::Result<T, E>>>::upcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"downcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::borrow::Cow<'a, T> as Downcast<std::borrow::Cow<'static, T>>>::downcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"downcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(S1, S2) as Downcast<(T1, T2)>>::downcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"downcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<S> as Downcast<std::option::Option<T>>>::downcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"downcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<S, D> as Downcast<std::result::Result<T, E>>>::downcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"upcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as Upcast<T>>::upcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"downcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as Downcast<T>>::downcast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ByRef<F> as Function<&'a T>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"PeekableIterator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_if\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::PeekableIterator::next_if"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::iter::Peekable<I> as PeekableIterator>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"next_if_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::iter::Peekable<I> as PeekableIterator>::next_if_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::str::Chars<'a> as PeekableIterator>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"next_if_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::str::Chars<'a> as PeekableIterator>::next_if_ref"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"character\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::character"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"character_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::character_ref"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"character_map_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::character_map_ref"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"character_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::character_map"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsell::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"unDone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<State, Output>>::unDone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"unContinue\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<State, Output>>::unContinue"}
