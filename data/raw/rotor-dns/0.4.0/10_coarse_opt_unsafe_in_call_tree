{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::SystemConfigError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::SystemConfigError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::SystemConfigError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::SystemConfigError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<config::SystemConfigError as std::convert::From<resolv_conf::ParseError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"system\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::config::Config::system"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::fsm::<impl Request>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"refresh_timeouts\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::fsm::<impl DnsMachine>::refresh_timeouts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"recv_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::fsm::<impl DnsMachine>::recv_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"send_request\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::fsm::<impl DnsMachine>::send_request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deadline_opt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::fsm::deadline_opt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::fsm::<impl rotor::Machine for Fsm<C>>::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ready\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::fsm::<impl rotor::Machine for Fsm<C>>::ready"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"spawned\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::fsm::<impl rotor::Machine for Fsm<C>>::spawned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::fsm::<impl rotor::Machine for Fsm<C>>::timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fsm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"wakeup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::fsm::<impl rotor::Machine for Fsm<C>>::wakeup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<resolver::QueryError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<resolver::QueryError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<resolver::QueryError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<resolver::QueryError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<resolver::QueryError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::resolver::<impl Resolver>::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"time_util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::time_util::<impl std::cmp::PartialOrd for TimeEntry>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"time_util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::time_util::<impl std::cmp::Ord for TimeEntry>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"time_util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"rotor_dns::time_util::<impl std::cmp::PartialEq for TimeEntry>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TimeEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Query as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Query as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Query as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Query as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Query as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Answer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SrvRecord as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SrvRecord as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<MxRecord as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<MxRecord as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<CacheEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"create_resolver\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rotor_dns::create_resolver"}
