{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Item as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<reader::Item as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<reader::Item as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Item as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Item as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Item as std::convert::Into<std::string::String>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Item as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Event as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<reader::Event as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<reader::Event as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Event as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Event as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Reader<R> as std::convert::From<R>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"prepare\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Reader<R>>::prepare"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"token\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Reader<R>>::token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"event\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Reader<R>>::event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<reader::Reader<R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::Entry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<entry::Entry as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<entry::Entry as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::Entry as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::Entry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lookup\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_table\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::as_table"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"steamy_vdf::entry::Entry::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_statement\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::as_statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::as_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::Entry::as_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::table::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::table::Table::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::convert::Into<entry::Entry>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"table\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::table::Table as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::convert::From<entry::Entry>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::convert::Into<entry::Entry>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::array::Array as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::convert::Into<entry::Entry>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::statement::Statement as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::convert::Into<entry::Entry>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<entry::value::Value as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::entry::value::Value::to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::IpAddr as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv4Addr as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::SocketAddr as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::SocketAddrV4 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::SocketAddrV6 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"entry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bool as entry::value::Parse>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::Token<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::Token<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::Token<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::Token<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::Token<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"string\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"whitespace\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"close\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::close"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bare\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::bare"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bare_statement\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::bare_statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bare_statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::bare_statement::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bare_item\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::bare_item"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bare_item\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::bare_item::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enclosed\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::enclosed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enclosed_content\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::enclosed_content"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enclosed_content\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::enclosed_content::{{closure}}::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enclosed_statement\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::enclosed_statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enclosed_item\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::parser::enclosed_item"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::open"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::read"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","fn_type":"Safe","name":"steamy_vdf::load"}
