{"def_path":"[DisambiguatedDefPathData { data: Module(\"reporter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<reporter::DefaultTestReporter as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reporter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"averred\"), disambiguator: 0 }]","has_unsafe":false,"name":"<reporter::DefaultTestReporter as reporter::TestReporter>::averred"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reporter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ran\"), disambiguator: 0 }]","has_unsafe":false,"name":"<reporter::DefaultTestReporter as reporter::TestReporter>::ran"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reporter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tally\"), disambiguator: 0 }]","has_unsafe":false,"name":"<reporter::DefaultTestReporter as reporter::TestReporter>::tally"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"selftest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<selftest::TestTracker as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"selftest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<selftest::TestTracker as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"selftest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"averred\"), disambiguator: 0 }]","has_unsafe":false,"name":"<selftest::TestTracker as reporter::TestReporter>::averred"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"selftest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ran\"), disambiguator: 0 }]","has_unsafe":false,"name":"<selftest::TestTracker as reporter::TestReporter>::ran"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"selftest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tally\"), disambiguator: 0 }]","has_unsafe":false,"name":"<selftest::TestTracker as reporter::TestReporter>::tally"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"selftest\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"counts\"), disambiguator: 0 }]","has_unsafe":false,"name":"selftest::TestTracker::counts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test_block::TestBlock<'a, St>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_aver\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test_block::TestBlock<'a, St>>::eval_aver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ran\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test_block::TestBlock<'a, St>>::ran"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"test_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<test_block::TestBlock<'a, St> as std::ops::Drop>::drop"}
