{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::Device<'nvml> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::Device<'nvml> as std::convert::From<*mut ffi::bindings::nvmlDevice_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clear_cpu_affinity\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::clear_cpu_affinity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_api_restricted\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_api_restricted"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"applications_clock\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::applications_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"auto_boosted_clocks_enabled\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::auto_boosted_clocks_enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bar1_memory_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::bar1_memory_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"board_id\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::board_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"brand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::brand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bridge_chip_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::bridge_chip_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clock\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"max_customer_boost_clock\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::max_customer_boost_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"compute_mode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::compute_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clock_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::clock_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"running_compute_processes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::running_compute_processes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"running_compute_processes_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::running_compute_processes_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cpu_affinity\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::cpu_affinity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"current_pcie_link_gen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::current_pcie_link_gen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"current_pcie_link_width\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::current_pcie_link_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decoder_utilization\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::decoder_utilization"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default_applications_clock\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::default_applications_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"detailed_ecc_errors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::detailed_ecc_errors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_display_active\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_display_active"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_display_connected\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_display_connected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_ecc_enabled\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_ecc_enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encoder_utilization\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::encoder_utilization"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"enforced_power_limit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::enforced_power_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fan_speed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::fan_speed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"gpu_operation_mode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::gpu_operation_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"running_graphics_processes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::running_graphics_processes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"running_graphics_processes_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::running_graphics_processes_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"config_checksum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::config_checksum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info_rom_image_version\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::info_rom_image_version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info_rom_version\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::info_rom_version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"max_clock_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::max_clock_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"max_pcie_link_gen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::max_pcie_link_gen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"max_pcie_link_width\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::max_pcie_link_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"memory_error_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::memory_error_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"memory_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::memory_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"minor_number\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::minor_number"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_multi_gpu_board\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_multi_gpu_board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pci_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::pci_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pcie_replay_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::pcie_replay_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pcie_throughput\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::pcie_throughput"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"performance_state\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::performance_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_in_persistent_mode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_in_persistent_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"power_management_limit_default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::power_management_limit_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"power_management_limit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::power_management_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"power_management_limit_constraints\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::power_management_limit_constraints"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_power_management_algo_active\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_power_management_algo_active"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"power_state\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::power_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"power_usage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::power_usage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"retired_pages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::retired_pages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"retired_pages_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::retired_pages_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"are_pages_pending_retired\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::are_pages_pending_retired"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"samples\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::samples"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"samples_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::samples_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"serial\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::serial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"board_part_number\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::board_part_number"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"current_throttle_reasons\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::current_throttle_reasons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"current_throttle_reasons_strict\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::current_throttle_reasons_strict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"current_throttle_reasons_raw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::current_throttle_reasons_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_throttle_reasons\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_throttle_reasons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_throttle_reasons_strict\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_throttle_reasons_strict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_throttle_reasons_raw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_throttle_reasons_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_graphics_clocks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_graphics_clocks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_graphics_clocks_manual\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_graphics_clocks_manual"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_memory_clocks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_memory_clocks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_memory_clocks_manual\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_memory_clocks_manual"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"temperature\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::temperature"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"temperature_threshold\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::temperature_threshold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"topology_common_ancestor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::topology_common_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"topology_nearest_gpus\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::topology_nearest_gpus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"top_nearest_gpus_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::top_nearest_gpus_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"total_ecc_errors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::total_ecc_errors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"uuid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::uuid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"utilization_rates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::utilization_rates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"vbios_version\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::vbios_version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"violation_status\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::violation_status"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_on_same_board_as\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_on_same_board_as"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reset_applications_clocks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::reset_applications_clocks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_auto_boosted_clocks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_auto_boosted_clocks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_cpu_affinity\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_cpu_affinity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_auto_boosted_clocks_default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_auto_boosted_clocks_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"validate_info_rom\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::validate_info_rom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clear_accounting_pids\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::clear_accounting_pids"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"accounting_buffer_size\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::accounting_buffer_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_accounting_enabled\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_accounting_enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"accounting_pids\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::accounting_pids"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"accounting_pids_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::accounting_pids_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"accounting_stats_for\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::accounting_stats_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_accounting\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_accounting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clear_ecc_error_counts\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::clear_ecc_error_counts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_api_restricted\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_api_restricted"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_applications_clocks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_applications_clocks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_compute_mode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_compute_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_ecc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_ecc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_gpu_op_mode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_gpu_op_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_persistent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_persistent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_power_management_limit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_power_management_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"register_events\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::register_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_event_types\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_event_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_event_types_strict\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_event_types_strict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"supported_event_types_raw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::supported_event_types_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_drain\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::set_drain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_drain_enabled\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::is_drain_enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::device::Device::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"link_wrapper_for\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::device::Device::link_wrapper_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::device::Device::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::device::Device::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::device::Device::as_mut_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Bits as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Bits as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Bits as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Bits as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Bits as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Bits as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::error::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::error::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::error::Error::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::error::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::error::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::error::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::error::Error::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::str::Utf8Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::ffi::NulError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<error::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::error::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<error::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<T, E> as error::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<T> as error::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nvml_try\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::error::nvml_try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<unit::Unit<'nvml> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<unit::Unit<'nvml> as std::convert::From<*mut ffi::bindings::nvmlUnit_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"devices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::devices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"device_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::device_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fan_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::fan_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"led_state\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::led_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"psu_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::psu_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"temperature\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::temperature"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set_led_color\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::unit::Unit::set_led_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::unit::Unit::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::unit::Unit::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::unit::Unit::as_mut_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::AutoBoostClocksEnabledInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::AutoBoostClocksEnabledInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::AutoBoostClocksEnabledInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::AutoBoostClocksEnabledInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::AutoBoostClocksEnabledInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::AutoBoostClocksEnabledInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::UtilizationInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::UtilizationInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::UtilizationInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::UtilizationInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::UtilizationInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::UtilizationInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::EccModeState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::EccModeState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::EccModeState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::EccModeState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::EccModeState as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::EccModeState as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::OperationModeState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::PowerManagementConstraints as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::PowerManagementConstraints as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::PowerManagementConstraints as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::PowerManagementConstraints as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::PowerManagementConstraints as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::device::PowerManagementConstraints as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::nv_link::UtilizationCounter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::nv_link::UtilizationCounter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::nv_link::UtilizationCounter as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::nv_link::UtilizationCounter as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::nv_link::UtilizationCounter as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"structs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<structs::nv_link::UtilizationCounter as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::PciInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::PciInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::PciInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::PciInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::PciInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::PciInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::device::PciInfo::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_into_c\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::device::PciInfo::try_into_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_into_c\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"buf_size\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::struct_wrappers::device::PciInfo::try_into_c::buf_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BAR1MemoryInfo as std::convert::From<ffi::bindings::nvmlBAR1Memory_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::BridgeChipInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::BridgeChipInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::BridgeChipInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::device::BridgeChipInfo::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipHierarchy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipHierarchy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipHierarchy as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipHierarchy as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipHierarchy as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::BridgeChipHierarchy as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::struct_wrappers::device::BridgeChipHierarchy::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ProcessInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ProcessInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ProcessInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::ProcessInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::ProcessInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::ProcessInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ProcessInfo as std::convert::From<ffi::bindings::nvmlProcessInfo_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::EccErrorCounts as std::convert::From<ffi::bindings::nvmlEccErrorCounts_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::MemoryInfo as std::convert::From<ffi::bindings::nvmlMemory_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Utilization as std::convert::From<ffi::bindings::nvmlUtilization_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::ViolationTime as std::convert::From<ffi::bindings::nvmlViolationTime_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::AccountingStats as std::convert::From<ffi::bindings::nvmlAccountingStats_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Sample as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::device::Sample as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::Sample as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::device::Sample as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_tag_and_struct\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::device::Sample::from_tag_and_struct"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FansInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FansInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FansInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FansInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FansInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FansInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::struct_wrappers::unit::FansInfo::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FanInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FanInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FanInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::unit::FanInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::FanInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::unit::FanInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::unit::FanInfo::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::PsuInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::PsuInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::PsuInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::PsuInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::PsuInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::PsuInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::unit::PsuInfo::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::UnitInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::UnitInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::UnitInfo as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::UnitInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::UnitInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::UnitInfo as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::unit::UnitInfo::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::HwbcEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::HwbcEntry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::HwbcEntry as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::HwbcEntry as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::HwbcEntry as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::unit::HwbcEntry as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::unit::HwbcEntry::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::event::EventData<'nvml> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::event::EventData<'nvml> as std::convert::From<ffi::bindings::nvmlEventData_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::nv_link::UtilizationControl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::nv_link::UtilizationControl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::nv_link::UtilizationControl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::nv_link::UtilizationControl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<struct_wrappers::nv_link::UtilizationControl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<struct_wrappers::nv_link::UtilizationControl as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::struct_wrappers::nv_link::UtilizationControl::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"struct_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::struct_wrappers::nv_link::UtilizationControl::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::FirmwareVersion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::FirmwareVersion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::FirmwareVersion as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::FirmwareVersion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::FirmwareVersion as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::FirmwareVersion as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::FirmwareVersion as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::UsedGpuMemory as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::UsedGpuMemory as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::UsedGpuMemory as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::UsedGpuMemory as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::UsedGpuMemory as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::UsedGpuMemory as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::UsedGpuMemory as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::SampleValue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::device::SampleValue as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::SampleValue as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::device::SampleValue as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_tag_and_union\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enums::device::SampleValue::from_tag_and_union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::event::XidError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::event::XidError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::event::XidError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::event::XidError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::event::XidError as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::event::XidError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::unit::LedState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::unit::LedState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::unit::LedState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::unit::LedState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::unit::LedState as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::unit::LedState as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enums::unit::LedState::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::unit::TemperatureReading as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::unit::TemperatureReading as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::unit::TemperatureReading as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::unit::TemperatureReading as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::unit::TemperatureReading as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::nv_link::Counter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::nv_link::Counter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enums::nv_link::Counter as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::nv_link::Counter as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enums\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enums::nv_link::Counter as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::nv_link::UtilizationCountUnit::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::nv_link::UtilizationCountUnit::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::UtilizationCountUnit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::UtilizationCountUnit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::UtilizationCountUnit as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::nv_link::UtilizationCountUnit as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::nv_link::UtilizationCountUnit as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::nv_link::Capability::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::nv_link::Capability::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::Capability as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::Capability as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::Capability as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::nv_link::Capability as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::nv_link::Capability as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::nv_link::ErrorCounter::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::nv_link::ErrorCounter::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::ErrorCounter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::ErrorCounter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::nv_link::ErrorCounter as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::nv_link::ErrorCounter as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::nv_link::ErrorCounter as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::Api::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::Api::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Api as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Api as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Api as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Api as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Api as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::Clock::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::Clock::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Clock as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Clock as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Clock as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Clock as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Clock as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::ClockId::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::ClockId::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::ClockId as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::ClockId as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::ClockId as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::ClockId as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::ClockId as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::Brand::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::Brand::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Brand as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Brand as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Brand as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Brand as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Brand as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::BridgeChip::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::BridgeChip::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::BridgeChip as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::BridgeChip as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::BridgeChip as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::BridgeChip as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::BridgeChip as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::MemoryError::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::MemoryError::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::MemoryError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::MemoryError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::MemoryError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::MemoryError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::MemoryError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::EccCounter::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::EccCounter::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::EccCounter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::EccCounter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::EccCounter as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::EccCounter as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::EccCounter as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::MemoryLocation::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::MemoryLocation::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::MemoryLocation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::MemoryLocation as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::MemoryLocation as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::MemoryLocation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::MemoryLocation as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::OperationMode::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::OperationMode::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::OperationMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::OperationMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::OperationMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::OperationMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::OperationMode as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::InfoRom::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::InfoRom::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::InfoRom as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::InfoRom as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::InfoRom as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::InfoRom as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::InfoRom as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::PcieUtilCounter::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::PcieUtilCounter::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PcieUtilCounter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PcieUtilCounter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PcieUtilCounter as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::PcieUtilCounter as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::PcieUtilCounter as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::PerformanceState::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::PerformanceState::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PerformanceState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PerformanceState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PerformanceState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::PerformanceState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::PerformanceState as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::RetirementCause::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::RetirementCause::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::RetirementCause as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::RetirementCause as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::RetirementCause as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::RetirementCause as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::RetirementCause as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::Sampling::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::Sampling::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Sampling as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Sampling as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::Sampling as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Sampling as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::Sampling as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::TemperatureSensor::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::TemperatureSensor::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureSensor as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureSensor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureSensor as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureSensor as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureSensor as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::TemperatureThreshold::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::TemperatureThreshold::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureThreshold as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureThreshold as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TemperatureThreshold as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::TemperatureThreshold as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::TemperatureThreshold as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::TopologyLevel::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::TopologyLevel::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TopologyLevel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TopologyLevel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::TopologyLevel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::TopologyLevel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::TopologyLevel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::PerformancePolicy::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::PerformancePolicy::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PerformancePolicy as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PerformancePolicy as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::PerformancePolicy as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::PerformancePolicy as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::PerformancePolicy as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::ComputeMode::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::ComputeMode::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::ComputeMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::ComputeMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::ComputeMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::ComputeMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::ComputeMode as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::P2pStatus::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::P2pStatus::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::P2pStatus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::P2pStatus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::P2pStatus as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::P2pStatus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::P2pStatus as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::P2pCapabilitiesIndex::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::P2pCapabilitiesIndex::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::P2pCapabilitiesIndex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::P2pCapabilitiesIndex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::P2pCapabilitiesIndex as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::P2pCapabilitiesIndex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::P2pCapabilitiesIndex as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::device::SampleValueType::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::device::SampleValueType::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::SampleValueType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::SampleValueType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::device::SampleValueType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::SampleValueType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::device::SampleValueType as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::unit::FanState::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::unit::FanState::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::unit::FanState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::unit::FanState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::unit::FanState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::unit::FanState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::unit::FanState as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_c\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::unit::LedColor::as_c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::unit::LedColor::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::unit::LedColor as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::unit::LedColor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<enum_wrappers::unit::LedColor as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::unit::LedColor as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<enum_wrappers::unit::LedColor as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bool_from_state\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::enum_wrappers::bool_from_state"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"enum_wrappers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"state_from_bool\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::enum_wrappers::state_from_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<event::EventSet<'nvml> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<event::EventSet<'nvml> as std::convert::From<*mut ffi::bindings::nvmlEventSet_st>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"release_events\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::event::EventSet::release_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"wait\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::event::EventSet::wait"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::event::EventSet::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::event::EventSet::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::event::EventSet::as_mut_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<event::EventSet<'nvml> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"GPU_IDLE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::GPU_IDLE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"APPLICATIONS_CLOCKS_SETTING\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::APPLICATIONS_CLOCKS_SETTING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"USER_DEFINED_CLOCKS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::USER_DEFINED_CLOCKS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SW_POWER_CAP\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::SW_POWER_CAP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"HW_SLOWDOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::HW_SLOWDOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SYNC_BOOST\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::SYNC_BOOST"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"UNKNOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::UNKNOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NONE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags::NONE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"GPU_IDLE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::GPU_IDLE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"APPLICATIONS_CLOCKS_SETTING\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::APPLICATIONS_CLOCKS_SETTING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"USER_DEFINED_CLOCKS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::USER_DEFINED_CLOCKS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SW_POWER_CAP\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::SW_POWER_CAP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"HW_SLOWDOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::HW_SLOWDOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SYNC_BOOST\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::SYNC_BOOST"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"UNKNOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::UNKNOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NONE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as <bitmasks::device::ThrottleReasons as std::fmt::Debug>::fmt::__BitFlags>::NONE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Binary>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::Octal>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::LowerHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::fmt::UpperHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"GPU_IDLE\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::GPU_IDLE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"APPLICATIONS_CLOCKS_SETTING\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::APPLICATIONS_CLOCKS_SETTING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"USER_DEFINED_CLOCKS\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::USER_DEFINED_CLOCKS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SW_POWER_CAP\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::SW_POWER_CAP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"HW_SLOWDOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::HW_SLOWDOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SYNC_BOOST\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::SYNC_BOOST"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"UNKNOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::UNKNOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NONE\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::all::__BitFlags::NONE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"GPU_IDLE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::GPU_IDLE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"APPLICATIONS_CLOCKS_SETTING\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::APPLICATIONS_CLOCKS_SETTING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"USER_DEFINED_CLOCKS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::USER_DEFINED_CLOCKS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SW_POWER_CAP\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::SW_POWER_CAP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"HW_SLOWDOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::HW_SLOWDOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SYNC_BOOST\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::SYNC_BOOST"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"UNKNOWN\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::UNKNOWN"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NONE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as bitmasks::device::ThrottleReasons::all::__BitFlags>::NONE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::device::ThrottleReasons::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::BitOrAssign>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::BitXorAssign>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::BitAndAssign>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::iter::Extend<bitmasks::device::ThrottleReasons>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::device::ThrottleReasons as std::iter::FromIterator<bitmasks::device::ThrottleReasons>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_OP\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::NO_OP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"READ\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::READ"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WRITE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::WRITE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NON_RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::NON_RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FLUSH\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::FLUSH"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WITH_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::WITH_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags::NO_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_OP\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::NO_OP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"READ\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::READ"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WRITE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::WRITE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NON_RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::NON_RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FLUSH\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::FLUSH"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WITH_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::WITH_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as <bitmasks::nv_link::PacketTypes as std::fmt::Debug>::fmt::__BitFlags>::NO_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Binary>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::Octal>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::LowerHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::fmt::UpperHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_OP\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::NO_OP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"READ\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::READ"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WRITE\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::WRITE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NON_RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::NON_RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FLUSH\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::FLUSH"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WITH_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::WITH_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::all::__BitFlags::NO_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_OP\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::NO_OP"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"READ\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::READ"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WRITE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::WRITE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NON_RATOM\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::NON_RATOM"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FLUSH\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::FLUSH"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"WITH_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::WITH_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"NO_DATA\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as bitmasks::nv_link::PacketTypes::all::__BitFlags>::NO_DATA"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::nv_link::PacketTypes::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::BitOrAssign>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::BitXorAssign>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::BitAndAssign>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::iter::Extend<bitmasks::nv_link::PacketTypes>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::nv_link::PacketTypes as std::iter::FromIterator<bitmasks::nv_link::PacketTypes>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SINGLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags::SINGLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DOUBLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags::DOUBLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PSTATE_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags::PSTATE_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CRITICAL_XID_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags::CRITICAL_XID_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CLOCK_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags::CLOCK_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SINGLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as <bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags>::SINGLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DOUBLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as <bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags>::DOUBLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PSTATE_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as <bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags>::PSTATE_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CRITICAL_XID_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as <bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags>::CRITICAL_XID_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CLOCK_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as <bitmasks::event::EventTypes as std::fmt::Debug>::fmt::__BitFlags>::CLOCK_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Binary>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::Octal>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::LowerHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::fmt::UpperHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SINGLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::all::__BitFlags::SINGLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DOUBLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::all::__BitFlags::DOUBLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PSTATE_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::all::__BitFlags::PSTATE_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CRITICAL_XID_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::all::__BitFlags::CRITICAL_XID_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CLOCK_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::all::__BitFlags::CLOCK_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"SINGLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as bitmasks::event::EventTypes::all::__BitFlags>::SINGLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DOUBLE_BIT_ECC_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as bitmasks::event::EventTypes::all::__BitFlags>::DOUBLE_BIT_ECC_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PSTATE_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as bitmasks::event::EventTypes::all::__BitFlags>::PSTATE_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CRITICAL_XID_ERROR\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as bitmasks::event::EventTypes::all::__BitFlags>::CRITICAL_XID_ERROR"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"CLOCK_CHANGE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as bitmasks::event::EventTypes::all::__BitFlags>::CLOCK_CHANGE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::event::EventTypes::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::BitOrAssign>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::BitXorAssign>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::BitAndAssign>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::iter::Extend<bitmasks::event::EventTypes>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::event::EventTypes as std::iter::FromIterator<bitmasks::event::EventTypes>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DEFAULT\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::Debug>::fmt::__BitFlags::DEFAULT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FORCE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::Debug>::fmt::__BitFlags::FORCE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DEFAULT\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as <bitmasks::Behavior as std::fmt::Debug>::fmt::__BitFlags>::DEFAULT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FORCE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as <bitmasks::Behavior as std::fmt::Debug>::fmt::__BitFlags>::FORCE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::Binary>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::Octal>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::LowerHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::fmt::UpperHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DEFAULT\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::all::__BitFlags::DEFAULT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FORCE\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::all::__BitFlags::FORCE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"DEFAULT\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as bitmasks::Behavior::all::__BitFlags>::DEFAULT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"FORCE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as bitmasks::Behavior::all::__BitFlags>::FORCE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::bitmasks::Behavior::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::BitOrAssign>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::BitXorAssign>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::BitAndAssign>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::iter::Extend<bitmasks::Behavior>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitmasks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitmasks::Behavior as std::iter::FromIterator<bitmasks::Behavior>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nv_link::NvLink<'device, 'nvml> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"device\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::nv_link::NvLink::device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"link\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::nv_link::NvLink::link"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_active\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::is_active"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"version\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_capability\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::has_capability"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remote_pci_info\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::remote_pci_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"error_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::error_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset_error_counters\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::reset_error_counters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_utilization_control\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::set_utilization_control"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"utilization_control\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::utilization_control"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"utilization_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::utilization_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"freeze_utilization_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::freeze_utilization_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unfreeze_utilization_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::unfreeze_utilization_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_utilization_counter_frozen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::set_utilization_counter_frozen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nv_link\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset_utilization_counter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::nv_link::NvLink::reset_utilization_counter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::Event<'nvml> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::Event<'nvml> as std::convert::From<struct_wrappers::event::EventData<'nvml>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register_device\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::high_level::event_loop::EventLoop::register_device"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run_forever\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::high_level::event_loop::EventLoop::run_forever"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::high_level::event_loop::EventLoop::as_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::high_level::event_loop::EventLoop::as_mut_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::high_level::event_loop::EventLoop::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoop<'nvml> as std::convert::From<event::EventSet<'nvml>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoopState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoopState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoopState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoopState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoopState as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<high_level::event_loop::EventLoopState as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"interrupt\"), disambiguator: 0 }]","fn_type":"Safe","name":"nvml_wrapper::high_level::event_loop::EventLoopState::interrupt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"high_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"event_loop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"create_event_loop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<NVML as high_level::event_loop::EventLoopProvider>::create_event_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NVML as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::init"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"device_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::device_count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sys_driver_version\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::sys_driver_version"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sys_nvml_version\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::sys_nvml_version"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sys_process_name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::sys_process_name"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"device_by_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::device_by_index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"device_by_pci_bus_id\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::device_by_pci_bus_id"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"device_by_serial\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::device_by_serial"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"device_by_uuid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::device_by_uuid"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"topology_common_ancestor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::topology_common_ancestor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unit_by_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::unit_by_index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"are_devices_on_same_board\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::are_devices_on_same_board"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"topology_gpu_set\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::topology_gpu_set"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"topology_gpu_set_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::topology_gpu_set_count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hic_versions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::hic_versions"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hic_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::hic_count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unit_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::unit_count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_event_set\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::create_event_set"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discover_gpus\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"nvml_wrapper::NVML::discover_gpus"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<NVML as std::ops::Drop>::drop"}
