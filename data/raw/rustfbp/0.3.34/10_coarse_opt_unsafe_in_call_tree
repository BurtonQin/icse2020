{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::add_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_if_needed\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::start_if_needed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_agent\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::start_agent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_agent\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::remove_agent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::connect_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_to_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::connect_to_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_array_to_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::connect_array_to_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::disconnect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::disconnect_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_input_array_element\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::add_input_array_element"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"soft_add_input_array_element\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::soft_add_input_array_element"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_output_array_element\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::add_output_array_element"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_receiver\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::set_receiver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_array_receiver\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::set_array_receiver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_sender\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::get_sender"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_array_sender\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::get_array_sender"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_input\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::get_schema_input"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_input_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::get_schema_input_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_output\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::get_schema_output"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_output_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::get_schema_output_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inc\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dec\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::dec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_agent\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::new_agent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"halt\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::halt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run_end\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::SchedState::run_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::SchedState::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edit_agent\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::SchedState::edit_agent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edit_one_comp\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::SchedState::edit_one_comp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::AgentCache::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_comp\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::AgentCache::create_comp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_input\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::AgentCache::get_schema_input"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_input_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::AgentCache::get_schema_input_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_output\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::AgentCache::get_schema_output"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_schema_output_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::AgentCache::get_schema_output_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"ports::Msg::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_schema\"), disambiguator: 0 }]","has_unsafe":true,"name":"ports::Msg::read_schema"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build_schema\"), disambiguator: 0 }]","has_unsafe":false,"name":"ports::Msg::build_schema"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edit_schema\"), disambiguator: 0 }]","has_unsafe":true,"name":"ports::Msg::edit_schema"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"before_send\"), disambiguator: 0 }]","has_unsafe":true,"name":"ports::Msg::before_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ports::Msg as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ports::MsgSender as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","has_unsafe":true,"name":"ports::MsgSender::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::option::Option<ports::MsgSender> as ports::OutputSend>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"ports::MsgReceiver::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"recv\"), disambiguator: 0 }]","has_unsafe":false,"name":"ports::MsgReceiver::recv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"try_recv\"), disambiguator: 0 }]","has_unsafe":false,"name":"ports::MsgReceiver::try_recv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ports\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_sender\"), disambiguator: 0 }]","has_unsafe":false,"name":"ports::MsgReceiver::get_sender"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<capnp::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<capnp::NotInSchema>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::string::FromUtf8Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::sync::mpsc::RecvError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::sync::mpsc::TryRecvError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::sync::mpsc::SendError<scheduler::CompMsg>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"result\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<result::Error as std::convert::From<std::sync::mpsc::SendError<ports::Msg>>>::from"}
