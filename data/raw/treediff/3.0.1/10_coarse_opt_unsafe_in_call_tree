{"def_path":"[DisambiguatedDefPathData { data: Module(\"traitdef\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::traitdef::Delegate::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traitdef\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::traitdef::Delegate::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traitdef\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"removed\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::traitdef::Delegate::removed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traitdef\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"added\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::traitdef::Delegate::added"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traitdef\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unchanged\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::traitdef::Delegate::unchanged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traitdef\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Delegate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"modified\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::traitdef::Delegate::modified"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diff\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::diff::diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diff\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<diff::OrdByKey<'a, K, V> as std::convert::From<(K, &'a V)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diff\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<diff::OrdByKey<'a, K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diff\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<diff::OrdByKey<'a, K, V> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"diff\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<diff::OrdByKey<'a, K, V> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"appended\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::tools::merge::appended"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"MutableFilter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resolve_conflict\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::tools::merge::MutableFilter::resolve_conflict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"MutableFilter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resolve_removal\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::tools::merge::MutableFilter::resolve_removal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as traitdef::Delegate<'a, K, V>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as traitdef::Delegate<'a, K, V>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"removed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as traitdef::Delegate<'a, K, V>>::removed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"added\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as traitdef::Delegate<'a, K, V>>::added"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unchanged\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as traitdef::Delegate<'a, K, V>>::unchanged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"modified\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as traitdef::Delegate<'a, K, V>>::modified"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"filter_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F>>::filter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F>>::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<K, V, BF, F> as std::convert::AsRef<V>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"with_filter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<<V as traitdef::Mutable>::Key, V, BF, F>>::with_filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"merge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::merge::Merger<<V as traitdef::Mutable>::Key, V, tools::merge::DefaultMutableFilter, tools::merge::DefaultMutableFilter> as std::convert::From<V>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::ChangeType<'a, K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<tools::record::ChangeType<'a, K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<tools::record::ChangeType<'a, K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mk\"), disambiguator: 0 }]","fn_type":"Safe","name":"treediff::tools::record::mk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as traitdef::Delegate<'a, K, V>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as traitdef::Delegate<'a, K, V>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"removed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as traitdef::Delegate<'a, K, V>>::removed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"added\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as traitdef::Delegate<'a, K, V>>::added"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unchanged\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as traitdef::Delegate<'a, K, V>>::unchanged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tools\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"record\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"modified\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tools::record::Recorder<'a, K, V> as traitdef::Delegate<'a, K, V>>::modified"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::shared::Key as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::shared::Key as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::shared::Key as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<value::shared::Key as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"value\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<value::shared::Key as std::fmt::Display>::fmt"}
