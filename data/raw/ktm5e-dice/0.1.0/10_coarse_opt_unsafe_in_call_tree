{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::<impl Dice>::minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::<impl Dice>::maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","has_unsafe":true,"name":"statistics::dice::<impl Dice>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"results\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::<impl Dice>::results"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::<impl Dice>::probabilities"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"repeat\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::repeat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coefficients\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::coefficients"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::probabilities"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polynomials_drop_minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::polynomials_drop_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polynomial_drop_minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::polynomial_drop_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities_drop_minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::probabilities_drop_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities_minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::probabilities_minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polynomials_drop_maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::polynomials_drop_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polynomial_drop_maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::polynomial_drop_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities_drop_maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::probabilities_drop_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities_maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::dice::probabilities_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"die\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::die::<impl Die>::minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"die\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::die::<impl Die>::maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"die\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::die::<impl Die>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"die\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"results\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::die::<impl Die>::results"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"die\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::die::<impl Die>::probabilities"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"minimum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::expression::<impl Expression>::minimum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::expression::<impl Expression>::maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","has_unsafe":true,"name":"statistics::expression::<impl Expression>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"results\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::expression::<impl Expression>::results"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"probabilities\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::expression::<impl Expression>::probabilities"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::polynomial::Polynomial as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::polynomial::Polynomial as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::Polynomial::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::Polynomial::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::Polynomial::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::Polynomial::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reduce\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::Polynomial::reduce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::polynomial::Polynomial as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::polynomial::Polynomial as std::ops::AddAssign<&'a statistics::polynomial::Polynomial>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::polynomial::Polynomial as std::ops::SubAssign<&'a statistics::polynomial::Polynomial>>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"multiply\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::multiply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polynomial\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::polynomial::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"numerator\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::numerator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"denominator\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::denominator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"quotient\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::quotient"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remainder\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::remainder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digits\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::digits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"percentage\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::percentage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"real\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checked_add\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::checked_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checked_div\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::checked_div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checked_mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::checked_mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checked_sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::checked_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"canonicalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::Ratio::canonicalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::<impl std::convert::From<statistics::ratio::Ratio> for f32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::<impl std::convert::From<statistics::ratio::Ratio> for f64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::MulAssign>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<statistics::ratio::Ratio as std::ops::DivAssign>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ratio\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::ratio::gcd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"statistics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"numerators\"), disambiguator: 0 }]","has_unsafe":false,"name":"statistics::numerators"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::TokenValue<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::TokenValue<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::lexer::TokenValue<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::lexer::TokenValue<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::TokenValue<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::Lexer<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ok\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::ok"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"err\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"advance\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::advance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::skip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lex_integer\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::lex_integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lex_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::lex_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lex\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Lexer::lex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::Token<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::Token<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::lexer::Token<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<syntax::lexer::Token<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::lexer::Token<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Token::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::lexer::Token::to_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::parser::Parser<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"advance\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::advance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_integer\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::parse_integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_reroll\"), disambiguator: 0 }]","has_unsafe":true,"name":"syntax::parser::Parser::parse_reroll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::Parser::parse_fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_atom\"), disambiguator: 0 }]","has_unsafe":true,"name":"syntax::parser::Parser::parse_atom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_expression\"), disambiguator: 0 }]","has_unsafe":true,"name":"syntax::parser::Parser::parse_expression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"syntax::parser::Parser::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"precedence\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::parser::precedence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::ParseError::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseRange as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseRange as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseRange as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseRange as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseRange as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"syntax::ParseRange::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<syntax::ParseRange as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"syntax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"syntax::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Binary as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Binary as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Binary as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Binary as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"combine\"), disambiguator: 0 }]","has_unsafe":false,"name":"Binary::combine"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Expression as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Expression as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Expression as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Expression as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Expression as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"roll\"), disambiguator: 0 }]","has_unsafe":true,"name":"Expression::roll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fold as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fold as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Fold as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Fold as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"combine\"), disambiguator: 0 }]","has_unsafe":false,"name":"Fold::combine"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dice as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dice as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dice as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dice as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dice as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Dice as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"Dice::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"Dice::size"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"die\"), disambiguator: 0 }]","has_unsafe":false,"name":"Dice::die"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"roll\"), disambiguator: 0 }]","has_unsafe":false,"name":"Dice::roll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Die as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"Die::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"Die::size"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"roll\"), disambiguator: 0 }]","has_unsafe":true,"name":"Die::roll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Reroll as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"Reroll::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"reroll\"), disambiguator: 0 }]","has_unsafe":false,"name":"Reroll::reroll"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":true,"name":"generate"}
