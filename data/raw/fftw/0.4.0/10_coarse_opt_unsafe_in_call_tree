{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<FFTW_MUTEX as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<FFTW_MUTEX as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<FFTW_MUTEX as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<array::AlignedArray<A, D> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, ndarray::Dim<[usize; _]>>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dim\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::dim"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"shape\"), disambiguator: 0 }]","has_unsafe":false,"name":"<array::AlignedArray<A, D>>::shape"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"copy_from_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::copy_from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::as_slice_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_view\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::as_view"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_view_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedArray<A, D>>::as_view_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<array::AlignedVec<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T>>::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T>>::as_slice_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_view\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T>>::as_view"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_view_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T>>::as_view_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T> as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T> as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"array\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<array::AlignedVec<T> as std::ops::IndexMut<usize>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::convert::From<error::InvalidPlanError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::convert::From<ndarray::ShapeError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::Error as std::convert::From<plan::InputMismatchError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::InvalidPlanError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::InvalidPlanError::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Sign as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Sign as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Sign as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Sign as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Sign as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Sign as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Flag as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Flag as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Flag as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Flag as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::Flag as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Flag as std::convert::Into<u32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::Flag as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::Plan<A, B, P> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f64>, num_complex::Complex<f64>, *mut ffi::fftw_plan_s> as plan::C2CPlan>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"c2c\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f64>, num_complex::Complex<f64>, *mut ffi::fftw_plan_s> as plan::C2CPlan>::c2c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f32>, num_complex::Complex<f32>, *mut ffi::fftwf_plan_s> as plan::C2CPlan>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"c2c\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f32>, num_complex::Complex<f32>, *mut ffi::fftwf_plan_s> as plan::C2CPlan>::c2c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<f64, num_complex::Complex<f64>, *mut ffi::fftw_plan_s> as plan::R2CPlan>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"r2c\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<f64, num_complex::Complex<f64>, *mut ffi::fftw_plan_s> as plan::R2CPlan>::r2c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<f32, num_complex::Complex<f32>, *mut ffi::fftwf_plan_s> as plan::R2CPlan>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"r2c\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<f32, num_complex::Complex<f32>, *mut ffi::fftwf_plan_s> as plan::R2CPlan>::r2c"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f64>, f64, *mut ffi::fftw_plan_s> as plan::C2RPlan>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"c2r\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f64>, f64, *mut ffi::fftw_plan_s> as plan::C2RPlan>::c2r"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f32>, f32, *mut ffi::fftwf_plan_s> as plan::C2RPlan>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"c2r\"), disambiguator: 0 }]","has_unsafe":true,"name":"<plan::Plan<num_complex::Complex<f32>, f32, *mut ffi::fftwf_plan_s> as plan::C2RPlan>::c2r"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"validate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<*mut ffi::fftw_plan_s as plan::PlanSpec>::validate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"destroy\"), disambiguator: 0 }]","has_unsafe":true,"name":"<*mut ffi::fftw_plan_s as plan::PlanSpec>::destroy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"print\"), disambiguator: 0 }]","has_unsafe":true,"name":"<*mut ffi::fftw_plan_s as plan::PlanSpec>::print"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"validate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<*mut ffi::fftwf_plan_s as plan::PlanSpec>::validate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"destroy\"), disambiguator: 0 }]","has_unsafe":true,"name":"<*mut ffi::fftwf_plan_s as plan::PlanSpec>::destroy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"print\"), disambiguator: 0 }]","has_unsafe":true,"name":"<*mut ffi::fftwf_plan_s as plan::PlanSpec>::print"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::Alignment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::Alignment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::Alignment as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::Alignment as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::Alignment as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"alignment_of\"), disambiguator: 0 }]","has_unsafe":true,"name":"plan::alignment_of"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"plan::Alignment::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"check\"), disambiguator: 0 }]","has_unsafe":true,"name":"plan::Alignment::check"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<plan::InputMismatchError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plan\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_cint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<[usize] as plan::ToCInt>::to_cint"}
