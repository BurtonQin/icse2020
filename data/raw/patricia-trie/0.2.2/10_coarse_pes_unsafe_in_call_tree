{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::Node<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::Node<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::Node<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::Node<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::Node<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::OwnedNode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::OwnedNode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::OwnedNode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::OwnedNode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::OwnedNode as std::convert::From<node::Node<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDB<'db, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"db\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::TrieDB<'db, H, C>>::db"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_data\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDB<'db, H, C>>::root_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_raw_or_lookup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDB<'db, H, C>>::get_raw_or_lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::TrieDB<'db, H, C> as Trie<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDB<'db, H, C> as Trie<H, C>>::get_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDB<'db, H, C> as Trie<H, C>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieAwareDebugNode<'db, 'a, H, C> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDB<'db, H, C> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::Status as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::Status as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::Status as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::Status as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::Crumb as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::Crumb as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::Crumb as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"increment\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::triedb::Crumb::increment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDBIterator<'a, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDBIterator<'a, H, C>>::seek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"descend\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDBIterator<'a, H, C>>::descend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"descend_into_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::TrieDBIterator<'a, H, C>>::descend_into_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedb::TrieDBIterator<'a, H, C>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDBIterator<'a, H, C> as TrieIterator<H, C>>::seek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedb::TrieDBIterator<'a, H, C> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::StorageHandle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::NodeHandle<H> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::NodeHandle<H> as std::convert::From<triedbmut::StorageHandle>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty_children\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::triedbmut::empty_children"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::Node<H> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inline_or_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::Node<O>>::inline_or_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_encoded\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::Node<O>>::from_encoded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_encoded\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::Node<O>>::into_encoded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_action\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::InsertAction<H>>::into_action"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::InsertAction<H>>::unwrap_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::NodeStorage<H>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"alloc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::NodeStorage<H>>::alloc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"destroy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::NodeStorage<H>>::destroy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::NodeStorage<H> as std::ops::Index<&'a triedbmut::StorageHandle>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::TrieDBMut<'a, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_existing\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::from_existing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"db\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::TrieDBMut<'a, H, C>>::db"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"db_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::TrieDBMut<'a, H, C>>::db_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"inspect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::inspect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lookup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"insert_at\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::insert_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"insert_inspector\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::insert_inspector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remove_at\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::remove_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remove_inspector\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::remove_inspector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::fix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<triedbmut::TrieDBMut<'a, H, C>>::fix::UsedIndex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"commit_child\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C>>::commit_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"root_handle\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triedbmut::TrieDBMut<'a, H, C>>::root_handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C> as TrieMut<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C> as TrieMut<H, C>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C> as TrieMut<H, C>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C> as TrieMut<H, C>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C> as TrieMut<H, C>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<triedbmut::TrieDBMut<'a, H, C> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedb::SecTrieDB<'db, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sectriedb::SecTrieDB<'db, H, C>>::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sectriedb::SecTrieDB<'db, H, C>>::raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sectriedb::SecTrieDB<'db, H, C> as Trie<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedb::SecTrieDB<'db, H, C> as Trie<H, C>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedb::SecTrieDB<'db, H, C> as Trie<H, C>>::get_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedb::SecTrieDB<'db, H, C> as Trie<H, C>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_existing\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C>>::from_existing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"db\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C>>::db"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"db_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C>>::db_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C> as TrieMut<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C> as TrieMut<H, C>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C> as TrieMut<H, C>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C> as TrieMut<H, C>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C> as TrieMut<H, C>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sectriedbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sectriedbmut::SecTrieDBMut<'db, H, C> as TrieMut<H, C>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<recorder::Record<HO> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<recorder::Record<HO> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Record<HO> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Record<HO> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<recorder::Record<HO> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Recorder<HO> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Recorder<HO> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Recorder<HO>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_depth\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Recorder<HO>>::with_depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"record\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Recorder<HO>>::record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recorder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<recorder::Recorder<HO>>::drain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDB<'db, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"db\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fatdb::FatDB<'db, H, C>>::db"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fatdb::FatDB<'db, H, C> as Trie<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDB<'db, H, C> as Trie<H, C>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDB<'db, H, C> as Trie<H, C>>::get_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDB<'db, H, C> as Trie<H, C>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDBIterator<'db, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDBIterator<'db, H, C> as TrieIterator<H, C>>::seek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdb::FatDBIterator<'db, H, C> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fatdbmut::FatDBMut<'db, H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_existing\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C>>::from_existing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"db\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fatdbmut::FatDBMut<'db, H, C>>::db"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"db_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fatdbmut::FatDBMut<'db, H, C>>::db_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C> as TrieMut<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C> as TrieMut<H, C>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C> as TrieMut<H, C>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C> as TrieMut<H, C>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C> as TrieMut<H, C>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fatdbmut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fatdbmut::FatDBMut<'db, H, C> as TrieMut<H, C>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lookup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"look_up\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lookup::Lookup<'a, H, C, Q>>::look_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibblevec::NibbleVec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<nibblevec::NibbleVec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibblevec::NibbleVec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibblevec::NibbleVec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibblevec::NibbleVec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<nibblevec::NibbleVec as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::nibblevec::NibbleVec::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibblevec::NibbleVec::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibblevec::NibbleVec::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"at\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibblevec::NibbleVec::at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::nibblevec::NibbleVec::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::nibblevec::NibbleVec::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_nibbleslice\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibblevec::NibbleVec::as_nibbleslice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibblevec::NibbleVec::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibblevec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<nibblevec::NibbleVec as std::convert::From<nibbleslice::NibbleSlice<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSlice<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSlice<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSlice<'a> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSliceIterator<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::new_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_composed\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::new_composed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_encoded\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::from_encoded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"at\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mid\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::mid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"starts_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::starts_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"common_prefix\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::nibbleslice::NibbleSlice::common_prefix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encoded\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::nibbleslice::NibbleSlice::encoded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encoded_leftmost\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::nibbleslice::NibbleSlice::encoded_leftmost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSlice<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSlice<'a> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nibbleslice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<nibbleslice::NibbleSlice<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieError<T, E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieError<T, E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieError<T, E> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieError<T, E> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieError<T, E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieError<T, E> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieError<T, E> as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Query\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"record\"), disambiguator: 0 }]","fn_type":"Safe","name":"patricia_trie::Query::record"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut recorder::Recorder<<H as hashdb::Hasher>::Out> as Query<H>>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"record\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a mut recorder::Recorder<<H as hashdb::Hasher>::Out> as Query<H>>::record"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<F as Query<H>>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'a mut recorder::Recorder<<H as hashdb::Hasher>::Out>, F) as Query<H>>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"record\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(&'a mut recorder::Recorder<<H as hashdb::Hasher>::Out>, F) as Query<H>>::record"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::Trie::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::Trie::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::Trie::get"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"TrieMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"patricia_trie::TrieMut::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieSpec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieSpec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieSpec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieSpec as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieFactory<H, C> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieFactory<H, C> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieKinds<'db, H, C> as Trie<H, C>>::root"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieKinds<'db, H, C> as Trie<H, C>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieKinds<'db, H, C> as Trie<H, C>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieKinds<'db, H, C> as Trie<H, C>>::get_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieKinds<'db, H, C> as Trie<H, C>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieFactory<H, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"readonly\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieFactory<H, C>>::readonly"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TrieFactory<H, C>>::create"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_existing\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieFactory<H, C>>::from_existing"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_fat\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<TrieFactory<H, C>>::is_fat"}
