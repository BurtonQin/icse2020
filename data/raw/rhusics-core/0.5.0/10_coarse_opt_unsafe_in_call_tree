{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"body_pose::_IMPL_SERIALIZE_FOR_BodyPose::<impl serde::Serialize for body_pose::BodyPose<P, R>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__Visitor<'de, P, R> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__Visitor<'de, P, R> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_BodyPose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::_IMPL_DESERIALIZE_FOR_BodyPose::<impl serde::Deserialize<'de> for body_pose::BodyPose<P, R>>::deserialize::__Visitor<'de, P, R> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as rhusics_transform::Pose<P, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_rotation\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as rhusics_transform::Pose<P, R>>::set_rotation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_position\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as rhusics_transform::Pose<P, R>>::set_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotation\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as rhusics_transform::Pose<P, R>>::rotation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as rhusics_transform::Pose<P, R>>::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"look_at\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::look_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"transform_vector\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::transform_vector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"inverse_transform_vector\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::inverse_transform_vector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"transform_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::transform_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"inverse_transform\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as cgmath::Transform<P>>::inverse_transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"translation_interpolate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as collision::TranslationInterpolate<<P as cgmath::EuclideanSpace>::Scalar>>::translation_interpolate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"body_pose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"interpolate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<body_pose::BodyPose<P, R> as collision::Interpolate<<P as cgmath::EuclideanSpace>::Scalar>>::interpolate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"narrow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"collide\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::algorithm::minkowski::GJK<S, E, <<P as collision::Primitive>::Point as cgmath::EuclideanSpace>::Scalar> as collide::narrow::NarrowPhase<P, T, B, Y>>::collide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"narrow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"collide_continuous\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collision::algorithm::minkowski::GJK<S, E, <<P as collision::Primitive>::Point as cgmath::EuclideanSpace>::Scalar> as collide::narrow::NarrowPhase<P, T, B, Y>>::collide_continuous"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"narrow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::narrow::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"narrow\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"narrow_collide\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::narrow::narrow_collide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"broad\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_potentials\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::algorithm::broad_phase::BruteForce as collide::broad::BroadPhase<A>>::find_potentials"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"broad\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find_potentials\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::algorithm::broad_phase::SweepAndPrune<V> as collide::broad::BroadPhase<A>>::find_potentials"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"broad\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"broad_collide\"), disambiguator: 0 }]","has_unsafe":true,"name":"collide::broad::broad_collide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"should_generate_contacts\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as collide::Collider>::should_generate_contacts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collide::CollisionMode as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collide::CollisionMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::_IMPL_SERIALIZE_FOR_CollisionMode::<impl serde::Serialize for collide::CollisionMode>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionMode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_enum\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionMode::<impl serde::Deserialize<'de> for collide::CollisionMode>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_enum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::ContactEvent<ID, P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::ContactEvent<ID, P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::ContactEvent<ID, P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_simple\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::ContactEvent<ID, P>>::new_simple"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::_IMPL_SERIALIZE_FOR_CollisionShape::<impl serde::Serialize for collide::CollisionShape<P, T, B, Y>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__Visitor<'de, P, T, B, Y> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__Visitor<'de, P, T, B, Y> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_CollisionShape\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::_IMPL_DESERIALIZE_FOR_CollisionShape::<impl serde::Deserialize<'de> for collide::CollisionShape<P, T, B, Y>>::deserialize::__Visitor<'de, P, T, B, Y> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_complex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y>>::new_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_simple\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y>>::new_simple"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_simple_with_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y>>::new_simple_with_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_simple_offset\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y>>::new_simple_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collide::CollisionShape<P, T, B, Y>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y>>::bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"primitives\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y>>::primitives"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y> as collision::HasBound>::bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::get_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"CollisionData\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_dirty_poses\"), disambiguator: 0 }]","has_unsafe":false,"name":"collide::CollisionData::get_dirty_poses"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::dbvt::TreeValueWrapped<I, B> as collide::GetId<I>>::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"basic_collide\"), disambiguator: 0 }]","has_unsafe":true,"name":"collide::basic_collide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collide\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tree_collide\"), disambiguator: 0 }]","has_unsafe":true,"name":"collide::tree_collide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"simple\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_frame_integration\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::simple::next_frame_integration"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"simple\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_frame_pose\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::simple::next_frame_pose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_pose\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A>>::add_pose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_velocity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A>>::add_velocity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::SingleChangeSet<B, P, R, A>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::resolution::ResolveData<'a, B, P, R, I, A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resolve_contact\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::resolution::resolve_contact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"positional_correction\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::resolution::positional_correction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_pose\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::resolution::new_pose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Circle<S> as physics::volumes::Volume<S, S>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Rectangle<S> as physics::volumes::Volume<S, S>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Square<S> as physics::volumes::Volume<S, S>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::ConvexPolygon<S> as physics::volumes::Volume<S, S>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Sphere<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Cuboid<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Cube<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poly_sub_expr_calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::volumes::poly_sub_expr_calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collision::primitive::ConvexPolyhedron<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Primitive2<S> as physics::volumes::Volume<S, S>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Capsule<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collision::primitive::Cylinder<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collision::primitive::Primitive3<S> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y> as physics::volumes::Volume<S, S>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"d2\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::volumes::d2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"get_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collide::CollisionShape<P, T, B, Y> as physics::volumes::Volume<S, cgmath::Matrix3<S>>>::get_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"volumes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"d3\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::volumes::d3"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::mass::_IMPL_SERIALIZE_FOR_Mass::<impl serde::Serialize for physics::mass::Mass<S, I>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__Visitor<'de, S, I> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__Visitor<'de, S, I> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::_IMPL_DESERIALIZE_FOR_Mass::<impl serde::Deserialize<'de> for physics::mass::Mass<S, I>>::deserialize::__Visitor<'de, S, I> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"infinite\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as physics::mass::Inertia>::infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as physics::mass::Inertia>::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tensor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as physics::mass::Inertia>::tensor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as physics::mass::Inertia>::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tensor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as physics::mass::Inertia>::tensor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"infinite\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f64 as physics::mass::Inertia>::infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cgmath::Matrix3<S> as physics::mass::Inertia>::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"tensor\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cgmath::Matrix3<S> as physics::mass::Inertia>::tensor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"infinite\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cgmath::Matrix3<S> as physics::mass::Inertia>::infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"infinite\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_inertia\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::new_with_inertia"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_volume_and_material\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::from_volume_and_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"inverse_mass\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::inverse_mass"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"local_inertia\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::local_inertia"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"world_inertia\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::world_inertia"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"local_inverse_inertia\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::local_inverse_inertia"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"world_inverse_inertia\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::mass::Mass<S, I>>::world_inverse_inertia"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::velocity::_IMPL_SERIALIZE_FOR_Velocity::<impl serde::Serialize for physics::velocity::Velocity<L, A>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__Visitor<'de, L, A> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__Visitor<'de, L, A> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::_IMPL_DESERIALIZE_FOR_Velocity::<impl serde::Deserialize<'de> for physics::velocity::Velocity<L, A>>::deserialize::__Visitor<'de, L, A> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_linear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::from_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_linear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::set_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"linear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_angular\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::set_angular"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"angular\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::angular"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply_linear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::apply_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply_angular\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::velocity::Velocity<L, A>>::apply_angular"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"<S as physics::velocity::ApplyAngular<S, S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":true,"name":"<cgmath::Basis2<S> as physics::velocity::ApplyAngular<S, S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"velocity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cgmath::Quaternion<S> as physics::velocity::ApplyAngular<S, cgmath::Vector3<S>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::force::_IMPL_SERIALIZE_FOR_ForceAccumulator::<impl serde::Serialize for physics::force::ForceAccumulator<F, T>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__Visitor<'de, F, T> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__Visitor<'de, F, T> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_ForceAccumulator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::_IMPL_DESERIALIZE_FOR_ForceAccumulator::<impl serde::Deserialize<'de> for physics::force::ForceAccumulator<F, T>>::deserialize::__Visitor<'de, F, T> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_force\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T>>::add_force"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_torque\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T>>::add_torque"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_force_at_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T>>::add_force_at_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"consume_force\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T>>::consume_force"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"force\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"consume_torque\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::force::ForceAccumulator<F, T>>::consume_torque"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","has_unsafe":false,"name":"<S as physics::util::PartialCrossProduct<cgmath::Vector2<S>>>::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cgmath::Vector2<S> as physics::util::PartialCrossProduct>::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cgmath::Vector3<S> as physics::util::PartialCrossProduct>::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::Material as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::_IMPL_SERIALIZE_FOR_Material::<impl serde::Serialize for physics::Material>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_Material\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_Material::<impl serde::Deserialize<'de> for physics::Material>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::Material as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::Material::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"density\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::Material::density"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"restitution\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::Material::restitution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::RigidBody<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::_IMPL_SERIALIZE_FOR_RigidBody::<impl serde::Serialize for physics::RigidBody<S>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__Visitor<'de, S> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__Visitor<'de, S> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RigidBody\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::_IMPL_DESERIALIZE_FOR_RigidBody::<impl serde::Deserialize<'de> for physics::RigidBody<S>>::deserialize::__Visitor<'de, S> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::RigidBody<S> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::RigidBody<S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"material\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::RigidBody<S>>::material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"physics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"gravity_scale\"), disambiguator: 0 }]","has_unsafe":false,"name":"<physics::RigidBody<S>>::gravity_scale"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<NextFrame<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<NextFrame<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<NextFrame<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<NextFrame<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"_IMPL_SERIALIZE_FOR_NextFrame::<impl serde::Serialize for NextFrame<T>>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__Visitor<'de, T> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__Visitor<'de, T> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_NextFrame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"<_IMPL_DESERIALIZE_FOR_NextFrame::<impl serde::Deserialize<'de> for NextFrame<T>>::deserialize::__Visitor<'de, T> as serde::de::Visitor<'de>>::visit_map"}
