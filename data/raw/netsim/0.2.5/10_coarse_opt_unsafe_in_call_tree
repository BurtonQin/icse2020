{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv4_addr::Ipv4AddrClass as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<util::ipv4_addr::Ipv4AddrClass as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<util::ipv4_addr::Ipv4AddrClass as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv4_addr::Ipv4AddrClass as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv4_addr::Ipv4AddrClass as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv4_addr::Ipv4AddrClass as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_global\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::Ipv4Addr as util::ipv4_addr::Ipv4AddrExt>::random_global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_global\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv4Addr as util::ipv4_addr::Ipv4AddrExt>::is_global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_reserved\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv4Addr as util::ipv4_addr::Ipv4AddrExt>::is_reserved"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"class\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv4Addr as util::ipv4_addr::Ipv4AddrExt>::class"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_netmask_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv4Addr as util::ipv4_addr::Ipv4AddrExt>::from_netmask_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv6_addr::Ipv6AddrClass as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<util::ipv6_addr::Ipv6AddrClass as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<util::ipv6_addr::Ipv6AddrClass as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv6_addr::Ipv6AddrClass as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv6_addr::Ipv6AddrClass as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<util::ipv6_addr::Ipv6AddrClass as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_global\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::random_global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_unicast_global\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::is_unicast_global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_unicast_link_local\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::is_unicast_link_local"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_unicast_site_local\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::is_unicast_site_local"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_unique_local\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::is_unique_local"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_documentation\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::is_documentation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"class\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::class"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6_addr\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_netmask_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::Ipv6Addr as util::ipv6_addr::Ipv6AddrExt>::from_netmask_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"duration\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_f64\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::time::Duration as util::duration::DurationExt>::mul_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"duration\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_to_f64\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::time::Duration as util::duration::DurationExt>::div_to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expovariate_rand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::util::expovariate_rand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::__ifreq_ifr_ifrn as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::__ifreq_ifr_ifru as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::ifreq as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"errno\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::sys::errno"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::ifmap as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::ifmap as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::rtentry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::ifaddrmsg as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::ifaddrmsg as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::rtattr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sys\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sys::rtattr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<async_fd::AsyncFd as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::async_fd::AsyncFd::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<async_fd::AsyncFd as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<async_fd::AsyncFd as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<async_fd::AsyncFd as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","fn_type":"Safe","name":"<async_fd::AsyncFd as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","fn_type":"Safe","name":"<async_fd::AsyncFd as tokio_io::AsyncWrite>::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw_fd\"), disambiguator: 0 }]","fn_type":"Safe","name":"<async_fd::AsyncFd as std::os::ext::io::AsRawFd>::as_raw_fd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<async_fd::AsyncFd as mio::Evented>::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"reregister\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<async_fd::AsyncFd as mio::Evented>::reregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"async_fd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deregister\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<async_fd::AsyncFd as mio::Evented>::deregister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::v4::Ipv4Route as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::v4::Ipv4Route as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::route::v4::Ipv4Route::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"destination\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::route::v4::Ipv4Route::destination"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gateway\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::route::v4::Ipv4Route::gateway"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_routing_table\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::route::v4::Ipv4Route::add_to_routing_table"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_route_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::route::v4::add_route_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::v6::Ipv6Route as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::v6::Ipv6Route as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::route::v6::Ipv6Route::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"destination\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::route::v6::Ipv6Route::destination"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_hop\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::route::v6::Ipv6Route::next_hop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_to_routing_table\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::route::v6::Ipv6Route::add_to_routing_table"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_route_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::route::v6::add_route_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::AddRouteError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::AddRouteError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::AddRouteError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"route\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<route::AddRouteError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::v4::Ipv4Range as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::v4::Ipv4Range as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"global\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"local_subnet_10\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::local_subnet_10"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"local_subnet_172\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::local_subnet_172"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"local_subnet_192\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::local_subnet_192"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"random_local_subnet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::range::v4::Ipv4Range::random_local_subnet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"random_local_subnet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::v4::Ipv4Range::random_local_subnet::Subnet as rand::Rand>::rand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"netmask\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::netmask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"netmask_prefix_length\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::netmask_prefix_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"base_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::base_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"gateway_ip\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::gateway_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"random_client_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::range::v4::Ipv4Range::random_client_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v4::Ipv4Range::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::v4::Ipv4Range as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::v6::Ipv6Range as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::v6::Ipv6Range as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"global\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"netmask\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::netmask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"netmask_prefix_length\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::netmask_prefix_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"base_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::base_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"random_client_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::range::v6::Ipv6Range::random_client_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"v6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_hop_ip\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::range::v6::Ipv6Range::next_hop_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::IpRangeParseError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::IpRangeParseError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::IpRangeParseError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<range::IpRangeParseError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn_complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<spawn_complete::SpawnComplete<R> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn_complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_parts\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::spawn_complete::from_parts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn_complete\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_receiver\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::spawn_complete::from_receiver"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"process_handle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::process_handle::ProcessHandle::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"process_handle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"busy_wait_for_exit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::process_handle::ProcessHandle::busy_wait_for_exit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"process_handle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<process_handle::ProcessHandle as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pcap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::pcap::IpLog::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pcap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<pcap::IpLog as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pcap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<pcap::IpLog as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::latency::InTransit<T> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::latency::Latency<T>>::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<plug::latency::Latency<T> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<plug::packet_loss::PacketLoss<T>>::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<plug::packet_loss::PacketLoss<T> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::Plug<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_pair\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::Plug<T>>::new_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::Plug<T>>::with_latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_packet_loss\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<plug::Plug<T>>::with_packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::Plug<T>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plug::Plug<T> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<plug::Plug<T> as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<plug::Plug<T> as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::network::Network::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::network::Network::handle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<network::NetworkHandle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"event_loop\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::network::NetworkHandle::event_loop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::network::NetworkHandle::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tap::EtherIfaceBuilder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<iface::tap::EtherIfaceBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::tap::EtherIfaceBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::EtherIfaceBuilder::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mac_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::EtherIfaceBuilder::mac_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv4_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::EtherIfaceBuilder::ipv4_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv6_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::EtherIfaceBuilder::ipv6_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv4_route\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::EtherIfaceBuilder::ipv4_route"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv6_route\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::EtherIfaceBuilder::ipv6_route"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build_unbound\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::tap::EtherIfaceBuilder::build_unbound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::tap::EtherIfaceBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tap::UnboundEtherIface as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tap::UnboundEtherIface::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<iface::tap::EtherIface as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<iface::tap::EtherIface as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tap::EtherIface as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tun::IpIfaceBuilder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tun::IpIfaceBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::IpIfaceBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::IpIfaceBuilder::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv4_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::IpIfaceBuilder::ipv4_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv6_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::IpIfaceBuilder::ipv6_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv4_route\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::IpIfaceBuilder::ipv4_route"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ipv6_route\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::IpIfaceBuilder::ipv6_route"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build_unbound\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::tun::IpIfaceBuilder::build_unbound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::tun::IpIfaceBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tun::UnboundIpIface as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::iface::tun::UnboundIpIface::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<iface::tun::IpIface as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<iface::tun::IpIface as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::tun::IpIface as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::build::IfaceBuildError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::build::IfaceBuildError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::build::IfaceBuildError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::build::IfaceBuildError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::build::IfaceBuilder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"build\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::build::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetMacAddrError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetMacAddrError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetMacAddrError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetMacAddrError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::GetMacAddrError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::GetMacAddrError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::GetMacAddrError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::GetMacAddrError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv4AddrError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv4AddrError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv4AddrError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv4AddrError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv6AddrError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv6AddrError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv6AddrError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::SetIpv6AddrError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::PutUpError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::PutUpError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::PutUpError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iface::config::PutUpError as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_req\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::get_req"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_socket\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::get_socket"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_mac_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::set_mac_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mac_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::get_mac_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_ipv4_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::set_ipv4_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_ipv6_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::set_ipv6_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iface\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"put_up\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::iface::config::put_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ip::latency::latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ip::latency::LatencyNode<N> as node::ip::IpNode>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"packet_loss\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ip::packet_loss::packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ip::packet_loss::PacketLossNode<N> as node::ip::IpNode>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"machine\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ip::machine::machine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ip::machine::MachineNode<F> as node::ip::IpNode>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nat\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::nat::nat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::nat::NatNode<N> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"machine\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::machine::machine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::machine::MachineNode<F> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hops\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::hops::hops"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ipv4::hops::HopsNode<N> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::latency::latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ipv4::latency::LatencyNode<N> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"packet_loss\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::packet_loss::packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::packet_loss::PacketLossNode<N> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ipv4::router::JoinAll<(), ()> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0,) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0,), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>),)> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T10 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T10 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T11 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T10 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T11 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T12 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T10 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T11 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T12 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T13 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T13 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T10 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T11 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T12 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T13 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T13 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T14 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T14 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::router::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), ((spawn_complete::SpawnComplete<<T0 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T0 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T1 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T2 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T3 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T4 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T5 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T6 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T7 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T8 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T9 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T10 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T11 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T12 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T13 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T13 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T14 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T14 as node::ipv4::Ipv4Node>::Output>), (spawn_complete::SpawnComplete<<T15 as node::ipv4::Ipv4Node>::Output>, std::option::Option<<T15 as node::ipv4::Ipv4Node>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<N> as node::ipv4::router::Ipv4RouterClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"router\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::router::router"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ipv4::router::RouterNode<C> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ether_adaptor\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::ether_adaptor::ether_adaptor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv4::ether_adaptor::EtherAdaptorNode<N> as node::ipv4::Ipv4Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Ipv4Node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hops\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::Ipv4Node::hops"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Ipv4Node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::Ipv4Node::latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Ipv4Node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"packet_loss\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv4::Ipv4Node::packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv6::latency::latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ipv6::latency::LatencyNode<N> as node::ipv6::Ipv6Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"packet_loss\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv6::packet_loss::packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv6::packet_loss::PacketLossNode<N> as node::ipv6::Ipv6Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"machine\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ipv6::machine::machine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ipv6::machine::MachineNode<F> as node::ipv6::Ipv6Node>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"machine\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ether::machine::machine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::machine::MachineNode<F> as node::ether::EtherNode>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ether::hub::JoinAll<(), ()> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0,) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0,), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>),)> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ether::EtherNode>::Output>, std::option::Option<<T10 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ether::EtherNode>::Output>, std::option::Option<<T10 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ether::EtherNode>::Output>, std::option::Option<<T11 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ether::EtherNode>::Output>, std::option::Option<<T10 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ether::EtherNode>::Output>, std::option::Option<<T11 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ether::EtherNode>::Output>, std::option::Option<<T12 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ether::EtherNode>::Output>, std::option::Option<<T10 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ether::EtherNode>::Output>, std::option::Option<<T11 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ether::EtherNode>::Output>, std::option::Option<<T12 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T13 as node::ether::EtherNode>::Output>, std::option::Option<<T13 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ether::EtherNode>::Output>, std::option::Option<<T10 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ether::EtherNode>::Output>, std::option::Option<<T11 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ether::EtherNode>::Output>, std::option::Option<<T12 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T13 as node::ether::EtherNode>::Output>, std::option::Option<<T13 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T14 as node::ether::EtherNode>::Output>, std::option::Option<<T14 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15) as node::ether::hub::HubClients>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<node::ether::hub::JoinAll<(T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15), ((spawn_complete::SpawnComplete<<T0 as node::ether::EtherNode>::Output>, std::option::Option<<T0 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T1 as node::ether::EtherNode>::Output>, std::option::Option<<T1 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T2 as node::ether::EtherNode>::Output>, std::option::Option<<T2 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T3 as node::ether::EtherNode>::Output>, std::option::Option<<T3 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T4 as node::ether::EtherNode>::Output>, std::option::Option<<T4 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T5 as node::ether::EtherNode>::Output>, std::option::Option<<T5 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T6 as node::ether::EtherNode>::Output>, std::option::Option<<T6 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T7 as node::ether::EtherNode>::Output>, std::option::Option<<T7 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T8 as node::ether::EtherNode>::Output>, std::option::Option<<T8 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T9 as node::ether::EtherNode>::Output>, std::option::Option<<T9 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T10 as node::ether::EtherNode>::Output>, std::option::Option<<T10 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T11 as node::ether::EtherNode>::Output>, std::option::Option<<T11 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T12 as node::ether::EtherNode>::Output>, std::option::Option<<T12 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T13 as node::ether::EtherNode>::Output>, std::option::Option<<T13 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T14 as node::ether::EtherNode>::Output>, std::option::Option<<T14 as node::ether::EtherNode>::Output>), (spawn_complete::SpawnComplete<<T15 as node::ether::EtherNode>::Output>, std::option::Option<<T15 as node::ether::EtherNode>::Output>))> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hub\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::node::ether::hub::hub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<node::ether::hub::HubNode<C> as node::ether::EtherNode>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::machine::tap::TapTask::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::machine::tap::TapTask as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::machine::tun::TunTask::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tun\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::machine::tun::TunTask as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::machine::MachineBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::machine::MachineBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_ether_iface\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::machine::MachineBuilder::add_ether_iface"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_ip_iface\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::machine::MachineBuilder::add_ip_iface"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"machine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::machine::MachineBuilder::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::ether_adaptor::EtherAdaptorV4 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::ether_adaptor::EtherAdaptorV4::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_addr\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::ether_adaptor::EtherAdaptorV4::mac_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::ether_adaptor::EtherAdaptorV4::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether_adaptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::ipv4::ether_adaptor::EtherAdaptorV4 as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::router::Ipv4RouterBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::router::Ipv4RouterBuilder::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::router::Ipv4RouterBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::router::Ipv4RouterBuilder::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::router::Ipv4Router::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::router::Ipv4Router::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"router\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::ipv4::router::Ipv4Router as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::Ipv4Nat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::PortAllocator as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_port\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::PortAllocator::next_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::PortAllocator as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::PortMap as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::PortMap as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::SymmetricMap as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::SymmetricMap as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::PortMap::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"forward_port\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::PortMap::forward_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_inbound_addr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::PortMap::get_inbound_addr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"map_port\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::PortMap::map_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::Ipv4Nat::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::Ipv4Nat::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ipv4::nat::Ipv4NatBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"subnet\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::subnet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_subnet\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::get_subnet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hair_pinning\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::hair_pinning"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"forward_udp_port\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::forward_udp_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"forward_tcp_port\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::forward_tcp_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"blacklist_unrecognized_addrs\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::blacklist_unrecognized_addrs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"restrict_endpoints\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::restrict_endpoints"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"randomize_port_allocation\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::randomize_port_allocation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"symmetric\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::symmetric"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::Ipv4NatBuilder::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"process_outgoing\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::Ipv4Nat::process_outgoing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"process_incoming\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::nat::Ipv4Nat::process_incoming"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::ipv4::nat::Ipv4Nat as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::latency::Ipv4Latency::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::hop::Ipv4Hop::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv4::hop::Ipv4Hop::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::ipv4::hop::Ipv4Hop as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv4::packet_loss::Ipv4PacketLoss::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ipv6::latency::Ipv6Latency::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ipv6::packet_loss::Ipv6PacketLoss::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<device::ether::hub::HubBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::hub::HubBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::hub::HubBuilder::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::hub::HubBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::hub::HubBuilder::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::hub::Hub::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::hub::Hub::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<device::ether::hub::Hub as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"packet_loss\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::device::ether::packet_loss::EtherPacketLoss::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"device\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"latency\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::device::ether::latency::EtherLatency::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::arp::ArpPacket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::arp::ArpPacket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::arp::ArpPacket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::arp::ArpPacket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::arp::ArpFields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::arp::ArpFields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::arp::ArpFields as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::arp::ArpFields as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::arp::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::arp::ArpPacket::new_from_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::arp::ArpPacket::write_to_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::arp::ArpPacket::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::arp::ArpPacket::fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"source_mac\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::arp::ArpPacket::source_mac"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"source_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::arp::ArpPacket::source_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dest_mac\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::arp::ArpPacket::dest_mac"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dest_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::arp::ArpPacket::dest_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::arp::ArpPacket::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::arp::ArpPacket::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"propagate_carries\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::checksum::propagate_carries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::checksum::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"combine\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::checksum::combine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pseudo_header_ipv4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::checksum::pseudo_header_ipv4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"checksum\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pseudo_header_ipv6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::checksum::pseudo_header_ipv6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ether::EtherFrame as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ether::EtherFrame as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherFrame as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ether::EtherFrame as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherFields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherFields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherFields as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherFields as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ether::EtherPayload as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherPayload as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"payload_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherPayloadFields::payload_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::new_from_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_recursive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::new_from_fields_recursive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::write_to_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherFrame::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"source_mac\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::source_mac"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dest_mac\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::dest_mac"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"payload\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherFrame::payload"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherFrame::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherFrame::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ether::EtherPlug as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new_pair\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherPlug::new_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherPlug::with_latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_packet_loss\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherPlug::with_packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherPlug::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll_incoming\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::EtherPlug::poll_incoming"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ether::EtherPlug::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ether\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ether::<impl std::convert::From<wire::ether::EtherPlug> for plug::Plug<wire::ether::EtherFrame>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Packet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Packet as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Packet as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Packet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Fields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Fields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Fields as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Fields as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Fields::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"header_len\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Fields::header_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Payload as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Payload as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"payload_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Payload::payload_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4PayloadFields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4PayloadFields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"payload_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4PayloadFields::payload_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::new_from_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_recursive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::new_from_fields_recursive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::write_to_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Packet::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"source_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::source_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"dest_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::dest_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ttl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::ttl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"header_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::header_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"payload\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::payload"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Packet::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Packet::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"verify_checksum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::verify_checksum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_tcp_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::to_tcp_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_udp_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::to_udp_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_icmpv4_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Packet::to_icmpv4_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Plug as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_pair\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Plug::new_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"with_latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Plug::with_latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"with_packet_loss\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Plug::with_packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Plug::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"with_hops\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Plug::with_hops"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll_incoming\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::Ipv4Plug::poll_incoming"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Plug::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv4::<impl std::convert::From<wire::ipv4::Ipv4Plug> for plug::Plug<wire::ipv4::Ipv4Packet>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Plug as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Plug as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Plug as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_ipv4_plug\"), disambiguator: 0 }]","fn_type":"Safe","name":"<S as wire::ipv4::IntoIpv4Plug>::into_ipv4_plug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv4::Ipv4Sender::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Sender as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv4::Ipv4Sender as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv4::Ipv4Receiver as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::mac::MacAddr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::mac::MacAddr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::mac::MacAddr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::mac::MacAddr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::mac::MacAddr as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::mac::MacAddr::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::mac::MacAddr::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::mac::MacAddr::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mac\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_broadcast\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::mac::MacAddr::is_broadcast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::udp::UdpPacket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::udp::UdpPacket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::udp::UdpPacket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::udp::UdpPacket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::udp::UdpFields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::udp::UdpFields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::set_fields_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::set_fields_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::new_from_fields_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::new_from_fields_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::write_to_buffer_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::write_to_buffer_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::udp::UdpPacket::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::set_fields_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::set_fields_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"source_port\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::source_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dest_port\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::dest_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"payload\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::payload"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::udp::UdpPacket::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::udp::UdpPacket::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"verify_checksum_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::verify_checksum_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"verify_checksum_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::udp::UdpPacket::verify_checksum_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::tcp::TcpPacket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::tcp::TcpPacket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::TcpPacket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::SelectiveAck as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::SelectiveAck as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::SelectiveAck as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::SelectiveAck as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::tcp::TcpPacket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<wire::tcp::TcpPacket as std::fmt::Debug>::fmt::Kind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::TcpFields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::tcp::TcpFields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"header_len\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::tcp::TcpFields::header_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::set_fields_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::set_fields_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::new_from_fields_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::new_from_fields_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::write_to_buffer_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::write_to_buffer_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::tcp::TcpPacket::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::set_fields_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::set_fields_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"source_port\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::source_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dest_port\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::dest_port"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"seq_num\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::seq_num"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ack_num\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::ack_num"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"window_size\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::window_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"window_scale\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::window_scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"selective_ack_permitted\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::selective_ack_permitted"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"selective_acks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::selective_acks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_syn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_syn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_ack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_ack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_fin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_fin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_rst\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_rst"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_ns\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_ns"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_cwr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_cwr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_ece\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_ece"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"urgent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::urgent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_psh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::is_psh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mss\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::mss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"timestamps\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::timestamps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"header_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::header_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"payload\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::payload"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::tcp::TcpPacket::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::tcp::TcpPacket::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"verify_checksum_v4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::verify_checksum_v4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"verify_checksum_v6\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::tcp::TcpPacket::verify_checksum_v6"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::icmpv4::Icmpv4Packet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::icmpv4::Icmpv4Packet as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::icmpv4::Icmpv4Packet as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::icmpv4::Icmpv4Packet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::icmpv4::Icmpv4PacketKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::icmpv4::Icmpv4PacketKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::icmpv4::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"buffer_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::icmpv4::Icmpv4PacketKind::buffer_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::icmpv4::Icmpv4Packet::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::icmpv4::Icmpv4Packet::new_from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::icmpv4::Icmpv4Packet::write_to_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::icmpv4::Icmpv4Packet::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::icmpv4::Icmpv4Packet::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::icmpv4::Icmpv4Packet::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"icmpv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"verify_checksum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::icmpv4::Icmpv4Packet::verify_checksum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6Packet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6Packet as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Packet as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6Packet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Fields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Fields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Fields as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Fields as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Payload as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6Payload as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6PayloadFields as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6PayloadFields as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"total_packet_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6PayloadFields::total_packet_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::set_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::new_from_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_fields_recursive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::new_from_fields_recursive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write_to_buffer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::write_to_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Packet::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"source_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::source_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dest_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::dest_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hop_limit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::hop_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"payload\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::payload"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Packet::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Packet::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_tcp_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::to_tcp_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_udp_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Packet::to_udp_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Plug as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new_pair\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Plug::new_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Plug::with_latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_packet_loss\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Plug::with_packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Plug::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll_incoming\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::Ipv6Plug::poll_incoming"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Plug::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ipv6::<impl std::convert::From<wire::ipv6::Ipv6Plug> for plug::Plug<wire::ipv6::Ipv6Packet>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_ipv6_plug\"), disambiguator: 0 }]","fn_type":"Safe","name":"<S as wire::ipv6::IntoIpv6Plug>::into_ipv6_plug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ipv6::Ipv6Sender::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6Sender as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ipv6::Ipv6Sender as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ipv6\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ipv6::Ipv6Receiver as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpPacket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpPacket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpPacket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpPacket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPacket::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPacket::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPacket::into_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"source_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPacket::source_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dest_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPacket::dest_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_ipv4_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPacket::to_ipv4_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_ipv6_packet\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPacket::to_ipv6_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ip::IpPlug as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_pair\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPlug::new_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_latency\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPlug::with_latency"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_packet_loss\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPlug::with_packet_loss"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_ipv4_plug\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPlug::into_ipv4_plug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_ipv6_plug\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPlug::into_ipv6_plug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPlug::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll_incoming\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::IpPlug::poll_incoming"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpPlug::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::wire::ip::<impl std::convert::From<wire::ip::IpPlug> for plug::Plug<wire::ip::IpPacket>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ip::IpPlug as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpPlug as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpPlug as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_ip_plug\"), disambiguator: 0 }]","fn_type":"Safe","name":"<S as wire::ip::IntoIpPlug>::into_ip_plug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::wire::ip::IpSender::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpSender as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<wire::ip::IpSender as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wire\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wire::ip::IpReceiver as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"new_namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call_box\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as spawn::new_namespace::FnBox<R>>::call_box"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"new_namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_namespace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::spawn::new_namespace::new_namespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"new_namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_cb\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"netsim::spawn::new_namespace::new_namespace::clone_cb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ether_tree\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::spawn::tree::ether_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ip_tree\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::spawn::tree::ip_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ipv4_tree\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::spawn::tree::ipv4_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spawn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ipv6_tree\"), disambiguator: 0 }]","fn_type":"Safe","name":"netsim::spawn::tree::ipv6_tree"}
