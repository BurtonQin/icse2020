{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Rexiv2Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Rexiv2Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Rexiv2Error as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Rexiv2Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Rexiv2Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Rexiv2Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Rexiv2Error as std::convert::From<std::str::Utf8Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Metadata as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Metadata as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Metadata as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GpsInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GpsInfo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GpsInfo as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GpsInfo as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<GpsInfo as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<TagType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<TagType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<TagType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<TagType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<TagType as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<TagType as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<MediaType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<MediaType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<MediaType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<MediaType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<MediaType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<MediaType as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<impl std::convert::From<&'a MediaType> for std::string::String>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<MediaType as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<MediaType as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::new_from_path"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new_from_buffer\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::new_from_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"save_to_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::save_to_file"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"supports_exif\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::supports_exif"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"supports_iptc\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::supports_iptc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"supports_xmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::supports_xmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_media_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_media_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_pixel_width\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_pixel_width"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_pixel_height\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_pixel_height"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"has_tag\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::has_tag"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clear_tag\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::clear_tag"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"has_exif\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::has_exif"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clear_exif\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::clear_exif"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_exif_tags\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_exif_tags"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"has_xmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::has_xmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clear_xmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::clear_xmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_xmp_tags\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_xmp_tags"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"has_iptc\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::has_iptc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clear_iptc\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::clear_iptc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_iptc_tags\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_iptc_tags"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_tag_string\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_tag_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_tag_string\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::set_tag_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_tag_interpreted_string\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_tag_interpreted_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_tag_multiple_strings\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_tag_multiple_strings"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_tag_multiple_strings\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::set_tag_multiple_strings"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_tag_numeric\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_tag_numeric"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_tag_numeric\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::set_tag_numeric"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_tag_rational\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_tag_rational"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_tag_rational\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::set_tag_rational"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_orientation\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::set_orientation"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_exposure_time\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_exposure_time"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_fnumber\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_fnumber"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_focal_length\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_focal_length"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_iso_speed\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_iso_speed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_gps_info\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::get_gps_info"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_gps_info\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::set_gps_info"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"delete_gps_info\"), disambiguator: 0 }]","has_unsafe":true,"name":"Metadata::delete_gps_info"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Metadata as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"is_exif_tag\"), disambiguator: 0 }]","has_unsafe":true,"name":"is_exif_tag"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"is_iptc_tag\"), disambiguator: 0 }]","has_unsafe":true,"name":"is_iptc_tag"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"is_xmp_tag\"), disambiguator: 0 }]","has_unsafe":true,"name":"is_xmp_tag"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"get_tag_label\"), disambiguator: 0 }]","has_unsafe":true,"name":"get_tag_label"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"get_tag_description\"), disambiguator: 0 }]","has_unsafe":true,"name":"get_tag_description"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"get_tag_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"get_tag_type"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"register_xmp_namespace\"), disambiguator: 0 }]","has_unsafe":true,"name":"register_xmp_namespace"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"unregister_xmp_namespace\"), disambiguator: 0 }]","has_unsafe":true,"name":"unregister_xmp_namespace"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"unregister_all_xmp_namespaces\"), disambiguator: 0 }]","has_unsafe":true,"name":"unregister_all_xmp_namespaces"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"free_array_of_pointers\"), disambiguator: 0 }]","has_unsafe":true,"name":"free_array_of_pointers"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"int_bool_to_result\"), disambiguator: 0 }]","has_unsafe":false,"name":"int_bool_to_result"}
