{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_nodelay\"), disambiguator: 0 }]","has_unsafe":false,"name":"connect::<impl stream::NoDelay for connect::tokio_tcp::TcpStream>::set_nodelay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encryption\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_nodelay\"), disambiguator: 0 }]","has_unsafe":false,"name":"connect::encryption::<impl stream::NoDelay for connect::encryption::tokio_tls::TlsStream<T>>::set_nodelay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"encryption\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"wrap_stream\"), disambiguator: 0 }]","has_unsafe":false,"name":"connect::encryption::wrap_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"domain\"), disambiguator: 0 }]","has_unsafe":false,"name":"connect::domain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"client_async_tls\"), disambiguator: 0 }]","has_unsafe":false,"name":"connect::client_async_tls"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_async\"), disambiguator: 0 }]","has_unsafe":false,"name":"connect::connect_async"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_nodelay\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as stream::NoDelay>::set_nodelay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"read_buf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as tokio_io::AsyncRead>::read_buf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as tokio_io::AsyncWrite>::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"write_buf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stream::Stream<S, T> as tokio_io::AsyncWrite>::write_buf"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"client_async\"), disambiguator: 0 }]","has_unsafe":true,"name":"client_async"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"client_async_with_config\"), disambiguator: 0 }]","has_unsafe":true,"name":"client_async_with_config"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"accept_async\"), disambiguator: 0 }]","has_unsafe":true,"name":"accept_async"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"accept_async_with_config\"), disambiguator: 0 }]","has_unsafe":true,"name":"accept_async_with_config"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"accept_hdr_async\"), disambiguator: 0 }]","has_unsafe":true,"name":"accept_hdr_async"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"accept_hdr_async_with_config\"), disambiguator: 0 }]","has_unsafe":true,"name":"accept_hdr_async_with_config"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw_socket\"), disambiguator: 0 }]","has_unsafe":false,"name":"<WebSocketStream<S>>::from_raw_socket"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_partially_read\"), disambiguator: 0 }]","has_unsafe":false,"name":"<WebSocketStream<S>>::from_partially_read"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<WebSocketStream<T> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","has_unsafe":true,"name":"<WebSocketStream<T> as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","has_unsafe":true,"name":"<WebSocketStream<T> as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"close\"), disambiguator: 0 }]","has_unsafe":true,"name":"<WebSocketStream<T> as futures::Sink>::close"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ConnectAsync<S> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<AcceptAsync<S, C> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<MidHandshake<H> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_async\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, tungstenite::Error> as ToAsync>::to_async"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"to_start_send\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<(), tungstenite::Error> as ToStartSend>::to_start_send"}
