{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::Tat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::Tat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::Tat as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::Tat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::Tat as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::gcra::Tat as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::GCRA as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::gcra::GCRA as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cell_weight\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::gcra::Builder::cell_weight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"per\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::gcra::Builder::per"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"ratelimit_meter::algorithms::gcra::Builder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"for_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::gcra::GCRA::for_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"with_parameters\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"ratelimit_meter::algorithms::gcra::GCRA::with_parameters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"test_and_update\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::gcra::GCRA as implementation::DeciderImpl>::test_and_update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"test_n_and_update\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::gcra::GCRA as implementation::MultiDeciderImpl>::test_n_and_update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::gcra::GCRA as std::convert::From<algorithms::gcra::Builder>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::gcra::GCRA as std::convert::From<&'a mut algorithms::gcra::Builder>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a algorithms::gcra::GCRA as std::convert::Into<(std::time::Duration, std::time::Duration, std::option::Option<std::time::Instant>)>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gcra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::gcra::GCRA as std::convert::From<(std::time::Duration, std::time::Duration, std::option::Option<std::time::Instant>)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::leaky_bucket::LeakyBucket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::leaky_bucket::LeakyBucket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::leaky_bucket::BucketState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::leaky_bucket::BucketState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::leaky_bucket::BucketState as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::leaky_bucket::LeakyBucket::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"per_second\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::leaky_bucket::LeakyBucket::per_second"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leaky_bucket\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"test_n_and_update\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<algorithms::leaky_bucket::LeakyBucket as implementation::MultiDeciderImpl>::test_n_and_update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_InconsistentCapacity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::_DERIVE_failure_Fail_FOR_InconsistentCapacity::<impl failure::Fail for algorithms::InconsistentCapacity>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_InconsistentCapacity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::_DERIVE_failure_Fail_FOR_InconsistentCapacity::<impl failure::Fail for algorithms::InconsistentCapacity>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_InconsistentCapacity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::algorithms::_DERIVE_failure_core_fmt_Display_FOR_InconsistentCapacity::<impl std::fmt::Display for algorithms::InconsistentCapacity>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<algorithms::InconsistentCapacity as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"example_algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<example_algorithms::Allower as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"example_algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<example_algorithms::Allower as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"example_algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::example_algorithms::Allower::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"example_algorithms\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"test_n_and_update\"), disambiguator: 0 }]","fn_type":"Safe","name":"<example_algorithms::Allower as implementation::MultiDeciderImpl>::test_n_and_update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"implementation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"test_and_update\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as implementation::DeciderImpl>::test_and_update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"thread_safety\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<thread_safety::ThreadsafeWrapper<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"thread_safety\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<thread_safety::ThreadsafeWrapper<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"thread_safety\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<thread_safety::ThreadsafeWrapper<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"thread_safety\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<thread_safety::ThreadsafeWrapper<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"thread_safety\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"measure_and_replace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<thread_safety::ThreadsafeWrapper<T>>::measure_and_replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"thread_safety\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<thread_safety::ThreadsafeWrapper<T>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_NonConformance\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::_DERIVE_failure_Fail_FOR_NonConformance::<impl failure::Fail for NonConformance>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_NonConformance\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::_DERIVE_failure_Fail_FOR_NonConformance::<impl failure::Fail for NonConformance>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_NonConformance\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::_DERIVE_failure_core_fmt_Display_FOR_NonConformance::<impl std::fmt::Display for NonConformance>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NonConformance as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NonConformance as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NonConformance as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::NonConformance::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"earliest_possible\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::NonConformance::earliest_possible"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"wait_time_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::NonConformance::wait_time_from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"wait_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::NonConformance::wait_time"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_NegativeMultiDecision\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::_DERIVE_failure_Fail_FOR_NegativeMultiDecision::<impl failure::Fail for NegativeMultiDecision>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_NegativeMultiDecision\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::_DERIVE_failure_Fail_FOR_NegativeMultiDecision::<impl failure::Fail for NegativeMultiDecision>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_NegativeMultiDecision\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"ratelimit_meter::_DERIVE_failure_core_fmt_Display_FOR_NegativeMultiDecision::<impl std::fmt::Display for NegativeMultiDecision>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NegativeMultiDecision as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<NegativeMultiDecision as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<NegativeMultiDecision as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Decider\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_at\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"ratelimit_meter::Decider::check_at"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Decider\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"ratelimit_meter::Decider::check"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"MultiDecider\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_n_at\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"ratelimit_meter::MultiDecider::check_n_at"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"MultiDecider\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"check_n\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"ratelimit_meter::MultiDecider::check_n"}
