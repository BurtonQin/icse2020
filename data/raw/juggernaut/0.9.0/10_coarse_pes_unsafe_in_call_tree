{"def_path":"[DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as math::Multiplication<T>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"generate_by_row\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::generate_by_row"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"row\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as matrix::MatrixTrait>::row"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rows\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as matrix::MatrixTrait>::rows"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cols\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as matrix::MatrixTrait>::cols"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as matrix::MatrixTrait>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_row\"), disambiguator: 0 }]","has_unsafe":true,"name":"<matrix::Matrix as matrix::MatrixTrait>::map_row"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"matrix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"body\"), disambiguator: 0 }]","has_unsafe":false,"name":"<matrix::Matrix as matrix::MatrixTrait>::body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sigmoid\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::sigmoid::Sigmoid as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sigmoid\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::sigmoid::Sigmoid::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sigmoid\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::sigmoid::Sigmoid as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sigmoid\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::sigmoid::Sigmoid as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"identity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::identity::Identity as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"identity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::identity::Identity::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"identity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::identity::Identity as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"identity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::identity::Identity as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hyperbolictangent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::hyperbolictangent::HyperbolicTangent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hyperbolictangent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::hyperbolictangent::HyperbolicTangent::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hyperbolictangent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::hyperbolictangent::HyperbolicTangent as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hyperbolictangent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::hyperbolictangent::HyperbolicTangent as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softplus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::softplus::SoftPlus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softplus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::softplus::SoftPlus::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softplus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::softplus::SoftPlus as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softplus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::softplus::SoftPlus as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softmax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::softmax::SoftMax as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softmax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::softmax::SoftMax::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softmax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::softmax::SoftMax as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"softmax\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::softmax::SoftMax as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::rectifiedlinearunit::RectifiedLinearUnit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::rectifiedlinearunit::RectifiedLinearUnit::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::rectifiedlinearunit::RectifiedLinearUnit as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::rectifiedlinearunit::RectifiedLinearUnit as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leakyrectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::leakyrectifiedlinearunit::LeakyRectifiedLinearUnit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leakyrectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"activation::leakyrectifiedlinearunit::LeakyRectifiedLinearUnit::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leakyrectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::leakyrectifiedlinearunit::LeakyRectifiedLinearUnit as activation::Activation>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"activation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"leakyrectifiedlinearunit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"derivative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<activation::leakyrectifiedlinearunit::LeakyRectifiedLinearUnit as activation::Activation>::derivative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"nl::NeuralLayer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neurons\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::neurons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inputs\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::inputs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"biases\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::biases"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"weights\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::weights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"weights_with_bias\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::weights_with_bias"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_weights\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::set_weights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_biases\"), disambiguator: 0 }]","has_unsafe":false,"name":"nl::NeuralLayer::set_biases"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_shuffle_data\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::set_shuffle_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_cost_function\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::set_cost_function"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"on_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::on_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"on_epoch\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::on_epoch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"emit_on_error\"), disambiguator: 0 }]","has_unsafe":true,"name":"nn::NeuralNetwork::emit_on_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"emit_on_epoch\"), disambiguator: 0 }]","has_unsafe":true,"name":"nn::NeuralNetwork::emit_on_epoch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_layer\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::add_layer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_layers\"), disambiguator: 0 }]","has_unsafe":false,"name":"nn::NeuralNetwork::get_layers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"forward\"), disambiguator: 0 }]","has_unsafe":true,"name":"nn::NeuralNetwork::forward"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"evaluate\"), disambiguator: 0 }]","has_unsafe":true,"name":"nn::NeuralNetwork::evaluate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"error\"), disambiguator: 0 }]","has_unsafe":true,"name":"nn::NeuralNetwork::error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nn\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"train\"), disambiguator: 0 }]","has_unsafe":true,"name":"nn::NeuralNetwork::train"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sample\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sample::Sample as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sample\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"sample::Sample::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sample\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"predict\"), disambiguator: 0 }]","has_unsafe":false,"name":"sample::Sample::predict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sample\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_inputs_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"sample::Sample::get_inputs_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sample\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_outputs_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"sample::Sample::get_outputs_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cost\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"squared_error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"cost::squared_error::SquaredError::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cost\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"squared_error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cost::squared_error::SquaredError as cost::CostFunction>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cost\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"squared_error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cost::squared_error::SquaredError as cost::CostFunction>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cost\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cross_entropy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"cost::cross_entropy::CrossEntropy::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cost\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cross_entropy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cost::cross_entropy::CrossEntropy as cost::CostFunction>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cost\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cross_entropy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<cost::cross_entropy::CrossEntropy as cost::CostFunction>::calc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_input_to_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::sample_input_to_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_output_to_matrix\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::sample_output_to_matrix"}
