{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl std::cmp::PartialEq for field_32bit::FieldElement32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ct_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl subtle::Equal for field_32bit::FieldElement32>::ct_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_negative_ed25519\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::is_negative_ed25519"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_negative_decaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::is_negative_decaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_nonnegative_decaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::is_nonnegative_decaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_nonzero\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::is_nonzero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pow2k\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::pow2k"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pow22501\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::pow22501"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pow_p58\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::pow_p58"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_ratio\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::sqrt_ratio"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"invsqrt\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::invsqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"chi\"), disambiguator: 0 }]","has_unsafe":false,"name":"field::<impl field_32bit::FieldElement32>::chi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field_32bit::FieldElement32 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field_32bit::FieldElement32 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field_32bit::FieldElement32 as std::ops::AddAssign<&'b field_32bit::FieldElement32>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a field_32bit::FieldElement32 as std::ops::Add<&'b field_32bit::FieldElement32>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field_32bit::FieldElement32 as std::ops::SubAssign<&'b field_32bit::FieldElement32>>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a field_32bit::FieldElement32 as std::ops::Sub<&'b field_32bit::FieldElement32>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field_32bit::FieldElement32 as std::ops::MulAssign<&'b field_32bit::FieldElement32>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a field_32bit::FieldElement32 as std::ops::Mul<&'b field_32bit::FieldElement32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a field_32bit::FieldElement32 as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"conditional_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<field_32bit::FieldElement32 as subtle::ConditionallyAssignable>::conditional_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"negate\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::negate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"minus_one\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::minus_one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"reduce\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::reduce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"to_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::to_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"square_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::square_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field_32bit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"square2\"), disambiguator: 0 }]","has_unsafe":false,"name":"field_32bit::FieldElement32::square2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ct_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as subtle::Equal>::ct_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as std::ops::IndexMut<usize>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scalar::Scalar as std::ops::MulAssign<&'b scalar::Scalar>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a scalar::Scalar as std::ops::Mul<&'b scalar::Scalar>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scalar::Scalar as std::ops::AddAssign<&'b scalar::Scalar>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a scalar::Scalar as std::ops::Add<&'b scalar::Scalar>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scalar::Scalar as std::ops::SubAssign<&'b scalar::Scalar>>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a scalar::Scalar as std::ops::Sub<&'b scalar::Scalar>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a scalar::Scalar as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"conditional_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::Scalar as subtle::ConditionallyAssignable>::conditional_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"random\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::Scalar::random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash_from_bytes\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::Scalar::hash_from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::Scalar::from_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::Scalar::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"non_adjacent_form\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::non_adjacent_form"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"unpack\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::unpack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"to_radix_16\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::to_radix_16"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"to_radix_16\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bot_half\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::to_radix_16::bot_half"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"to_radix_16\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"top_half\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::Scalar::to_radix_16::top_half"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"multiply_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::Scalar::multiply_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reduce\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::Scalar::reduce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::UnpackedScalar as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::UnpackedScalar as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scalar::UnpackedScalar as std::ops::IndexMut<usize>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"pack\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::UnpackedScalar::pack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::UnpackedScalar::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::UnpackedScalar::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::UnpackedScalar::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"multiply_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::UnpackedScalar::multiply_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"reduce_limbs\"), disambiguator: 0 }]","has_unsafe":true,"name":"scalar::UnpackedScalar::reduce_limbs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"reduce_limbs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_reduction\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::UnpackedScalar::reduce_limbs::do_reduction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"reduce_limbs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_carry_uncentered\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::UnpackedScalar::reduce_limbs::do_carry_uncentered"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scalar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"reduce_limbs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_carry_centered\"), disambiguator: 0 }]","has_unsafe":false,"name":"scalar::UnpackedScalar::reduce_limbs::do_carry_centered"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompressedEdwardsY as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompressedEdwardsY as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompressedEdwardsY as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompressedEdwardsY as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompressedEdwardsY as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::CompressedEdwardsY::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::CompressedEdwardsY::to_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"decompress\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::CompressedEdwardsY::decompress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectivePoint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompletedPoint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectiveNielsPoint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompressedEdwardsY as edwards::Identity>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as edwards::Identity>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectivePoint as edwards::Identity>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectiveNielsPoint as edwards::Identity>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as edwards::Identity>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectivePoint as edwards::ValidityCheck>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as edwards::ValidityCheck>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"conditional_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectiveNielsPoint as subtle::ConditionallyAssignable>::conditional_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"conditional_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as subtle::ConditionallyAssignable>::conditional_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"conditional_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as subtle::ConditionallyAssignable>::conditional_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ct_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as subtle::Equal>::ct_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"is_identity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as edwards::IsIdentity>::is_identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"to_extended\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ProjectivePoint::to_extended"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"compress_edwards\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ProjectivePoint::compress_edwards"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"compress_montgomery\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ProjectivePoint::compress_montgomery"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"to_projective_niels\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::to_projective_niels"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"to_projective\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::to_projective"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"to_affine_niels\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::to_affine_niels"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"compress_edwards\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::compress_edwards"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"compress_montgomery\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::compress_montgomery"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"to_projective\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::CompletedPoint::to_projective"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"to_extended\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::CompletedPoint::to_extended"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"double\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ProjectivePoint::double"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"double\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::double"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Add<&'b edwards::ProjectiveNielsPoint>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Sub<&'b edwards::ProjectiveNielsPoint>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Add<&'b edwards::AffineNielsPoint>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Sub<&'b edwards::AffineNielsPoint>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Add<&'b edwards::ExtendedPoint>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as std::ops::AddAssign<&'b edwards::ExtendedPoint>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Sub<&'b edwards::ExtendedPoint>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as std::ops::SubAssign<&'b edwards::ExtendedPoint>>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ProjectiveNielsPoint as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::AffineNielsPoint as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as std::ops::MulAssign<&'b scalar::Scalar>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::ExtendedPoint as std::ops::Mul<&'b scalar::Scalar>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::<impl std::ops::Mul<&'b edwards::ExtendedPoint> for &'a scalar::Scalar>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"multiscalar_mult\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::multiscalar_mult"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::EdwardsBasepointTable as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a edwards::EdwardsBasepointTable as std::ops::Mul<&'b scalar::Scalar>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::<impl std::ops::Mul<&'a edwards::EdwardsBasepointTable> for &'b scalar::Scalar>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::EdwardsBasepointTable::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"basepoint\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::EdwardsBasepointTable::basepoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"mult_by_cofactor\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::mult_by_cofactor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"mult_by_pow_2\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::mult_by_pow_2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"is_small_order\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::is_small_order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"select_precomputed_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::select_precomputed_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"to_uniform_representative\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::to_uniform_representative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from_uniform_representative\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::ExtendedPoint::from_uniform_representative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ExtendedPoint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectivePoint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::CompletedPoint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::AffineNielsPoint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::ProjectiveNielsPoint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vartime\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::vartime::OddMultiples::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vartime\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<edwards::vartime::OddMultiples as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vartime\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"multiscalar_mult\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::vartime::multiscalar_mult"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"edwards\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vartime\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"double_scalar_mult_basepoint\"), disambiguator: 0 }]","has_unsafe":false,"name":"edwards::vartime::double_scalar_mult_basepoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<montgomery::CompressedMontgomeryU as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<montgomery::CompressedMontgomeryU as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<montgomery::CompressedMontgomeryU as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<montgomery::CompressedMontgomeryU as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<montgomery::CompressedMontgomeryU as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"montgomery::CompressedMontgomeryU::to_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decompress\"), disambiguator: 0 }]","has_unsafe":false,"name":"montgomery::CompressedMontgomeryU::decompress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_edwards_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"montgomery::CompressedMontgomeryU::to_edwards_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_montgomery_v\"), disambiguator: 0 }]","has_unsafe":false,"name":"montgomery::CompressedMontgomeryU::to_montgomery_v"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"montgomery\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_edwards_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"montgomery::CompressedMontgomeryU::to_edwards_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load3\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::load3"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load4\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::load4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load8\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::load8"}
