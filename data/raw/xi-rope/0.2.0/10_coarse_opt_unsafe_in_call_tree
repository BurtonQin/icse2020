{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"NodeInfo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::tree::NodeInfo::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"NodeInfo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interval\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::tree::NodeInfo::interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Leaf\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subseq\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::tree::Leaf::subseq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::NodeBody<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::NodeVal<N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::from_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::from_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::is_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interval\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_children\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::get_children"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::get_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ok_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::is_ok_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::merge_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge_leaves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::merge_leaves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"measure\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::measure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_subseq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::push_subseq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subseq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::subseq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::edit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert_metrics\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N>>::convert_metrics"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Node<N> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::TreeBuilder<N>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::TreeBuilder<N>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::TreeBuilder<N>>::push_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_leaf_slice\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::TreeBuilder<N>>::push_leaf_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::TreeBuilder<N>>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::get_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pos\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::is_boundary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::next_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"prev_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::prev_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"descend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tree::Cursor<'a, N>>::descend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as tree::Leaf>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ok_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as tree::Leaf>::is_ok_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_maybe_split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksLeaf as tree::Leaf>::push_maybe_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"accumulate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksInfo as tree::NodeInfo>::accumulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"compute_info\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksInfo as tree::NodeInfo>::compute_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"measure\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::measure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::to_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::from_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::is_boundary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"can_fragment\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksMetric as tree::Metric<breaks::BreaksInfo>>::can_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"measure\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::measure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::to_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::from_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::is_boundary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"can_fragment\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreaksBaseMetric as tree::Metric<breaks::BreaksInfo>>::can_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_no_break\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::breaks::<impl tree::Node<breaks::BreaksInfo>>::new_no_break"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<breaks::BreakBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::breaks::BreakBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add_break\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::breaks::BreakBuilder::add_break"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add_no_break\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::breaks::BreakBuilder::add_no_break"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"breaks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::breaks::BreakBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_open_open\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::new_open_open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_open_closed\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::new_open_closed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_closed_open\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::new_closed_open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_closed_closed\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::new_closed_closed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::start_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_start_closed\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::is_start_closed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_end_closed\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::is_end_closed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_before\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::is_before"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_after\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::is_after"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"prefix\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::prefix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"suffix\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::suffix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"translate_neg\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::translate_neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::interval::Interval::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"simple_edit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::simple_edit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"synthesize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::synthesize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transform_expand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::transform_expand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"invert_insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::invert_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"summary\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::summary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"els_len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Delta<N>>::els_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Transformer<'a, N>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Transformer<'a, N>>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"delta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"interval_untouched\"), disambiguator: 0 }]","fn_type":"Safe","name":"<delta::Transformer<'a, N>>::interval_untouched"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Leaf for std::string::String>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ok_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Leaf for std::string::String>::is_ok_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_maybe_split\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Leaf for std::string::String>::push_maybe_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::RopeInfo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"accumulate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::RopeInfo as tree::NodeInfo>::accumulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"compute_info\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::RopeInfo as tree::NodeInfo>::compute_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::RopeInfo as tree::NodeInfo>::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"measure\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::measure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::to_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::from_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::is_boundary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"can_fragment\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::BaseMetric as tree::Metric<rope::RopeInfo>>::can_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"measure\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::measure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::is_boundary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::to_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_base_units\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::from_base_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"can_fragment\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesMetric as tree::Metric<rope::RopeInfo>>::can_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"memchr\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::memchr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_newlines\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::count_newlines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_leaf_split_for_bulk\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::find_leaf_split_for_bulk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_leaf_split_for_merge\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::find_leaf_split_for_merge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_leaf_split\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::find_leaf_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl std::str::FromStr for tree::Node<rope::RopeInfo>>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"edit_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::edit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_codepoint_boundary\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::is_codepoint_boundary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"prev_codepoint_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::prev_codepoint_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next_codepoint_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::next_codepoint_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"prev_grapheme_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::prev_grapheme_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next_grapheme_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::next_grapheme_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"line_of_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::line_of_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"offset_of_line\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::offset_of_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"iter_chunks\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::iter_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lines_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::lines_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lines\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::lines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"byte_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::byte_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"slice_to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Node<rope::RopeInfo>>::slice_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::ChunkIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"push_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::TreeBuilder<rope::RopeInfo>>::push_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl std::convert::From<T> for tree::Node<rope::RopeInfo>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl std::convert::From<tree::Node<rope::RopeInfo>> for std::string::String>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl std::convert::From<&'a tree::Node<rope::RopeInfo>> for std::string::String>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"prev_codepoint\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Cursor<'a, rope::RopeInfo>>::prev_codepoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next_codepoint\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::<impl tree::Cursor<'a, rope::RopeInfo>>::next_codepoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cow_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::rope::cow_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::LinesRaw<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rope\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rope::Lines<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::Span<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansLeaf<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansLeaf<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansInfo<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansLeaf<T> as tree::Leaf>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ok_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansLeaf<T> as tree::Leaf>::is_ok_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_maybe_split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansLeaf<T> as tree::Leaf>::push_maybe_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"accumulate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansInfo<T> as tree::NodeInfo>::accumulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"compute_info\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansInfo<T> as tree::NodeInfo>::compute_info"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansBuilder<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansBuilder<T>>::add_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpansBuilder<T>>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::spans::<impl tree::Node<spans::SpansInfo<T>>>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::spans::<impl tree::Node<spans::SpansInfo<T>>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"spans\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<spans::SpanIter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<subset::Subset as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<subset::Subset as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<subset::SubsetBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::SubsetBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_deletion\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::SubsetBuilder::add_deletion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::SubsetBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply_to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::apply_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_trivial\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::is_trivial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"_deletions\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::_deletions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"transform_expand\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::transform_expand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"transform_intersect\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::transform_intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"transform_shrink\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::transform_shrink"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"range_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::subset::Subset::range_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"subset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<subset::RangeIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_current_undo\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::get_current_undo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_rev\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::find_rev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_rev_from_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::get_rev_from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_head_rev_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::get_head_rev_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_head\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::get_head"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_rev\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::get_rev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"delta_rev_head\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::delta_rev_head"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mk_new_rev\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::mk_new_rev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edit_rev\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::edit_rev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compute_undo\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::compute_undo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"undo\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::undo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"engine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gc\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::engine::Engine::gc"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Rope as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Node as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Node as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NodeBody as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<NodeVal as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"count_newlines\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::count_newlines"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::push_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"slice\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Rope::push_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Rope::edit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edit_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Rope::edit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter_chunks\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::iter_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_of_offset\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Rope::line_of_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"offset_of_line\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Rope::offset_of_line"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lines_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::lines_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lines\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::lines"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prev_codepoint_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::prev_codepoint_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_codepoint_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::next_codepoint_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prev_grapheme_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::prev_grapheme_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_grapheme_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::next_grapheme_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"byte_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::byte_at"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Rope::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_full\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::is_full"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Rope::from_node"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Rope as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::<impl std::convert::From<Rope> for std::string::String>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::<impl std::convert::From<&'a Rope> for std::string::String>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Rope as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Rope as std::ops::Add<T>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Node as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::height"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::is_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"newline_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::newline_count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_children\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::get_children"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::get_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_ok_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::is_ok_child"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_string_piece\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::from_string_piece"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_pieces\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::from_pieces"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"merge_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::merge_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"merge_leaves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::merge_leaves"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"subsequence_rec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::subsequence_rec"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"replace_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::replace_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"try_replace_leaf_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::try_replace_leaf_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"try_find_child\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::try_find_child"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"try_replace_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::try_replace_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"push_to_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::push_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_string\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::into_string"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"line_of_offset\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::Node::line_of_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"offset_of_line\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::offset_of_line"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"leaf_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::leaf_at"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"prev_codepoint_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::prev_codepoint_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next_codepoint_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::next_codepoint_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"byte_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::Node::byte_at"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"find_leaf_split_for_bulk\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::find_leaf_split_for_bulk"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"find_leaf_split_for_merge\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::find_leaf_split_for_merge"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"find_leaf_split\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::find_leaf_split"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RopeBuilder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::RopeBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"push_rope\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::RopeBuilder::push_rope"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::RopeBuilder::push"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"push_str_short\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::RopeBuilder::push_str_short"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"push_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::RopeBuilder::push_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::RopeBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"build_rope\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"xi_rope::RopeBuilder::build_rope"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ChunkIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"descend\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::ChunkIter::descend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"finish_leaf\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::ChunkIter::finish_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"cow_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::cow_append"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<LinesRaw<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Lines<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"eq_chunks\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::eq_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Rope as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Rope as std::cmp::PartialEq<str>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Rope as std::cmp::PartialEq<&'a str>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Rope as std::cmp::PartialEq<std::string::String>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Rope as std::cmp::PartialEq<std::borrow::Cow<'a, str>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::<impl std::cmp::PartialEq<Rope> for str>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::<impl std::cmp::PartialEq<Rope> for &'a str>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::<impl std::cmp::PartialEq<Rope> for std::string::String>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"xi_rope::<impl std::cmp::PartialEq<Rope> for std::borrow::Cow<'a, str>>::eq"}
