{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::HardwareAddressType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::HardwareAddressType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::HardwareAddressType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::HardwareAddressType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_hw_addr_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::to_hw_addr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::ProtocolAddressType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::ProtocolAddressType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::ProtocolAddressType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::ProtocolAddressType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_proto_addr_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::to_proto_addr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::Operation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::Operation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::Operation as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::Operation as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_operation\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::to_operation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::ArpPacket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::ArpPacket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<arp::ArpPacket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<arp::ArpPacket as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hw_addr_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"arp::hw_addr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"proto_addr_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"arp::proto_addr_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"operation\"), disambiguator: 0 }]","has_unsafe":true,"name":"arp::operation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_address\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::mac_address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_address\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::mac_address::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"address\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"address\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":false,"name":"arp::address::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arp_packet\"), disambiguator: 0 }]","has_unsafe":true,"name":"arp::arp_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"arp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_arp_pkt\"), disambiguator: 0 }]","has_unsafe":true,"name":"arp::parse_arp_pkt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::MacAddress as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::MacAddress as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::MacAddress as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::MacAddress as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::EtherType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ethernet::EtherType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ethernet::EtherType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::EtherType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::EthernetFrame as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ethernet::EthernetFrame as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ethernet::EthernetFrame as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ethernet::EthernetFrame as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_ethertype\"), disambiguator: 0 }]","has_unsafe":false,"name":"ethernet::to_ethertype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_mac_address\"), disambiguator: 0 }]","has_unsafe":true,"name":"ethernet::to_mac_address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_address\"), disambiguator: 0 }]","has_unsafe":false,"name":"ethernet::mac_address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mac_address\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":false,"name":"ethernet::mac_address::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ethertype\"), disambiguator: 0 }]","has_unsafe":true,"name":"ethernet::ethertype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ethernet_frame\"), disambiguator: 0 }]","has_unsafe":true,"name":"ethernet::ethernet_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ethernet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_ethernet_frame\"), disambiguator: 0 }]","has_unsafe":true,"name":"ethernet::parse_ethernet_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ipv4::IPv4Protocol as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ipv4::IPv4Protocol as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ipv4::IPv4Protocol as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ipv4::IPv4Protocol as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ipv4::IPv4Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ipv4::IPv4Header as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ipv4::IPv4Header as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ipv4::IPv4Header as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_ipv4_protocol\"), disambiguator: 0 }]","has_unsafe":false,"name":"ipv4::to_ipv4_protocol"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_ipv4_address\"), disambiguator: 0 }]","has_unsafe":true,"name":"ipv4::to_ipv4_address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"two_nibbles\"), disambiguator: 0 }]","has_unsafe":false,"name":"ipv4::two_nibbles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flag_frag_offset\"), disambiguator: 0 }]","has_unsafe":false,"name":"ipv4::flag_frag_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"protocol\"), disambiguator: 0 }]","has_unsafe":false,"name":"ipv4::protocol"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"address\"), disambiguator: 0 }]","has_unsafe":false,"name":"ipv4::address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"address\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":false,"name":"ipv4::address::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ipparse\"), disambiguator: 0 }]","has_unsafe":true,"name":"ipv4::ipparse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ipv4\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_ipv4_header\"), disambiguator: 0 }]","has_unsafe":true,"name":"ipv4::parse_ipv4_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpOption as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tcp::TcpOption as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tcp::TcpOption as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpOption as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpOption as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::MaximumSegmentSize as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::MaximumSegmentSize as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::MaximumSegmentSize as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::MaximumSegmentSize as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::MaximumSegmentSize as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::WindowScale as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::WindowScale as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::WindowScale as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::WindowScale as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::WindowScale as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpHeader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpHeader as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpHeader as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpHeader as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tcp::TcpHeader as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dataof_res_flags\"), disambiguator: 0 }]","has_unsafe":false,"name":"tcp::dataof_res_flags"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tcp_parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"tcp::tcp_parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tcp_parse_option\"), disambiguator: 0 }]","has_unsafe":true,"name":"tcp::tcp_parse_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tcp_parse_option\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":false,"name":"tcp::tcp_parse_option::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tcp_parse_options\"), disambiguator: 0 }]","has_unsafe":true,"name":"tcp::tcp_parse_options"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tcp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_tcp_header\"), disambiguator: 0 }]","has_unsafe":true,"name":"tcp::parse_tcp_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<udp::UdpHeader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<udp::UdpHeader as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<udp::UdpHeader as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<udp::UdpHeader as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"udp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_udp_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"udp::parse_udp_header"}
