{"def_path":"[DisambiguatedDefPathData { data: Module(\"kvstore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::sync::Arc<(dyn kvstore::KvStore + std::marker::Send + std::marker::Sync + 'static)> as kvstore::KvStore>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"kvstore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::boxed::Box<(dyn kvstore::KvStore + 'static)> as kvstore::KvStore>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"kvstore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_cdb_pool\"), disambiguator: 0 }]","has_unsafe":true,"name":"kvstore::cdb::new_cdb_pool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"kvstore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cdb\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"kvstore::cdb::<impl kvstore::KvStore for std::sync::Arc<objpool::Pool<std::boxed::Box<tinycdb::Cdb>>>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"kvstore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mtbl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"kvstore::mtbl::<impl kvstore::KvStore for mtbl::Reader>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"kvstore\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mtbl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_mtbl\"), disambiguator: 0 }]","has_unsafe":false,"name":"kvstore::mtbl::new_mtbl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::RequestHeader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::RequestHeader as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::RequestHeader as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::RequestHeader as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ARequest<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ARequest<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ARequest<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ARequest<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ResponseHeader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ResponseHeader as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ResponseHeader as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::ResponseHeader as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::AResponse<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::AResponse<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::AResponse<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::AResponse<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_request_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as memcached::binary::protocol::PRead>::read_request_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_request\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as memcached::binary::protocol::PRead>::read_request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_response_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as memcached::binary::protocol::PRead>::read_response_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_response\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as memcached::binary::protocol::PRead>::read_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_request_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"<W as memcached::binary::protocol::PWrite>::write_request_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_request\"), disambiguator: 0 }]","has_unsafe":false,"name":"<W as memcached::binary::protocol::PWrite>::write_request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_response_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"<W as memcached::binary::protocol::PWrite>::write_response_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_response\"), disambiguator: 0 }]","has_unsafe":false,"name":"<W as memcached::binary::protocol::PWrite>::write_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"make\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::AResponse<&'a [u8]>>::make"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"make_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::binary::protocol::AResponse<&'a [u8]>>::make_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"binary\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_client\"), disambiguator: 0 }]","has_unsafe":false,"name":"memcached::binary::server::handle_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::error::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::error::Error as std::convert::From<std::num::ParseIntError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::error::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::error::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"memcached_server\"), disambiguator: 0 }]","has_unsafe":false,"name":"memcached::server::memcached_server"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_client\"), disambiguator: 0 }]","has_unsafe":true,"name":"memcached::server::handle_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::text::protocol::DataRequest as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::text::protocol::IncrRequest as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<memcached::text::protocol::Request as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_keys\"), disambiguator: 0 }]","has_unsafe":false,"name":"memcached::text::protocol::get_keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_data_request\"), disambiguator: 0 }]","has_unsafe":true,"name":"memcached::text::protocol::read_data_request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_cas\"), disambiguator: 0 }]","has_unsafe":true,"name":"memcached::text::protocol::read_cas"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_touch\"), disambiguator: 0 }]","has_unsafe":false,"name":"memcached::text::protocol::parse_touch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_incr\"), disambiguator: 0 }]","has_unsafe":false,"name":"memcached::text::protocol::parse_incr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"memcached::text::protocol::Request::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"memcached::text::protocol::Response::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memcached\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_client\"), disambiguator: 0 }]","has_unsafe":true,"name":"memcached::text::server::handle_client"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<DbArg as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<DbArg as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Listen as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Listen as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Listen as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ServiceArg as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ServiceArg as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Args as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Args as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"parse_address_and_port\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse_address_and_port"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"parse_services\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse_services"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"parse_db\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse_db"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"parse_args\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse_args"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"setup_logger\"), disambiguator: 0 }]","has_unsafe":true,"name":"setup_logger"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"open_db\"), disambiguator: 0 }]","has_unsafe":true,"name":"open_db"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"spawn_service\"), disambiguator: 0 }]","has_unsafe":false,"name":"spawn_service"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"main\"), disambiguator: 0 }]","has_unsafe":true,"name":"main"}
