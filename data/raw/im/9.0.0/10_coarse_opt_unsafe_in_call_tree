{"def_path":"[DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<hash::DEFAULT_HASHER as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hash::DEFAULT_HASHER as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<hash::DEFAULT_HASHER as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shared_hasher\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::collections::hash_map::RandomState as hash::SharedHasher>::shared_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cons\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::conslist::cons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cons\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::cons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"head\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::head"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uncons\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::uncons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uncons2\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::uncons2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by::merge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge_pairs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by::merge_pairs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by::merge_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ascending\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by::ascending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"descending\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by::descending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sequences\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort_by::sequences"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<i32>>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::insert_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sort\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A>>::sort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"items\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::fmt::Debug>::fmt::items"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::Iter<A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::Iter<A> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::iter::Sum>::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::convert::From<&'a [R]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::convert::From<std::vec::Vec<R>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conslist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<conslist::ConsList<A> as std::convert::From<&'a std::vec::Vec<R>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lookup\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::walk::TreeContext<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::walk::KickUp<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_zipper\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::from_zipper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ins_down\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::ins_down"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ins_up\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::ins_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_down\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::pop_down"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_up\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::pop_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::max_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walk\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_max_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::ordmap::walk::remove_max_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::get_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::get_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"two\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::two"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"three\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::three"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lens\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::lens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_or\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::get_or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::insert_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::insert_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::insert_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert_lookup_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::insert_lookup_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::update_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_lookup_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::update_lookup_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"alter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::alter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::pop_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"union_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::union_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"union_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::union_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unions\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::unions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unions_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::unions_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unions_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::unions_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"difference_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::difference_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"difference_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::difference_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersection_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::intersection_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersection_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::intersection_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"merge_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::merge_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split_lookup\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::split_lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_submap_by\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::is_submap_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_proper_submap_by\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::is_proper_submap_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::pop_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_min_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::pop_min_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::pop_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_max_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::pop_max_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"delete_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::delete_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"delete_max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::delete_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_submap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::is_submap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_proper_submap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V>>::is_proper_submap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a ordmap::OrdMap<K, V> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::Iter<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::Iter<K, V>>::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::Iter<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::Iter<K, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::Keys<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::Values<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::iter::FromIterator<(RK, RV)>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a ordmap::OrdMap<K, V> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMapLens<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMapLens<K, V> as lens::PartialLens>::try_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_put\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMapLens<K, V> as lens::PartialLens>::try_put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::AsRef<ordmap::OrdMap<K, V>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<&'a [(RK, RV)]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<std::vec::Vec<(RK, RV)>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<&'a std::vec::Vec<(RK, RV)>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<std::collections::HashMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<&'a std::collections::HashMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<std::collections::BTreeMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<&'a std::collections::BTreeMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<hashmap::HashMap<K, V, S>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordmap::OrdMap<K, V> as std::convert::From<&'a hashmap::HashMap<K, V, S>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mask\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::bits::mask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bitpos\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::bits::bitpos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bit_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::bits::bit_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"hash\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hash_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::hash::hash_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::ArrayNode<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::ArrayNode<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pack\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::ArrayNode<K, V>>::pack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::BitmapNode<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Entry<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::BitmapNode<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::CollisionNode<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::CollisionNode<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"find_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::CollisionNode<K, V>>::find_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"single\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::single"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lookup\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::lookup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"insert_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::insert_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"remove_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::remove_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ptr_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::ptr_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::nodes::create_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::nodes::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::hashmap::nodes::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Iter<K, V>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Iter<K, V>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"advance\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Iter<K, V>>::advance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Iter<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_in\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::Node<K, V>>::fmt_in"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_in\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::ArrayNode<K, V>>::fmt_in"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_in\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::BitmapNode<K, V>>::fmt_in"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"nodes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_in\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::nodes::CollisionNode<K, V>>::fmt_in"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::new_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_or\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::get_or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_mut_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert_mut_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_lookup_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::insert_lookup_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::update_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update_lookup_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::update_lookup_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"alter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::alter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::remove_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::pop_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::pop_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_with_key_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::pop_with_key_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"union_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::union_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"union_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::union_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unions\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::unions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unions_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::unions_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unions_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::unions_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"difference_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::difference_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"difference_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::difference_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersection_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::intersection_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersection_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::intersection_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"merge_with_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::merge_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_submap_by\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::is_submap_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_proper_submap_by\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::is_proper_submap_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lens\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::lens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_submap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::is_submap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_proper_submap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S>>::is_proper_submap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::Keys<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::Values<K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::iter::FromIterator<(RK, RV)>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a hashmap::HashMap<K, V, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMapLens<K, V, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"try_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMapLens<K, V, S> as lens::PartialLens>::try_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"try_put\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMapLens<K, V, S> as lens::PartialLens>::try_put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::AsRef<hashmap::HashMap<K, V, S>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<&'a [(RK, RV)]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<std::vec::Vec<(RK, RV)>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<&'a std::vec::Vec<(RK, RV)>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<std::collections::HashMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<&'a std::collections::HashMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<std::collections::BTreeMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<&'a std::collections::BTreeMap<RK, RV>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<ordmap::OrdMap<K, V>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashmap::HashMap<K, V, S> as std::convert::From<&'a ordmap::OrdMap<K, V>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::get_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::get_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unions\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::unions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split_member\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::split_member"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_subset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::is_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_proper_subset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::is_proper_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::pop_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pop_max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::pop_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::remove_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove_max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A>>::remove_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a ordset::OrdSet<A> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a ordset::OrdSet<A> as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::Iter<A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::iter::FromIterator<RA>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a ordset::OrdSet<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a [A]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a [std::sync::Arc<A>]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<std::vec::Vec<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a std::vec::Vec<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a std::vec::Vec<std::sync::Arc<A>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<std::collections::HashSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a std::collections::HashSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a std::collections::HashSet<std::sync::Arc<A>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<std::collections::BTreeSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a std::collections::BTreeSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a std::collections::BTreeSet<std::sync::Arc<A>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<hashset::HashSet<A, S>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ordset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ordset::OrdSet<A> as std::convert::From<&'a hashset::HashSet<A, S>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::new_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::insert_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::remove_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unions\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::unions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_subset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::is_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_proper_subset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S>>::is_proper_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a hashset::HashSet<A, S> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a hashset::HashSet<A, S> as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::Iter<A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::iter::FromIterator<RA>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a hashset::HashSet<A, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a [A]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a [std::sync::Arc<A>]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<std::vec::Vec<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a std::vec::Vec<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a std::vec::Vec<std::sync::Arc<A>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<std::collections::HashSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a std::collections::HashSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a std::collections::HashSet<std::sync::Arc<A>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<std::collections::BTreeSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a std::collections::BTreeSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a std::collections::BTreeSet<std::sync::Arc<A>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<ordset::OrdSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hashset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<hashset::HashSet<A, S> as std::convert::From<&'a ordset::OrdSet<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cons\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::list::cons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"singleton\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::singleton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"head\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::head"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"link\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::link"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cons\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::cons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_front\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::push_front"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"snoc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::snoc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_back\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::push_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uncons\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::uncons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uncons2\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::uncons2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by::merge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge_pairs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by::merge_pairs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by::merge_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ascending\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by::ascending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"descending\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by::descending"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sequences\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort_by::sequences"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"range\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<i32>>::range"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sort\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::sort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A>>::insert_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold_queue\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::list::fold_queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::Iter<A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::Iter<A> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a list::List<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::iter::Sum>::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::convert::From<&'a [T]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::convert::From<std::vec::Vec<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<list::List<A> as std::convert::From<&'a std::vec::Vec<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Iter<A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a queue::Queue<A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::convert::From<&'a [T]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::convert::From<std::vec::Vec<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<queue::Queue<A> as std::convert::From<&'a std::vec::Vec<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<iter::Unfold<F, S> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unfold\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::iter::unfold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PartialLens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::lens::PartialLens::try_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::lens::Lens::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"put\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::lens::Lens::put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::lens::Lens::chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::Compose<A, B, C, L, R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::Compose<A, B, C, L, R> as lens::PartialLens>::try_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_put\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::Compose<A, B, C, L, R> as lens::PartialLens>::try_put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compose\"), disambiguator: 0 }]","fn_type":"Safe","name":"im::lens::compose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::GeneralLens<From, To>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::GeneralLens<From, To> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::GeneralLens<A, B> as lens::PartialLens>::try_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_put\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::GeneralLens<A, B> as lens::PartialLens>::try_put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::GeneralLens<A, B> as lens::Lens>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lens\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"put\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lens::GeneralLens<A, B> as lens::Lens>::put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shared\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as shared::Shared<T>>::shared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"shared\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"shared\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::Arc<T> as shared::Shared<T>>::shared"}
