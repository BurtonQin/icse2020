{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::api::mock::display::MockVRDisplay::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"inmediate_frame_data\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::inmediate_frame_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"synced_frame_data\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::synced_frame_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reset_pose\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::reset_pose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sync_poses\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::sync_poses"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bind_framebuffer\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::bind_framebuffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_framebuffers\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::get_framebuffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"render_layer\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::render_layer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"submit_frame\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::submit_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"display\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"start_present\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::display::MockVRDisplay as rust_webvr_api::VRDisplay>::start_present"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::service::MockVRService as rust_webvr_api::VRService>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_displays\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::service::MockVRService as rust_webvr_api::VRService>::fetch_displays"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_gamepads\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::service::MockVRService as rust_webvr_api::VRService>::fetch_gamepads"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_available\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::service::MockVRService as rust_webvr_api::VRService>::is_available"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll_events\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::service::MockVRService as rust_webvr_api::VRService>::poll_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::api::mock::service::MockVRService::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"service\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone_displays\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::api::mock::service::MockVRService::clone_displays"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::api::mock::MockServiceCreator::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"api\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_service\"), disambiguator: 0 }]","fn_type":"Safe","name":"<api::mock::MockServiceCreator as rust_webvr_api::VRServiceCreator>::new_service"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vr_manager::VRServiceManager as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register_defaults\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::register_defaults"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register_mock\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::register_mock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"register\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::register"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"initialize_services\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rust_webvr::vr_manager::VRServiceManager::initialize_services"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_displays\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rust_webvr::vr_manager::VRServiceManager::get_displays"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_gamepads\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rust_webvr::vr_manager::VRServiceManager::get_gamepads"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_display\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::get_display"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll_events\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::poll_events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_initialized\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_webvr::vr_manager::VRServiceManager::is_initialized"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_displays\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rust_webvr::vr_manager::VRServiceManager::fetch_displays"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vr_manager\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_gamepads\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rust_webvr::vr_manager::VRServiceManager::fetch_gamepads"}
