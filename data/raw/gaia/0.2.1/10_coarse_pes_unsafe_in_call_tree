{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<errors::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<errors::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as errors::ResultExt<T, E>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::Vertex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::Vertex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::Vertex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::Vertex as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::Vertex as gfx::pso::buffer::Structure<gfx::format::Format>>::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Data<R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Data<R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Data<R> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Data<R> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Meta as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Meta as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Meta as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Meta as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Meta as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Init<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Init<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::pipe::Init<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::terrain::pipe::Init<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"link_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::pipe::Init<'a> as gfx::pso::PipelineInit>::link_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bake_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::pipe::Data<R> as gfx::pso::PipelineData<R>>::bake_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"render::terrain::pipe::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::TerrainRenderer<R, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::TerrainRenderer<R, F>>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"terrain\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_vertex_buffer\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::terrain::TerrainRenderer<R, F>>::create_vertex_buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::polygon::PolygonRenderer<R, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::polygon::PolygonRenderer<R, F>>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"elevation_to_z\"), disambiguator: 0 }]","has_unsafe":false,"name":"render::polygon::elevation_to_z"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::Renderer<R, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":true,"name":"<render::Renderer<R, F>>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_asset_getter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_asset_getter::TileAssetData::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_asset_getter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_assets\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_asset_getter::TileAssetData::create_assets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_asset_getter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_color_data\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_asset_getter::get_color_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_asset_getter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_elevation_data\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_asset_getter::get_elevation_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_asset_getter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_metadata\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_asset_getter::get_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_chooser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_tiles\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_chooser::choose_tiles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_chooser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"desired_tiles\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_chooser::desired_tiles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_chooser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tile_in_frustum\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_chooser::tile_in_frustum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_chooser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_covering_tile\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_chooser::get_covering_tile"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_chooser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_parent_in_cache\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_chooser::find_parent_in_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tile_fetcher\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_tiles\"), disambiguator: 0 }]","has_unsafe":true,"name":"tile_fetcher::fetch_tiles"}
