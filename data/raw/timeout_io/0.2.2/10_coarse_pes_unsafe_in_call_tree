{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<event::Event as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"timeout_io::event::<impl std::ops::BitAnd<event::Event> for u8>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"raw_fd\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as event::RawFd>::raw_fd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"make_nonblocking\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::TcpListener as event::SetBlockingMode>::make_nonblocking"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"make_blocking\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::TcpListener as event::SetBlockingMode>::make_blocking"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"make_nonblocking\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::TcpStream as event::SetBlockingMode>::make_nonblocking"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"make_blocking\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::TcpStream as event::SetBlockingMode>::make_blocking"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"make_nonblocking\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::UdpSocket as event::SetBlockingMode>::make_nonblocking"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"make_blocking\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::UdpSocket as event::SetBlockingMode>::make_blocking"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"wait_until_readable\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as event::WaitForEvent>::wait_until_readable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"wait_until_writeable\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as event::WaitForEvent>::wait_until_writeable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_oneshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as reader::Reader>::read_oneshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_exact\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as reader::Reader>::read_exact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"reader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_until\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as reader::Reader>::read_until"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"writer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_oneshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as writer::Writer>::write_oneshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"writer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_exact\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as writer::Writer>::write_exact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"acceptor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::net::TcpListener as acceptor::Acceptor<std::net::TcpStream>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dns_resolve\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as resolver::DnsResolvable>::dns_resolve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resolver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse_ip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as resolver::IpParseable>::parse_ip"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IoError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IoError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IoError as std::convert::From<std::io::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IoError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remaining\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::time::Instant as InstantExt>::remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_ms\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::time::Duration as DurationExt>::as_ms"}
