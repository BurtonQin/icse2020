{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_into\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::map::map_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"join\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join_into\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::join::join_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"join\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"antijoin_into\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::join::antijoin_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"join\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join_helper\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::join::join_helper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"join\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gallop\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::join::gallop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"merge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Relation<Tuple>>::merge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Relation<Tuple>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Relation<Tuple> as std::convert::From<I>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Relation<Tuple> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::Iteration::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"changed\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::Iteration::changed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"variable\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::Iteration::variable"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"variable_indistinct\"), disambiguator: 0 }]","fn_type":"Safe","name":"datafrog::Iteration::variable_indistinct"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_join\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple>>::from_join"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_antijoin\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple>>::from_antijoin"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple>>::from_map"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"complete\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple>>::complete"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"changed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Variable<Tuple> as VariableTrait>::changed"}
