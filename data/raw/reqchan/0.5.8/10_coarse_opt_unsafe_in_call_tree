{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"channel\"), disambiguator: 0 }]","fn_type":"Safe","name":"reqchan::channel"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_request\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Requester<T>>::try_request"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_receive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<RequestContract<T>>::try_receive"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_cancel\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RequestContract<T>>::try_cancel"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RequestContract<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_respond\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Responder<T>>::try_respond"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Responder<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ResponseContract<T>>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ResponseContract<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"flag_request\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Inner<T>>::flag_request"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"try_unflag_request\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Inner<T>>::try_unflag_request"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"set_datum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Inner<T>>::set_datum"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"try_get_datum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Inner<T>>::try_get_datum"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"try_lock_request\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Inner<T>>::try_lock_request"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"unlock_request\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Inner<T>>::unlock_request"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"try_lock_response\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Inner<T>>::try_lock_response"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"unlock_response\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Inner<T>>::unlock_response"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TryRequestError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TryReceiveError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<TryRespondError as std::fmt::Debug>::fmt"}
