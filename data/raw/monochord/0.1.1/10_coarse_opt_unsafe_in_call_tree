{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interval\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::Tuning::interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::Edo as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::Edo as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::Edo::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_a440\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::Edo::new_a440"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reference_pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::Edo as tuning::Tuning>::reference_pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::Edo as tuning::Tuning>::pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"interval\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::Edo as tuning::Tuning>::interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::EqualSteps as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::EqualSteps as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::EqualSteps::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_a440\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::EqualSteps::new_a440"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"reference_pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::EqualSteps as tuning::Tuning>::reference_pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::EqualSteps as tuning::Tuning>::pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::CyclicTuning as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::CyclicTuning as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_cents\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::CyclicTuning::from_cents"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_ratios\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::CyclicTuning::from_ratios"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"reference_pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::CyclicTuning as tuning::Tuning>::reference_pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::CyclicTuning as tuning::Tuning>::pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::MidiTuning as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::MidiTuning as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_tuning\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::MidiTuning::from_tuning"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_pitches\"), disambiguator: 0 }]","has_unsafe":false,"name":"tuning::MidiTuning::from_pitches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::MidiTuning as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reference_pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::MidiTuning as tuning::Tuning>::reference_pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"pitch\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::MidiTuning as tuning::Tuning>::pitch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tuning\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tuning::MidiTuning as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::ops::Add<Cents>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::ops::Sub<Cents>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Hz as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_ratio\"), disambiguator: 0 }]","has_unsafe":false,"name":"Cents::from_ratio"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_ratio\"), disambiguator: 0 }]","has_unsafe":false,"name":"Cents::to_ratio"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Cents as std::ops::Mul<f32>>::mul"}
