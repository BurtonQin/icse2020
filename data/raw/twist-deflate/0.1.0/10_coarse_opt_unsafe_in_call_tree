{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"other\"), disambiguator: 0 }]","has_unsafe":false,"name":"other"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_stdout\"), disambiguator: 0 }]","has_unsafe":false,"name":"Deflate::add_stdout"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_stderr\"), disambiguator: 0 }]","has_unsafe":false,"name":"Deflate::add_stderr"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Deflate as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Deflate as twist::FromHeader>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"response\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Deflate as twist::IntoResponse>::response"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_rsv\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Deflate as twist::PerMessage>::reserve_rsv"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"uses_extension_data\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Deflate as twist::PerMessage>::uses_extension_data"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Deflate as twist::PerMessage>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Deflate as twist::PerMessage>::encode"}
