{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(dyn ast::AstNode + 'static) as downcast::Downcast<T>>::is_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(dyn ast::AstNode + 'static)>::is"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"downcast_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(dyn ast::AstNode + 'static)>::downcast_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"downcast_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(dyn ast::AstNode + 'static)>::downcast_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"downcast\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(dyn ast::AstNode + 'static)>::downcast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as ast::Copyable>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"depth\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ast::NodeInTree<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_nodes_and_parents\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::find_nodes_and_parents"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_nodes_and_parents_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::find_nodes_and_parents_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"same_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::same_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_or_replace\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::clone_or_replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"replace_to_root\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::replace_to_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_replace_to_root\"), disambiguator: 0 }]","has_unsafe":true,"name":"ast::do_replace_to_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<population::Population<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<population::Population<P, F>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"n\"), disambiguator: 0 }]","has_unsafe":false,"name":"<population::Population<P, F>>::n"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"score\"), disambiguator: 0 }]","has_unsafe":true,"name":"<population::Population<P, F>>::score"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"avg_score\"), disambiguator: 0 }]","has_unsafe":true,"name":"<population::Population<P, F>>::avg_score"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"best_score\"), disambiguator: 0 }]","has_unsafe":true,"name":"<population::Population<P, F>>::best_score"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"champion\"), disambiguator: 0 }]","has_unsafe":false,"name":"<population::Population<P, F>>::champion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"best_n\"), disambiguator: 0 }]","has_unsafe":false,"name":"<population::Population<P, F>>::best_n"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"population\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<population::CreatureScore<'a, P, F> as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mutate\"), disambiguator: 0 }]","has_unsafe":true,"name":"random_pop::<impl ast::Mutatable for T>::mutate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_population\"), disambiguator: 0 }]","has_unsafe":true,"name":"random_pop::random_population"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"retain_best\"), disambiguator: 0 }]","has_unsafe":true,"name":"random_pop::retain_best"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<random_pop::NodeWeights as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fixed\"), disambiguator: 0 }]","has_unsafe":false,"name":"random_pop::NodeWeights::fixed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"randomized\"), disambiguator: 0 }]","has_unsafe":true,"name":"random_pop::NodeWeights::randomized"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"internal\"), disambiguator: 0 }]","has_unsafe":false,"name":"random_pop::NodeWeights::internal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"leaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"random_pop::NodeWeights::leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"random_pop::NodeWeights::next_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"random_pop\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"gen_child\"), disambiguator: 0 }]","has_unsafe":true,"name":"random_pop::NodeWeights::gen_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partial_max\"), disambiguator: 0 }]","has_unsafe":true,"name":"num::partial_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partial_min\"), disambiguator: 0 }]","has_unsafe":true,"name":"num::partial_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","has_unsafe":true,"name":"num::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"torus\"), disambiguator: 0 }]","has_unsafe":false,"name":"num::torus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","has_unsafe":false,"name":"num::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mutate_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"genetic::mutate::mutate_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"depth\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::mutate::depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crossover\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"crossover_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"genetic::crossover::crossover_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"crossover\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"group_by_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"genetic::crossover::group_by_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::SimpleFitness::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"score_card\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::SimpleFitness as genetic::fitness::Fitness>::score_card"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":true,"name":"<genetic::fitness::ScoreCard as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::ScoreCard::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::ScoreCard::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"scores\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::ScoreCard::scores"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"total_score\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::ScoreCard::total_score"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::ScoreCard::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_rec\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::fitness::find_rec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::ops::AddAssign<&'a genetic::fitness::ScoreCard>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fitness\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<genetic::fitness::ScoreCard as std::ops::Div<f32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tournament_selection\"), disambiguator: 0 }]","has_unsafe":false,"name":"genetic::select::tournament_selection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"genetic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evolve\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"evolve\"), disambiguator: 0 }]","has_unsafe":true,"name":"genetic::evolve::evolve"}
