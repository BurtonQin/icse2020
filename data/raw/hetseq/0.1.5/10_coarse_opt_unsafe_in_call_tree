{"def_path":"[DisambiguatedDefPathData { data: Module(\"by_ref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<()> as by_ref::ByRef<'a>>::by_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"by_ref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"by_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(H, T)> as by_ref::ByRef<'a>>::by_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"by_ref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"by_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()> as by_ref::ByRef<'a>>::by_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"by_ref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"by_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(H, T)> as by_ref::ByRef<'a>>::by_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"f\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut X as f::HetFnOnce<A>>::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"f\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut X as f::HetFnMut<A>>::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"f\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a X as f::HetFnOnce<A>>::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"f\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a X as f::HetFnMut<A>>::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"f\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a X as f::HetFn<A>>::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fold\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<()> as fold::Foldable<I, F>>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fold\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()> as fold::Foldable<I, F>>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fold\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(H, T)> as fold::Foldable<I, F>>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fold\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(H, T)> as fold::Foldable<I, F>>::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<()> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a list::List<()> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a queue::Queue<()> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(H, T)> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut list::List<(H, T)> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a list::List<(H, T)> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(H, T)> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a mut queue::Queue<(H, T)> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"functor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a queue::Queue<(H, T)> as functor::Functor<F>>::fmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"len\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Length\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"len::Length::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<()>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"head\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(H, list::List<T>)>>::head"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(H, list::List<T>)>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_list\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<L> as list::IntoList>::into_list"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_queue_impl\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(H, T)> as list::IntoQueueImpl<Q>>::into_queue_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_queue\"), disambiguator: 0 }]","has_unsafe":false,"name":"list::<impl queue::IntoQueue for L>::into_queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<num::Z as num::Num>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<num::S<N> as num::Num>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"num\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<num::P<N> as num::Num>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<()> as try::Try<E>>::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(std::result::Result<H, E>, T)> as try::Try<E>>::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()> as try::Try<E>>::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"try\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(H, std::result::Result<T, E>)> as try::Try<E>>::try"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<Q>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(queue::Queue<H>, T)>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(queue::Queue<H>, T)>>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_list_impl\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()> as queue::IntoListImpl<L>>::into_list_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_list_impl\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(H, T)> as queue::IntoListImpl<L>>::into_list_impl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_list\"), disambiguator: 0 }]","has_unsafe":false,"name":"queue::<impl list::IntoList for Q>::into_list"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zip\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<()> as zip::Zip<list::List<()>>>::zip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zip\"), disambiguator: 0 }]","has_unsafe":false,"name":"<list::List<(LH, LT)> as zip::Zip<list::List<(RH, RT)>>>::zip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"zip\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<()> as zip::Zip<queue::Queue<()>>>::zip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"zip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"zip\"), disambiguator: 0 }]","has_unsafe":false,"name":"<queue::Queue<(LH, LT)> as zip::Zip<queue::Queue<(RH, RT)>>>::zip"}
