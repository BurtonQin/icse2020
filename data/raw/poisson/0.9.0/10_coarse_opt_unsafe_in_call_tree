{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Bridson as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Bridson as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Bridson as algorithm::Creator<F, V>>::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Algo<F, V> as algorithm::Algorithm<F, V>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Algo<F, V> as algorithm::Algorithm<F, V>>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"restrict\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Algo<F, V> as algorithm::Algorithm<F, V>>::restrict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"stays_legal\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Algo<F, V> as algorithm::Algorithm<F, V>>::stays_legal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_if_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::bridson::Algo<F, V>>::insert_if_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bridson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_point_annulus\"), disambiguator: 0 }]","has_unsafe":false,"name":"algorithm::bridson::random_point_annulus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Ebeida as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Ebeida as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Ebeida as algorithm::Creator<F, V>>::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Algo<F, V> as algorithm::Algorithm<F, V>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Algo<F, V> as algorithm::Algorithm<F, V>>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"restrict\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Algo<F, V> as algorithm::Algorithm<F, V>>::restrict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"stays_legal\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Algo<F, V> as algorithm::Algorithm<F, V>>::stays_legal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide\"), disambiguator: 0 }]","has_unsafe":false,"name":"<algorithm::ebeida::Algo<F, V>>::subdivide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algorithm\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ebeida\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"covered\"), disambiguator: 0 }]","has_unsafe":false,"name":"algorithm::ebeida::covered"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<utils::math::MAX_PACKING_DENSITIES as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::MAX_PACKING_DENSITIES as std::ops::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"require_sync\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::MAX_PACKING_DENSITIES as std::ops::Deref>::deref::require_sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<utils::math::GAMMA as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::GAMMA as std::ops::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"require_sync\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::GAMMA as std::ops::Deref>::deref::require_sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<utils::math::MAX_RADII as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<utils::math::MAX_RADII as std::ops::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"require_sync\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::MAX_RADII as std::ops::Deref>::deref::require_sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<utils::math::ALPHA as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::ALPHA as std::ops::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"require_sync\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::ALPHA as std::ops::Deref>::deref::require_sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<utils::math::BETA as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::BETA as std::ops::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"require_sync\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::math::BETA as std::ops::Deref>::deref::require_sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"precalc\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::math::precalc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"newton\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::math::newton"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"calc_radius\"), disambiguator: 0 }]","has_unsafe":true,"name":"utils::math::calc_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cells\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V>>::cells"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"side\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V>>::side"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cell\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::Grid<F, V>>::cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_random_sample\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::choose_random_sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sample_to_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::sample_to_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index_to_sample\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::index_to_sample"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_disk_free\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::is_disk_free"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqdist\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::sqdist"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_parent\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::get_parent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<utils::CombiIter<'a, F, FF, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"each_combination\"), disambiguator: 0 }]","has_unsafe":false,"name":"utils::each_combination"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"flat_map_inplace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::vec::Vec<T> as utils::Inplace<T>>::flat_map_inplace"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","has_unsafe":false,"name":"Float::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Type as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Type as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Type as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Type as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Type as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Builder<F, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_radius\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V>>::with_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_relative_radius\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V>>::with_relative_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_samples\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Builder<F, V>>::with_samples"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"radius\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V>>::radius"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poisson_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V>>::poisson_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Builder<F, V>>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_radius\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A>>::set_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"radius\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A>>::radius"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poisson_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A>>::poisson_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"generate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A>>::generate"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Generator<F, V, R, A> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"radius\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A>>::radius"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poisson_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A>>::poisson_type"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"restrict\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A>>::restrict"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"stays_legal\"), disambiguator: 0 }]","has_unsafe":false,"name":"<PoissonIter<F, V, R, A>>::stays_legal"}
