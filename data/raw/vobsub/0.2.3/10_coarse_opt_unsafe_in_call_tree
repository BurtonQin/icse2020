{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","has_unsafe":true,"name":"errors::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<errors::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<errors::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::Error as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"errors::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<errors::ErrorKind as std::convert::From<errors::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"<std::result::Result<T, E> as errors::ResultExt<T, E>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ignore_trailing_data\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nom::IResult<I, O, E> as errors::IResultExt<I, O, E>>::ignore_trailing_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_vobsub_result\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nom::IResult<I, O, E> as errors::IResultExt<I, O, E>>::to_vobsub_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hex_digit\"), disambiguator: 0 }]","has_unsafe":false,"name":"idx::hex_digit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hex_digit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"idx::hex_digit::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hex_u8\"), disambiguator: 0 }]","has_unsafe":false,"name":"idx::hex_u8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rgb\"), disambiguator: 0 }]","has_unsafe":true,"name":"idx::rgb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette\"), disambiguator: 0 }]","has_unsafe":true,"name":"idx::palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<idx::Index as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }]","has_unsafe":true,"name":"idx::Index::open"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<idx::Index::open::KEY_VALUE as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<idx::Index::open::KEY_VALUE as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"open\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<idx::Index::open::KEY_VALUE as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette\"), disambiguator: 0 }]","has_unsafe":false,"name":"idx::Index::palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subtitles\"), disambiguator: 0 }]","has_unsafe":false,"name":"idx::Index::subtitles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"img\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<img::Size as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"img\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<img::Rle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"img\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"img::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"img\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rle\"), disambiguator: 0 }]","has_unsafe":false,"name":"img::rle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"img\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scan_line\"), disambiguator: 0 }]","has_unsafe":true,"name":"img::scan_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"img\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decompress\"), disambiguator: 0 }]","has_unsafe":true,"name":"img::decompress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"base\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::clock::Clock::base"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_ext\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::clock::Clock::with_ext"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_seconds\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::clock::Clock::to_seconds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::clock::Clock as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clock\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::clock::clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clock\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clock_and_ext\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::clock::clock_and_ext"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDtsFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDtsFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mpeg2::pes::PtsDtsFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDtsFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDtsFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pts_dts_flags\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::pts_dts_flags"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDts as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDts as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::PtsDts as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pts_only\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::pts_only"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pts_and_dts\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::pts_and_dts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pts_dts\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::pts_dts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderDataFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderDataFlags as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mpeg2::pes::HeaderDataFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderDataFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderDataFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bool_flag\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::bool_flag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header_data_flags\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::header_data_flags"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderData as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mpeg2::pes::HeaderData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::HeaderData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header_data_fields\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::header_data_fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header_data\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::header_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Header as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Header as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Header as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Header as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mpeg2::pes::Packet<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Packet<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Packet<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::pes::Packet<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"packet_helper\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::packet_helper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pes\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"packet\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::pes::packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::Header as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::Header as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::Header as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::Header as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::ps::header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::PesPacket<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mpeg2::ps::PesPacket<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::PesPacket<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mpeg2::ps::PesPacket<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pes_packet\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::ps::pes_packet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mpeg2::ps::PesPackets<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpeg2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ps\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pes_packets\"), disambiguator: 0 }]","has_unsafe":false,"name":"mpeg2::ps::pes_packets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"probe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_magic\"), disambiguator: 0 }]","has_unsafe":false,"name":"probe::has_magic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"probe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_idx_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"probe::is_idx_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"probe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_sub_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"probe::is_sub_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"palette_entries\"), disambiguator: 0 }]","has_unsafe":true,"name":"sub::palette_entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Coordinates as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Coordinates as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Coordinates as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Coordinates as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Coordinates as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"left\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Coordinates::left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"top\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Coordinates::top"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Coordinates::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Coordinates::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Coordinates::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coordinate\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::coordinate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coordinates\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::coordinates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rle_offsets\"), disambiguator: 0 }]","has_unsafe":true,"name":"sub::rle_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlCommand<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlCommand<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sub::ControlCommand<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sub::ControlCommand<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlCommand<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"control_command\"), disambiguator: 0 }]","has_unsafe":true,"name":"sub::control_command"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"control_command_end\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::control_command_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlSequence<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlSequence<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlSequence<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlSequence<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::ControlSequence<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"control_sequence\"), disambiguator: 0 }]","has_unsafe":true,"name":"sub::control_sequence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Subtitle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Subtitle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Subtitle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::start_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"end_time\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::end_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"force\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::force"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"coordinates\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::coordinates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"palette\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"alpha\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::alpha"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"raw_image\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::raw_image"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_image\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::Subtitle::to_image"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sub::Subtitle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_be_u16_as_usize\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::parse_be_u16_as_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subtitle\"), disambiguator: 0 }]","has_unsafe":true,"name":"sub::subtitle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sub::SubtitlesInternal<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sub::Subtitles<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subtitles\"), disambiguator: 0 }]","has_unsafe":false,"name":"sub::subtitles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<util::BytesFormatter<'a> as std::fmt::Debug>::fmt"}
