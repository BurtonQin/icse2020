{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::httpdate::HttpDate::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::convert::From<std::time::SystemTime>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::httpdate::<impl std::convert::From<httpdate::HttpDate> for std::time::SystemTime>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<httpdate::HttpDate as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<httpdate::HttpDate as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<httpdate::HttpDate as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"conv\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"httpdate::httpdate::conv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_imf_fixdate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"httpdate::httpdate::parse_imf_fixdate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_rfc850_date\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"httpdate::httpdate::parse_rfc850_date"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_rfc850_date\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"wday\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::httpdate::parse_rfc850_date::wday"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_asctime\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"httpdate::httpdate::parse_asctime"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"httpdate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_leap_year\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::httpdate::is_leap_year"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::convert::From<std::num::ParseIntError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::<impl std::convert::From<Error> for std::io::Error>::from"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"parse_http_date\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::parse_http_date"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"fmt_http_date\"), disambiguator: 0 }]","fn_type":"Safe","name":"httpdate::fmt_http_date"}
