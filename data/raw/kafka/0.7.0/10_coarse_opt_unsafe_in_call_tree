{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::error::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<openssl::ssl::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<openssl::error::ErrorStack>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<snap::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<error::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::ErrorKind as std::convert::From<error::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<T, E> as error::ResultExt<T, E>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::KafkaCode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::KafkaCode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::KafkaCode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::KafkaCode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<error::Error as std::convert::From<openssl::ssl::HandshakeError<S>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_sslerror_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::from_sslerror_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_snap_error_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::from_snap_error_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_ioe\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::error::clone_ioe"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topics::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topics::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topics::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"names\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topics::names"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topics::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topics::partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::Topics<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a client::metadata::Topics<'a> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::Topics<'a> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::TopicIter::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::TopicIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topic::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Topic::partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::Topic<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partitions::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partitions::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partitions::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partitions::partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"available_ids\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partitions::available_ids"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::Partitions<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a client::metadata::Partitions<'a> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::Partitions<'a> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::PartitionIter::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::PartitionIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partition::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partition::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"leader\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partition::leader"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"is_available\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::metadata::Partition::is_available"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::metadata::Partition<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::ClientState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::Broker as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::Broker::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"host\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::Broker::host"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::BrokerRef as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::BrokerRef as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::BrokerRef::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::BrokerRef::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::BrokerRef::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_unknown\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::BrokerRef::set_unknown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::TopicPartitions as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartitions::new_with_partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartitions::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartitions::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartitions::partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartitions::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a client::state::TopicPartitions as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::TopicPartition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartition::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"broker\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::TopicPartition::broker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::TopicPartitionIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::state::TopicNames<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"num_topics\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::num_topics"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"contains_topic\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::contains_topic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"contains_topic_partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::contains_topic_partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"topic_names\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::topic_names"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"topic_partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::topic_partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partitions_for\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::partitions_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next_correlation_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::next_correlation_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"find_broker\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::find_broker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clear_metadata\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::clear_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"update_metadata\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::state::ClientState::update_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"update_brokers\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::update_brokers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"group_coordinator\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::group_coordinator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"remove_group_coordinator\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::state::ClientState::remove_group_coordinator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"set_group_coordinator\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::state::ClientState::set_group_coordinator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::SecurityConfig::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_hostname_verification\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::SecurityConfig::with_hostname_verification"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::SecurityConfig as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::Pooled<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::Pooled<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::Config as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_conn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::Config::new_conn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::State as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::State::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next_conn_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::State::next_conn_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::Connections as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::Connections::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_security\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::Connections::new_with_security"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"set_idle_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::Connections::set_idle_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"idle_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::network::Connections::idle_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_conn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::Connections::get_conn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_conn_any\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::Connections::get_conn_any"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_secured\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::openssled::KafkaStream as client::network::IsSecured>::is_secured"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::openssled::KafkaStream::get_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_read_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::openssled::KafkaStream::set_read_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_write_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::openssled::KafkaStream::set_write_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::openssled::KafkaStream::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::network::openssled::KafkaStream as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::network::openssled::KafkaStream as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"openssled\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::network::openssled::KafkaStream as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::network::KafkaConnection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::KafkaConnection::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"read_exact\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::KafkaConnection::read_exact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"read_exact_alloc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::KafkaConnection::read_exact_alloc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"shutdown\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::KafkaConnection::shutdown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_stream\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::KafkaConnection::from_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"network\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::network::KafkaConnection::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default_conn_rw_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::default_conn_rw_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::KafkaClient as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::ClientConfig as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::FetchOffset as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::FetchOffset as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_kafka_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::FetchOffset::to_kafka_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::GroupOffsetStorage as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::GroupOffsetStorage as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::GroupOffsetStorage as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::GroupOffsetStorage as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"offset_fetch_version\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::GroupOffsetStorage::offset_fetch_version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"offset_commit_version\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::GroupOffsetStorage::offset_commit_version"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::FetchGroupOffset<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::FetchGroupOffset::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::FetchGroupOffset<'a> as std::convert::AsRef<client::FetchGroupOffset<'a>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::CommitOffset<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::CommitOffset::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::CommitOffset<'a> as std::convert::AsRef<client::CommitOffset<'a>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::RequiredAcks as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::RequiredAcks as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::ProduceMessage<'a, 'b> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::ProduceMessage<'a, 'b> as std::convert::AsRef<client::ProduceMessage<'a, 'b>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::ProduceMessage::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::FetchPartition<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::FetchPartition::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"with_max_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::FetchPartition::with_max_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::FetchPartition<'a> as std::convert::AsRef<client::FetchPartition<'a>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::ProduceConfirm as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::ProducePartitionConfirm as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new_secure\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::new_secure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hosts\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::hosts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_client_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_client_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"client_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::client_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_compression\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_compression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"compression\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::compression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_fetch_max_wait_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_fetch_max_wait_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_max_wait_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::fetch_max_wait_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_fetch_min_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_fetch_min_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_min_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::fetch_min_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_fetch_max_bytes_per_partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_fetch_max_bytes_per_partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_max_bytes_per_partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::fetch_max_bytes_per_partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_fetch_crc_validation\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_fetch_crc_validation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_crc_validation\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::fetch_crc_validation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_group_offset_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_group_offset_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"group_offset_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::group_offset_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_retry_backoff_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_retry_backoff_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"retry_backoff_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::retry_backoff_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_retry_max_attempts\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_retry_max_attempts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"retry_max_attempts\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::retry_max_attempts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"set_connection_idle_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::set_connection_idle_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"connection_idle_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::connection_idle_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"topics\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::topics"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"load_metadata_all\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::load_metadata_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"load_metadata\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::load_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"reset_metadata\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::reset_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_metadata\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_metadata"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_key_from_entry\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::KafkaClient::get_key_from_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_topic_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_topic_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_messages_for_partition\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_messages_for_partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"produce_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::produce_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"commit_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::commit_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"commit_offset\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::commit_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_group_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_group_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_group_topic_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::KafkaClient::fetch_group_topic_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"internal_produce_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::KafkaClient as client_internals::KafkaClientInternals>::internal_produce_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__get_group_coordinator\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__get_group_coordinator"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__commit_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__commit_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__fetch_group_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__fetch_group_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__fetch_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__fetch_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__produce_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__produce_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__send_receive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__send_receive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__send_receive_conn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__send_receive_conn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__send_noack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__send_noack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__send_request\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__send_request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__get_response\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__get_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__z_send_receive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__z_send_receive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__z_get_response\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__z_get_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__get_response_size\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::client::__get_response_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__retry_sleep\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::client::__retry_sleep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::Assignment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"topic\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::assignment::Assignment::topic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::assignment::Assignment::partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::AssignmentRef as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::AssignmentRef as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::AssignmentRef as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::AssignmentRef as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::AssignmentRef as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::AssignmentRef as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::Assignments as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::assignment::Assignments::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"topic_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::assignment::Assignments::topic_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::assignment::Assignments as std::ops::Index<consumer::assignment::AssignmentRef>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"assignment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::assignment::from_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"config\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::config::Config as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::FetchState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::TopicPartition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::TopicPartition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::TopicPartition as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::TopicPartition as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::TopicPartition as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::ConsumedOffset as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::State as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::state::State::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"topic_name\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::state::State::topic_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"topic_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::state::State::topic_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_offsets_debug\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::state::State::fetch_offsets_debug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"consumed_offsets_debug\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::state::State::consumed_offsets_debug"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"determine_partitions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::state::determine_partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_consumed_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::state::load_consumed_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_fetch_states\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::state::load_fetch_states"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_fetch_states\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load_partition_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::state::load_fetch_states::load_partition_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::OffsetsMapDebug<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::state::TopicPartitionsDebug<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::builder::Builder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::builder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_group\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_group"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_topic\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_topic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_topic_partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_topic_partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_security\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_security"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_fallback_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_fallback_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_fetch_max_wait_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_fetch_max_wait_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_fetch_min_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_fetch_min_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_fetch_max_bytes_per_partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_fetch_max_bytes_per_partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_fetch_crc_validation\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_fetch_crc_validation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_offset_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_offset_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_retry_max_bytes_limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_retry_max_bytes_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_connection_idle_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_connection_idle_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_client_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::with_client_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_kafka_client\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::builder::Builder::new_kafka_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"builder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::builder::Builder::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::Consumer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_client\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::Consumer::from_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_hosts\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::Consumer::from_hosts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"client\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"client_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::client_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_client\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::into_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subscriptions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::subscriptions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::Consumer::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"single_partition_consumer\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::single_partition_consumer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"group\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::group"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fetch_messages\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::Consumer::fetch_messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"process_fetch_responses\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::Consumer::process_fetch_responses"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last_consumed_message\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::last_consumed_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consume_message\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::consume_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consume_messageset\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::Consumer::consume_messageset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"commit_consumed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::consumer::Consumer::commit_consumed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::MessageSets as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::MessageSets::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::MessageSets::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"topic\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::MessageSet::topic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::MessageSet::partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"messages\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::consumer::MessageSet::messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<consumer::MessageSetsIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as producer::AsBytes>::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as producer::AsBytes>::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<u8> as producer::AsBytes>::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a [u8] as producer::AsBytes>::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"as_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a str as producer::AsBytes>::as_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_key_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Record<'a, K, V>>::from_key_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"with_partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Record<'a, K, V>>::with_partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_value\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Record<'a, (), V>>::from_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Record<'a, K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_client\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Producer>::from_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_hosts\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Producer>::from_hosts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"client\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Producer>::client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_client\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Producer>::into_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<producer::Producer<P>>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"send_all\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<producer::Producer<P>>::send_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_option\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::producer::to_option"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::State<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_security\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::with_security"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_compression\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::with_compression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_ack_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::with_ack_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_connection_idle_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::with_connection_idle_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_required_acks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::with_required_acks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"with_client_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder>::with_client_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"with_partitioner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder<P>>::with_partitioner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new_kafka_client\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::Builder<P>>::new_kafka_client"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<producer::Builder<P>>::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"available_ids\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::producer::Partitions::available_ids"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"num_available\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::producer::Partitions::num_available"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"num_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::producer::Partitions::num_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::producer::Topics::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::producer::Topics::partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::DefaultPartitioner<H> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::DefaultPartitioner>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"with_default_hasher\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::DefaultPartitioner>::with_default_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"producer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"<producer::DefaultPartitioner<H> as producer::Partitioner>::partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<utils::PartitionOffset as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<utils::PartitionOffset as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<utils::PartitionOffset as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<utils::PartitionOffset as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<utils::PartitionOffset as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a T as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<str as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[V] as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[u8] as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<codecs::AsStrings<'a, T> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode_as_array\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::codecs::encode_as_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FromByte\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode_new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::codecs::FromByte::decode_new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i8 as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i16 as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i32 as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i64 as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::string::String as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<V> as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codecs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<u8> as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::ProduceRequest<'a, 'b> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::TopicPartitionProduceRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::PartitionProduceRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::MessageProduceRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::ProduceRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::ProduceRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::TopicPartitionProduceRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::TopicPartitionProduceRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::PartitionProduceRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::PartitionProduceRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::produce::ProduceRequest<'a, 'b> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::produce::TopicPartitionProduceRequest<'a> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"_encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::produce::PartitionProduceRequest::_encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_compressed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::produce::render_compressed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::MessageProduceRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"_encode_to_buf\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::produce::MessageProduceRequest::_encode_to_buf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::produce::<impl codecs::ToByte for std::option::Option<&'a [u8]>>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::ProduceResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::ProduceResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::ProduceResponse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::TopicPartitionProduceResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::TopicPartitionProduceResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::TopicPartitionProduceResponse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::PartitionProduceResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::PartitionProduceResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::produce::PartitionProduceResponse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_response\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::ProduceResponse::get_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"get_response\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::produce::TopicPartitionProduceResponse::get_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_response\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::produce::PartitionProduceResponse::get_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::produce::ProduceResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::produce::TopicPartitionProduceResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"produce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::produce::PartitionProduceResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::OffsetRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::TopicPartitionOffsetRequest<'a> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::TopicPartitionOffsetRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::PartitionOffsetRequest as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::PartitionOffsetRequest as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::offset::OffsetRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::offset::OffsetRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::offset::TopicPartitionOffsetRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::offset::TopicPartitionOffsetRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::offset::PartitionOffsetRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::offset::OffsetRequest<'a> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::offset::TopicPartitionOffsetRequest<'a> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::PartitionOffsetRequest as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::OffsetResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::OffsetResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::TopicPartitionOffsetResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::TopicPartitionOffsetResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::PartitionOffsetResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::offset::PartitionOffsetResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_offset\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::offset::PartitionOffsetResponse::into_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::offset::OffsetResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::offset::TopicPartitionOffsetResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"offset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::offset::PartitionOffsetResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::MetadataRequest<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::MetadataRequest<'a, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::metadata::MetadataRequest<'a, T> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::MetadataResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::MetadataResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::BrokerMetadata as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::BrokerMetadata as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::TopicMetadata as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::TopicMetadata as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::PartitionMetadata as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::metadata::PartitionMetadata as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::metadata::MetadataResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::metadata::BrokerMetadata as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::metadata::TopicMetadata as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"metadata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::metadata::PartitionMetadata as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::GroupCoordinatorRequest<'a, 'b> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::GroupCoordinatorRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::GroupCoordinatorRequest<'a, 'b> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::GroupCoordinatorResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::GroupCoordinatorResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_result\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::consumer::GroupCoordinatorResponse::to_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::GroupCoordinatorResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetFetchVersion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetFetchVersion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::OffsetFetchVersion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetFetchVersion as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetFetchRequest<'a, 'b, 'c> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::TopicPartitionOffsetFetchRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetFetchRequest as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::OffsetFetchRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::OffsetFetchRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::TopicPartitionOffsetFetchRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::TopicPartitionOffsetFetchRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::PartitionOffsetFetchRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::OffsetFetchRequest<'a, 'b, 'c> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::TopicPartitionOffsetFetchRequest<'a> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetFetchRequest as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetFetchResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetFetchResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::TopicPartitionOffsetFetchResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::TopicPartitionOffsetFetchResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetFetchResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetFetchResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_offsets\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::consumer::PartitionOffsetFetchResponse::get_offsets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::OffsetFetchResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::TopicPartitionOffsetFetchResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::PartitionOffsetFetchResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetCommitVersion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetCommitVersion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::OffsetCommitVersion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetCommitVersion as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_protocol\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::OffsetCommitVersion::from_protocol"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetCommitRequest<'a, 'b> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::TopicPartitionOffsetCommitRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetCommitRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::OffsetCommitRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::OffsetCommitRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::TopicPartitionOffsetCommitRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::TopicPartitionOffsetCommitRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::consumer::PartitionOffsetCommitRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::OffsetCommitRequest<'a, 'b> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetCommitResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::OffsetCommitResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::OffsetCommitResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::TopicPartitionOffsetCommitResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::TopicPartitionOffsetCommitResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::TopicPartitionOffsetCommitResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetCommitResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::consumer::PartitionOffsetCommitResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"to_error\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::consumer::PartitionOffsetCommitResponse::to_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"consumer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::consumer::PartitionOffsetCommitResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rest\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::rest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_i8\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::zreader::ZReader::read_i8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_i16\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read_i16"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_i32\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_i64\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"zreader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_array_len\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::zreader::ZReader::read_array_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::FetchRequest<'a, 'b> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::TopicPartitionFetchRequest as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::PartitionFetchRequest as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::FetchRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::FetchRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::FetchRequest::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::TopicPartitionFetchRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::TopicPartitionFetchRequest::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::TopicPartitionFetchRequest::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::PartitionFetchRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::fetch::FetchRequest<'a, 'b> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::TopicPartitionFetchRequest::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::PartitionFetchRequest::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::fetch::ResponseParser<'a, 'b, 'c> as protocol::ResponseParser>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::Response as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::Response::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"correlation_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Response::correlation_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"topics\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Response::topics"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::Topic<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::Topic::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"topic\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Topic::topic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"partitions\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Topic::partitions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::Partition<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::Partition::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partition\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Partition::partition"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"data\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Partition::data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::Data<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"highwatermark_offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Data::highwatermark_offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"messages\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::fetch::Data::messages"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::MessageSet<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::fetch::Message<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::MessageSet::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::MessageSet::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next_message\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::MessageSet::next_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"fetch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::fetch::ProtocolMessage::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_protocol\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::<impl error::KafkaCode>::from_protocol"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_protocol\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::protocol::<impl error::Error>::from_protocol"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::HeaderRequest<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::HeaderRequest::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::HeaderRequest<'a> as codecs::ToByte>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::HeaderResponse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::HeaderResponse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<protocol::HeaderResponse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<protocol::HeaderResponse as codecs::FromByte>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_crc\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::to_crc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"protocol\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_millis_i32\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::protocol::to_millis_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compress\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::compression::gzip::compress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gzip\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uncompress\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::compression::gzip::uncompress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compress\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::compression::snappy::compress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uncompress_to\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::compression::snappy::uncompress_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"validate_stream\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::compression::snappy::validate_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::compression::snappy::SnappyReader::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::compression::snappy::SnappyReader::_read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_uncompressed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"kafka::compression::snappy::SnappyReader::read_uncompressed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_chunk\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::compression::snappy::SnappyReader::next_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_read_to_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"kafka::compression::snappy::SnappyReader::_read_to_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<compression::snappy::SnappyReader<'a> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"snappy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read_to_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compression::snappy::SnappyReader<'a> as std::io::Read>::read_to_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compression::Compression as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compression::Compression as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compression::Compression as std::default::Default>::default"}
