{"def_path":"[DisambiguatedDefPathData { data: Module(\"math\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fixed\"), disambiguator: 0 }]","has_unsafe":true,"name":"math::fixed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"svg_event\"), disambiguator: 0 }]","has_unsafe":true,"name":"path_state::PathState::svg_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"path_event\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::path_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"flattened_event\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::flattened_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"move_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::move_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"line_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::line_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"curve_to\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::curve_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"close\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::close"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"path_state::PathState::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"relative_next\"), disambiguator: 0 }]","has_unsafe":true,"name":"path_state::PathState::relative_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_smooth_ctrl\"), disambiguator: 0 }]","has_unsafe":true,"name":"path_state::PathState::get_smooth_ctrl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_relative\"), disambiguator: 0 }]","has_unsafe":true,"name":"path_state::PathState::from_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path_state\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"svg_to_path_event\"), disambiguator: 0 }]","has_unsafe":true,"name":"path_state::PathState::svg_to_path_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::SvgEvent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::SvgEvent as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::SvgEvent as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::SvgEvent as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::PathEvent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::PathEvent as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::PathEvent as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::PathEvent as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::QuadraticPathEvent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::QuadraticPathEvent as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::QuadraticPathEvent as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::QuadraticPathEvent as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::FlattenedEvent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<events::FlattenedEvent as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::FlattenedEvent as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<events::FlattenedEvent as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_svg_event\"), disambiguator: 0 }]","has_unsafe":false,"name":"events::PathEvent::to_svg_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"destination\"), disambiguator: 0 }]","has_unsafe":false,"name":"events::PathEvent::destination"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_svg_event\"), disambiguator: 0 }]","has_unsafe":false,"name":"events::FlattenedEvent::to_svg_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"events\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_path_event\"), disambiguator: 0 }]","has_unsafe":false,"name":"events::FlattenedEvent::to_path_event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_1 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_2 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_3 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_4 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_5 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_6 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_7 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_8 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_9 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_10 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_11 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_12 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_13 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_14 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_15 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_16 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_24 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::_32 as fixed::FractionalBits>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::from_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"epsilon\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::from_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::sign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"min_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::min_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"to_fixed\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::to_fixed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::Mul<i64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::Div<i64>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F> as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::convert::Into<f32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::convert::Into<f64>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::from_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"epsilon\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"from_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::from_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"sign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::sign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"min_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::min_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"to_fixed\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::to_fixed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::Mul<i32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::Div<i32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F> as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::convert::Into<f32>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::convert::Into<f64>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_i32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::from_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"truncate_to_i32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::truncate_to_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"mul_div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::mul_div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"min_val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::min_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"max_val\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp32<F>>::max_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"to_fp64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F>>::to_fp64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp32<F> as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::from_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"truncate_to_i64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::truncate_to_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"mul_div\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fixed::Fp64<F>>::mul_div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"to_fp32\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F>>::to_fp32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fixed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","has_unsafe":true,"name":"<fixed::Fp64<F> as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ArcFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ArcFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ArcFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ArcFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ArcFlags as std::default::Default>::default"}
