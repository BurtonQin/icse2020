{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, std::hash::BuildHasherDefault<std::collections::hash_map::DefaultHasher>>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, std::hash::BuildHasherDefault<std::collections::hash_map::DefaultHasher>>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_hasher\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, S>>::with_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity_and_hasher\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, S>>::with_capacity_and_hasher"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"nodes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<maglev::Maglev<N, S> as conshash::ConsistentHasher<N>>::nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<maglev::Maglev<N, S> as conshash::ConsistentHasher<N>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, S> as conshash::ConsistentHasher<N>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash_with_seed\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, S>>::hash_with_seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"maglev\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"populate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<maglev::Maglev<N, S>>::populate"}
