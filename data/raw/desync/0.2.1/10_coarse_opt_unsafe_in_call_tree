{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scheduler::SCHEDULER as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scheduler::SCHEDULER as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scheduler::SCHEDULER as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"initial_max_threads\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::initial_max_threads"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<scheduler::QueueState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::QueueState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::QueueState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::JobQueue as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::JobQueue::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dequeue\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::JobQueue::dequeue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drain\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::JobQueue::drain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_max_threads\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::set_max_threads"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"despawn_threads_if_overloaded\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::despawn_threads_if_overloaded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next_to_run\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::next_to_run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_dormant\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::schedule_dormant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"spawn_thread_if_less_than_maximum\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::spawn_thread_if_less_than_maximum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"schedule_thread\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::schedule_thread"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reschedule_queue\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::reschedule_queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"spawn_thread\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::spawn_thread"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_job_queue\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler::Scheduler::create_job_queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"async\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::async"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"future\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"after\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::after"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"suspend\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::suspend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"resume\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::resume"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sync_immediate\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::sync_immediate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sync_drain\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::sync_drain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sync_background\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::sync_background"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sync\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::Scheduler::sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scheduler::Scheduler as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scheduler\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::scheduler"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"queue\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"async\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::async"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"future\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sync\"), disambiguator: 0 }]","has_unsafe":true,"name":"scheduler::sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"desync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<desync::Desync<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"desync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"async\"), disambiguator: 0 }]","has_unsafe":true,"name":"<desync::Desync<T>>::async"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"desync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sync\"), disambiguator: 0 }]","has_unsafe":true,"name":"<desync::Desync<T>>::sync"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"desync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"future\"), disambiguator: 0 }]","has_unsafe":true,"name":"<desync::Desync<T>>::future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"desync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"after\"), disambiguator: 0 }]","has_unsafe":true,"name":"<desync::Desync<T>>::after"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"desync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<desync::Desync<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pipe::PIPE_MONITOR as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pipe::PIPE_MONITOR as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pipe::PIPE_MONITOR as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pipe_in\"), disambiguator: 0 }]","has_unsafe":true,"name":"pipe::pipe_in"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pipe\"), disambiguator: 0 }]","has_unsafe":true,"name":"pipe::pipe"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pipe::PipeStream<Item, Error>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_backpressure_depth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pipe::PipeStream<Item, Error>>::set_backpressure_depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pipe::PipeStream<Item, Error> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pipe::PipeStream<Item, Error> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"pipe::PipeMonitor::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":false,"name":"pipe::PipeMonitor::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"monitor\"), disambiguator: 0 }]","has_unsafe":true,"name":"pipe::PipeMonitor::monitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pipe\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"notify\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pipe::PipeNotify<PollFn> as futures::executor::Notify>::notify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<job::Job<TFn>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"<job::Job<TFn> as job::ScheduledJob>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsafe_job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"unsafe_job::UnsafeJob::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsafe_job\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsafe_job::UnsafeJob as job::ScheduledJob>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler_thread\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler_thread::SchedulerThread::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler_thread\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler_thread::SchedulerThread::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scheduler_thread\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"despawn\"), disambiguator: 0 }]","has_unsafe":false,"name":"scheduler_thread::SchedulerThread::despawn"}
