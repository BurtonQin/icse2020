{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<problem::LpObjective as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<problem::LpObjective as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<problem::LpProblem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"problem::LpProblem::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"variables\"), disambiguator: 0 }]","has_unsafe":false,"name":"problem::LpProblem::variables"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"var\"), disambiguator: 0 }]","has_unsafe":false,"name":"problem::LpProblem::variables::var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"LpFileFormat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_lp\"), disambiguator: 0 }]","has_unsafe":false,"name":"problem::LpFileFormat::write_lp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_lp_file_format\"), disambiguator: 0 }]","has_unsafe":false,"name":"<problem::LpProblem as problem::LpFileFormat>::to_lp_file_format"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_objective_expression\"), disambiguator: 0 }]","has_unsafe":true,"name":"<problem::LpProblem as problem::Problem>::add_objective_expression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_constraints\"), disambiguator: 0 }]","has_unsafe":false,"name":"<problem::LpProblem as problem::Problem>::add_constraints"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":false,"name":"<problem::LpProblem as std::ops::AddAssign<variables::LpConstraint>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"problem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","has_unsafe":true,"name":"<problem::LpProblem as std::ops::AddAssign<T>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<solvers::Status as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<solvers::Status as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GurobiSolver::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"command_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GurobiSolver::command_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GurobiSolver::read_solution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_specific_solution\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GurobiSolver::read_solution::read_specific_solution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::CbcSolver::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"command_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::CbcSolver::command_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::CbcSolver::read_solution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_specific_solution\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::CbcSolver::read_solution::read_specific_solution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GlpkSolver::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"command_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GlpkSolver::command_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GlpkSolver::read_solution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_specific_solution\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GlpkSolver::read_solution::read_specific_solution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"read_solution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_specific_solution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_size\"), disambiguator: 0 }]","has_unsafe":false,"name":"solvers::GlpkSolver::read_solution::read_specific_solution::read_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"<solvers::GurobiSolver as solvers::SolverTrait>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"<solvers::CbcSolver as solvers::SolverTrait>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"solvers\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","has_unsafe":false,"name":"<solvers::GlpkSolver as solvers::SolverTrait>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpBinary as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpBinary as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpBinary as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpBinary as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::LpBinary::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpInteger as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpInteger as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpInteger as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpInteger as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::LpInteger::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpContinuous as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpContinuous as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpContinuous as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpContinuous as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::LpContinuous::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"lower_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpInteger as variables::BoundableLp>::lower_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"upper_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpInteger as variables::BoundableLp>::upper_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"lower_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpContinuous as variables::BoundableLp>::lower_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"upper_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpContinuous as variables::BoundableLp>::upper_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpExpression as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpExpression as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<variables::LpExpression as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<variables::LpExpression as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::LpExpression::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"show\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::show"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_lp_file_format\"), disambiguator: 0 }]","has_unsafe":true,"name":"<variables::LpExpression as problem::LpFileFormat>::to_lp_file_format"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_lp_file_format\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"formalize_signs\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpExpression as problem::LpFileFormat>::to_lp_file_format::formalize_signs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::Constraint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::Constraint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpConstraint as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<variables::LpConstraint as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"generalize\"), disambiguator: 0 }]","has_unsafe":true,"name":"variables::LpConstraint::generalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_constant_and_expr\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::split_constant_and_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"simplify\"), disambiguator: 0 }]","has_unsafe":true,"name":"variables::simplify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"simplify\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"simpl\"), disambiguator: 0 }]","has_unsafe":true,"name":"variables::simplify::simpl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_lp_file_format\"), disambiguator: 0 }]","has_unsafe":true,"name":"<variables::LpConstraint as problem::LpFileFormat>::to_lp_file_format"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"variables\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lp_sum\"), disambiguator: 0 }]","has_unsafe":false,"name":"variables::lp_sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for f32>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for i32>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for variables::LpBinary>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for &'a variables::LpBinary>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for variables::LpInteger>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for &'a variables::LpInteger>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for variables::LpContinuous>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for &'a variables::LpContinuous>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<T> for variables::LpExpression>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<T> for &'a variables::LpExpression>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<T> for variables::LpExpression>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<T> for &'a variables::LpExpression>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<T> for variables::LpExpression>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<T> for &'a variables::LpExpression>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<T> for variables::LpInteger>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<T> for &'a variables::LpInteger>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<T> for variables::LpInteger>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<T> for &'a variables::LpInteger>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<T> for variables::LpInteger>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<T> for &'a variables::LpInteger>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpExpression> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpExpression> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpExpression> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpExpression> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpExpression> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpExpression> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpExpression> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpExpression> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpExpression> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpExpression> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpExpression> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpExpression> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::convert::Into<variables::LpExpression> for &'a variables::LpExpression>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"<U as operations::LpOperations<T>>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"<U as operations::LpOperations<T>>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"equal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<U as operations::LpOperations<T>>::equal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Neg for &'a variables::LpExpression>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Neg for &'a variables::LpInteger>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Neg for &'a variables::LpContinuous>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Neg for &'a variables::LpBinary>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpInteger> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpInteger> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpBinary> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpBinary> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpContinuous> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpContinuous> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpInteger> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpInteger> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpBinary> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpBinary> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpContinuous> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpContinuous> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpInteger> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpInteger> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpBinary> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpBinary> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpContinuous> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpContinuous> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpInteger> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpInteger> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpBinary> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpBinary> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<variables::LpContinuous> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Add<&'a variables::LpContinuous> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpInteger> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpInteger> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpBinary> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpBinary> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<variables::LpContinuous> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Mul<&'a variables::LpContinuous> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpInteger> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpInteger> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpBinary> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpBinary> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<variables::LpContinuous> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"operations\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"operations::<impl std::ops::Sub<&'a variables::LpContinuous> for f32>::sub"}
