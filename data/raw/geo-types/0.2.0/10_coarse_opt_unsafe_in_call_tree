{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::convert::From<(T, T)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::convert::From<[T; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T> as std::convert::From<point::Point<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"coordinate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"x_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"<coordinate::Coordinate<T>>::x_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::convert::From<coordinate::Coordinate<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::convert::From<(T, T)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"x\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_x\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::set_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"y\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::set_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"x_y\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::x_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lng\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::lng"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_lng\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::set_lng"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::lat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_lat\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::set_lat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cross_prod\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T>>::cross_prod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::ops::Neg>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<point::Point<T> as std::convert::From<[T; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::convert::From<IP>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::convert::From<std::vec::Vec<IP>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::iter::FromIterator<IP>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_point::MultiPoint<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dx\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::dx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::dy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"slope\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::slope"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::start_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::end_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"points\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T>>::points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line::Line<T> as std::convert::From<[(T, T); _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::PointsIter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::PointsIter<'a, T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"points_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T>>::points_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_points\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T>>::into_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lines\"), disambiguator: 0 }]","has_unsafe":true,"name":"<line_string::LineString<T>>::lines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"triangles\"), disambiguator: 0 }]","has_unsafe":true,"name":"<line_string::LineString<T>>::triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::convert::From<std::vec::Vec<IC>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::iter::FromIterator<IC>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_string::LineString<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::convert::From<ILS>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::iter::FromIterator<ILS>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_line_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_line_string::MultiLineString<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"previous_vertex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T>>::previous_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::ListSign as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::ListSign as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<polygon::ListSign as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::ListSign as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<polygon::ListSign as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_convex\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polygon::Polygon<T>>::is_convex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::convert::From<IP>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::iter::FromIterator<IP>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"multi_polygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<multi_polygon::MultiPolygon<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::convert::From<point::Point<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::convert::From<line_string::LineString<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::convert::From<polygon::Polygon<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::convert::From<multi_point::MultiPoint<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::convert::From<multi_line_string::MultiLineString<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T> as std::convert::From<multi_polygon::MultiPolygon<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_linestring\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_linestring"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_line\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_polygon\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_multipoint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_multipoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_multilinestring\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_multilinestring"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_multipolygon\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry<T>>::as_multipolygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::convert::From<IG>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::iter::FromIterator<IG>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry_collection::GeometryCollection<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_array\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle<T>>::to_array"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<triangle::Triangle<T> as std::convert::From<[IC; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rect::Rect<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rect::Rect<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rect::Rect<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<rect::Rect<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_string_bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::line_string_bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::line_bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_bounding_rect\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::get_bounding_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_min_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::get_min_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_segment_distance\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::line_segment_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_euclidean_length\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::line_euclidean_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"point_line_string_euclidean_distance\"), disambiguator: 0 }]","has_unsafe":true,"name":"private_utils::point_line_string_euclidean_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"point_line_euclidean_distance\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::point_line_euclidean_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"point_contains_point\"), disambiguator: 0 }]","has_unsafe":false,"name":"private_utils::point_contains_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"private_utils\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"line_string_contains_point\"), disambiguator: 0 }]","has_unsafe":true,"name":"private_utils::line_string_contains_point"}
