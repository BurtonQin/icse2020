{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Version as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Version as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Version as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Version as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Version as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Identifier as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Identifier as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<version::Identifier as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<version::Identifier as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Identifier as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"version::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Version as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"version\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<version::Identifier as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::VersionReq as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::WildcardVersion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::WildcardVersion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::Op as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::Op as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::Op as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::Op as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::Predicate as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<range::Predicate as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<range::Predicate as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"numeric_or_wild\"), disambiguator: 0 }]","has_unsafe":false,"name":"range::numeric_or_wild"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot_numeric_or_wild\"), disambiguator: 0 }]","has_unsafe":false,"name":"range::dot_numeric_or_wild"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"operation\"), disambiguator: 0 }]","has_unsafe":false,"name":"range::operation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"whitespace\"), disambiguator: 0 }]","has_unsafe":false,"name":"range::whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_predicate\"), disambiguator: 0 }]","has_unsafe":false,"name":"range::parse_predicate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":false,"name":"range::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::parse_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_optional_meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::parse_optional_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_alpha_numeric\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::is_alpha_numeric"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"numeric_identifier\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::numeric_identifier"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"letters_numbers_dash_dot\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::letters_numbers_dash_dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<F as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<recognize::OneByte<F> as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<u8 as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<recognize::Inclusive<std::ops::Range<u8>> as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a [u8] as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a str as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<(P1, P2) as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<recognize::Alt<P1, P2> as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<recognize::OneOf<'a, P> as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<recognize::OneOrMore<P> as recognize::Recognize>::p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"recognize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"p\"), disambiguator: 0 }]","has_unsafe":false,"name":"<recognize::ZeroOrMore<P> as recognize::Recognize>::p"}
