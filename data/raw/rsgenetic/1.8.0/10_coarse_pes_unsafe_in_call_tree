{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::Simulator<'a, T, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"builder\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::builder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checked_step\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::checked_step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iterations\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::iterations"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"time\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"population\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::Simulator<'a, T, F> as sim::Simulation<'a, T, F>>::population"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kill_off\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::seq::Simulator<'a, T, F>>::kill_off"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::SimulatorBuilder<'a, T, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_selector\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::SimulatorBuilder<'a, T, F>>::set_selector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_selector\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::SimulatorBuilder<'a, T, F>>::with_selector"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_max_iters\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::SimulatorBuilder<'a, T, F>>::set_max_iters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_max_iters\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::SimulatorBuilder<'a, T, F>>::with_max_iters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_early_stop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::seq::SimulatorBuilder<'a, T, F>>::set_early_stop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_early_stop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::seq::SimulatorBuilder<'a, T, F>>::with_early_stop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"seq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::seq::SimulatorBuilder<'a, T, F> as sim::Builder<sim::seq::Simulator<'a, T, F>>>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::max::MaximizeSelector as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::max::MaximizeSelector as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::select::max::MaximizeSelector::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::max::MaximizeSelector as sim::select::Selector<T, F>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max_unstable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::max_unstable::UnstableMaximizeSelector as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max_unstable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::max_unstable::UnstableMaximizeSelector as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max_unstable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::select::max_unstable::UnstableMaximizeSelector::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"max_unstable\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::select::max_unstable::UnstableMaximizeSelector as sim::select::Selector<T, F>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tournament\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::tournament::TournamentSelector as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tournament\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::tournament::TournamentSelector as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tournament\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::select::tournament::TournamentSelector::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tournament\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_checked\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::select::tournament::TournamentSelector::new_checked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tournament\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::select::tournament::TournamentSelector as sim::select::Selector<T, F>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stochastic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::stochastic::StochasticSelector as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stochastic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::select::stochastic::StochasticSelector as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stochastic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::select::stochastic::StochasticSelector::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"select\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"stochastic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"select\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::select::stochastic::StochasticSelector as sim::select::Selector<T, F>>::select"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i8>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i8>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i16>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i16>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i32>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i32>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i64>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for i64>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u8>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u8>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u16>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u16>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u32>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u32>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u64>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for u64>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for usize>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"abs_diff\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::types::<impl pheno::Fitness for usize>::abs_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::iterlimit::IterLimit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::iterlimit::IterLimit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::iterlimit::IterLimit::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"inc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::iterlimit::IterLimit::inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reached\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::iterlimit::IterLimit::reached"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::iterlimit::IterLimit::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iterlimit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"rsgenetic::sim::iterlimit::IterLimit::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"earlystopper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::earlystopper::EarlyStopper<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"earlystopper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::earlystopper::EarlyStopper<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"earlystopper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::earlystopper::EarlyStopper<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"earlystopper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::earlystopper::EarlyStopper<F>>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"earlystopper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reached\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::earlystopper::EarlyStopper<F>>::reached"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::StepResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::StepResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::StepResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::StepResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::RunResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<sim::RunResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::RunResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sim::RunResult as std::fmt::Debug>::fmt"}
