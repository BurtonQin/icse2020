{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_genesis\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::header::TotalHeader::from_genesis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_parent\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::header::TotalHeader::from_parent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"total_difficulty\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::header::TotalHeader::total_difficulty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parent_hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as blockchain::chain::HeaderHash<bigint::H256>>::parent_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"header_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<header::TotalHeader as blockchain::chain::HeaderHash<bigint::H256>>::header_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::convert::Into<header::Header>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::TotalHeader as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"parent_hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as blockchain::chain::HeaderHash<bigint::H256>>::parent_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"header_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<header::Header as blockchain::chain::HeaderHash<bigint::H256>>::header_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_rlp_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::header::Header::partial_rlp_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::header::Header::partial_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"rlp_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as rlp::Encodable>::rlp_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<header::Header as rlp::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"header\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"rlp_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<header::Header as RlpHash>::rlp_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chain_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::GlobalSignaturePatch as transaction::SignaturePatch>::chain_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::ClassicSignaturePatch as transaction::SignaturePatch>::chain_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"require_low_s\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::FrontierValidationPatch as transaction::ValidationPatch>::require_low_s"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"require_low_s\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::HomesteadValidationPatch as transaction::ValidationPatch>::require_low_s"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::TransactionSignature as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::TransactionSignature as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::TransactionSignature as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::TransactionSignature as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::TransactionSignature as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"standard_v\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::transaction::TransactionSignature::standard_v"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_low_s\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::transaction::TransactionSignature::is_low_s"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::transaction::TransactionSignature::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"chain_id\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::transaction::TransactionSignature::chain_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_recoverable_signature\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::transaction::TransactionSignature::to_recoverable_signature"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"signing_rlp_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::transaction::UnsignedTransaction::signing_rlp_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"signing_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::transaction::UnsignedTransaction::signing_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"sign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::transaction::UnsignedTransaction::sign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"sign_global\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::transaction::UnsignedTransaction::sign_global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::UnsignedTransaction as std::convert::From<transaction::Transaction>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"caller\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::transaction::Transaction::caller"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"address\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::transaction::Transaction::address"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_basic_valid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::transaction::Transaction::is_basic_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"rlp_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as rlp::Encodable>::rlp_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transaction::Transaction as rlp::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transaction\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"rlp_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<transaction::Transaction as RlpHash>::rlp_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"transactions_root\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::block::transactions_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"receipts_root\"), disambiguator: 0 }]","fn_type":"Safe","name":"block::block::receipts_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ommers_hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::block::ommers_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_basic_valid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"block::block::Block::is_basic_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rlp_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as rlp::Encodable>::rlp_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<block::Block as rlp::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rlp_append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as rlp::Encodable>::rlp_append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"receipt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"Safe","name":"<receipt::Receipt as rlp::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_public_key\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bigint::H160 as address::FromKey>::from_public_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"address\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_secret_key\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bigint::H160 as address::FromKey>::from_secret_key"}
