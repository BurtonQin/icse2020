{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"method_matches\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::<impl Mock>::method_matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"path_matches\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::<impl Mock>::path_matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"headers_match\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::<impl Mock>::headers_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"body_matches\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::<impl Mock>::body_matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::<impl std::cmp::PartialEq<request::Request> for &'a mut Mock>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<server::State as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<server::STATE as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<server::STATE as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<server::STATE as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_start\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::try_start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_listening\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::is_listening"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_request\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::handle_request"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"handle_match_mock\"), disambiguator: 0 }]","has_unsafe":true,"name":"server::handle_match_mock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"respond\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::respond"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"respond_with_mock\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::respond_with_mock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"respond_with_mock_not_found\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::respond_with_mock_not_found"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"server\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"respond_with_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"server::respond_with_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ok\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::is_ok"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_err\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::is_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"error\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::find_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_parsed\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::is_parsed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"record_last_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::record_last_header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<request::Request as std::convert::From<&'a mut std::net::TcpStream>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_message_begin\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_message_begin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_url\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_url"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_header_field\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_header_field"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_header_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_header_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_headers_complete\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_headers_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_body\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"on_message_complete\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as http_muncher::ParserHandler>::on_message_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<request::Request as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Response as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Response as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<response::Response as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<response::Response as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Response as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Status as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Status as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<response::Status as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<response::Status as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Status as std::convert::From<usize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Status as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"mock\"), disambiguator: 0 }]","has_unsafe":true,"name":"mock"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","has_unsafe":true,"name":"reset"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":true,"name":"start"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Matcher as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Matcher as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Matcher as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Matcher as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Matcher as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Matcher as std::cmp::PartialEq<std::string::String>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Mock as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Mock as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Mock as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Mock as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"Mock::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"match_header\"), disambiguator: 0 }]","has_unsafe":true,"name":"Mock::match_header"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"match_body\"), disambiguator: 0 }]","has_unsafe":true,"name":"Mock::match_body"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_status\"), disambiguator: 0 }]","has_unsafe":false,"name":"Mock::with_status"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_header\"), disambiguator: 0 }]","has_unsafe":false,"name":"Mock::with_header"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_body\"), disambiguator: 0 }]","has_unsafe":false,"name":"Mock::with_body"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_body_from_file\"), disambiguator: 0 }]","has_unsafe":false,"name":"Mock::with_body_from_file"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expect\"), disambiguator: 0 }]","has_unsafe":false,"name":"Mock::expect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert\"), disambiguator: 0 }]","has_unsafe":true,"name":"Mock::assert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":true,"name":"Mock::create"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_local\"), disambiguator: 0 }]","has_unsafe":false,"name":"Mock::is_local"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Mock as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Mock as std::fmt::Display>::fmt"}
