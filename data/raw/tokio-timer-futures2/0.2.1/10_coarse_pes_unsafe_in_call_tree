{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval::Interval as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::interval::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<interval::Interval as futures_core::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpmc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mpmc::Queue<T, U>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpmc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mpmc::Queue<T, U>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mpmc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mpmc::Queue<T, U>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timer as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Sleep as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timeout<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutStream<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimerError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimerError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<timer::TimerError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimerError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<timer::TimeoutError<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sleep\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Timer::sleep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Timer::timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"timeout_stream\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Timer::timeout_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interval\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Timer::interval"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"interval_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Timer::interval_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timer as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timer as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Sleep::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_expired\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Sleep::is_expired"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remaining\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Sleep::remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"timer\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::Sleep::timer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<timer::Sleep as futures_core::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<timer::Sleep as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timeout<T>>::get_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timeout<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::Timeout<T>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<timer::Timeout<F> as futures_core::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutStream<T>>::get_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutStream<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutStream<T>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll_next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<timer::TimeoutStream<T> as futures_core::Stream>::poll_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimerError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimerError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutError<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutError<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<timer::TimeoutError<T> as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::<impl std::convert::From<timer::TimeoutError<T>> for std::io::Error>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::<impl std::convert::From<timer::TimerError> for std::io::Error>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::<impl std::convert::From<timer::TimerError> for ()>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"timer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::timer::<impl std::convert::From<timer::TimeoutError<T>> for ()>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Slot as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Token as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Token as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Token as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Token as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Token as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Wheel::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"available\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Wheel::available"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"release\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::release"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::set_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Wheel::next_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"move_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::move_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cancel\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::cancel"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_slab\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::wheel::Wheel::remove_slab"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"time_to_ticks\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Wheel::time_to_ticks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ticks_to_wheel_idx\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Wheel::ticks_to_wheel_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Entry::timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"timeout_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::Entry::timeout_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<wheel::Token as std::convert::From<usize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::<impl std::convert::From<wheel::Token> for usize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wheel\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"millis\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel::millis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<worker::Worker as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::worker::Worker::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tolerance\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::worker::Worker::tolerance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::worker::Worker::max_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::worker::Worker::set_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"move_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::worker::Worker::move_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cancel_timeout\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::worker::Worker::cancel_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"run\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::worker::run"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<worker::Tx as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Builder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"wheel\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::wheel"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_tick_duration\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::get_tick_duration"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tick_duration\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::tick_duration"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_num_slots\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::get_num_slots"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"num_slots\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::num_slots"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_initial_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::get_initial_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"initial_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::initial_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_max_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::get_max_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::max_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_max_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::get_max_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::max_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_channel_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::get_channel_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"channel_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::channel_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"thread_name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"tokio_timer_futures2::Builder::thread_name"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"Safe","name":"tokio_timer_futures2::Builder::build"}
