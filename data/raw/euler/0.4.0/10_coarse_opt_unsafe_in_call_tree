{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat2::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"diagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat2::diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"tridiagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat2::tridiagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<mat::DMat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<mat::Mat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<mat::DMat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<mat::Mat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::convert::From<mat::DMat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat2::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"diagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat2::diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"tridiagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat2::tridiagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<mat::Mat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<mat::Mat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<mat::DMat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<mat::Mat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::convert::From<mat::DMat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat3::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat3::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"diagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat3::diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"tridiagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat3::tridiagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<mat::Mat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<mat::DMat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<mat::DMat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<mat::Mat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::convert::From<mat::DMat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat3::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat3::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"diagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat3::diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"tridiagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat3::tridiagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<mat::Mat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<mat::DMat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<mat::Mat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<mat::Mat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::convert::From<mat::DMat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat4::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat4::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"diagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat4::diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"tridiagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::Mat4::tridiagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<mat::Mat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<mat::DMat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<mat::Mat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<mat::DMat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::convert::From<mat::DMat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat4::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat4::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"diagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat4::diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"tridiagonal\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::mat::DMat4::tridiagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<mat::Mat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<mat::DMat2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<mat::Mat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<mat::DMat3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::convert::From<mat::Mat4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat2::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"trace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat2::trace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat2::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat2::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"try_invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat2::try_invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::ops::Mul<vec::Vec2>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mat::Mat2 as std::ops::Mul<vec::Vec2>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::<impl std::ops::Mul<mat::Mat2> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::convert::AsRef<[[f32; _]; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::convert::From<[[f32; _]; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as std::convert::Into<[[f32; _]; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat2 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat2 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat3::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"trace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat3::trace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat3::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat3::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"try_invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat3::try_invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::ops::Mul<vec::Vec3>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mat::Mat3 as std::ops::Mul<vec::Vec3>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::<impl std::ops::Mul<mat::Mat3> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::convert::AsRef<[[f32; _]; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::convert::From<[[f32; _]; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as std::convert::Into<[[f32; _]; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat3 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat3 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat4::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"trace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat4::trace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat4::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat4::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"try_invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::Mat4::try_invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::ops::Mul<vec::Vec4>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mat::Mat4 as std::ops::Mul<vec::Vec4>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::<impl std::ops::Mul<mat::Mat4> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::convert::AsRef<[[f32; _]; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::convert::From<[[f32; _]; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as std::convert::Into<[[f32; _]; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::Mat4 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::Mat4 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat2::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"trace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat2::trace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat2::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat2::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"try_invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat2::try_invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::ops::Mul<vec::DVec2>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mat::DMat2 as std::ops::Mul<vec::DVec2>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::<impl std::ops::Mul<mat::DMat2> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::convert::AsRef<[[f64; _]; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::convert::From<[[f64; _]; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as std::convert::Into<[[f64; _]; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat2 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat2 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat3::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"trace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat3::trace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat3::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat3::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"try_invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat3::try_invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::ops::Mul<vec::DVec3>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mat::DMat3 as std::ops::Mul<vec::DVec3>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::<impl std::ops::Mul<mat::DMat3> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::convert::AsRef<[[f64; _]; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::convert::From<[[f64; _]; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as std::convert::Into<[[f64; _]; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat3 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat3 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"determinant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat4::determinant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"trace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat4::trace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"inverse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat4::inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"transpose\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat4::transpose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"try_invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::DMat4::try_invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::ops::Mul<vec::DVec4>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mat::DMat4 as std::ops::Mul<vec::DVec4>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::mat::<impl std::ops::Mul<mat::DMat4> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::convert::AsRef<[[f64; _]; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::convert::From<[[f64; _]; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as std::convert::Into<[[f64; _]; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mat::DMat4 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mat::DMat4 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::Quat::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::Quat::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"euler\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::quat::Quat::euler"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"axis_angle\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::Quat::axis_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::Quat::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::DQuat::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::DQuat::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"euler\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::quat::DQuat::euler"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"axis_angle\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::DQuat::axis_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::quat::DQuat::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::DQuat as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::DQuat as std::ops::MulAssign>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::DQuat as std::convert::AsRef<[f64; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::convert::From<[f64; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as std::convert::Into<[f64; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::DQuat as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::DQuat as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::DQuat as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::Quat as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::Quat as std::ops::MulAssign>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::Quat as std::convert::AsRef<[f32; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::convert::From<[f32; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as std::convert::Into<[f32; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<quat::Quat as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::Quat as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quat\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<quat::Quat as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::trs::Trs::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::trs::Trs::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"matrix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::trs::Trs::matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::Trs as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<trs::Trs as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<trs::Trs as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::trs::DTrs::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"identity\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::trs::DTrs::identity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"matrix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::trs::DTrs::matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<trs::DTrs as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<trs::DTrs as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<trs::DTrs as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec2::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::convert::From<vec::DVec2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec3::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec3::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"xy\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec3::xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::convert::From<vec::DVec3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::convert::From<(T, f32)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec4::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec4::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"xy\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec4::xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"xyz\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::Vec4::xyz"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::convert::From<vec::DVec4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::convert::From<(T, f32, f32)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::convert::From<(T, f32)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec2::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec2::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::convert::From<vec::Vec2>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec3::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec3::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"xy\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec3::xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::convert::From<vec::Vec3>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::convert::From<(T, f64)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec4::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec4::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"xy\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec4::xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"xyz\"), disambiguator: 0 }]","fn_type":"Safe","name":"euler::vec::DVec4::xyz"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::convert::From<vec::Vec4>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::convert::From<(T, f64, f64)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::convert::From<(T, f64)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec3::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec3::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec2::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec2::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"squared_length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec2::squared_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec2::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::<impl std::ops::Mul<vec::Vec2> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::MulAssign<f32>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::Div<f32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::ops::DivAssign<f32>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::convert::AsRef<[f32; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::convert::From<[f32; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as std::convert::Into<[f32; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec2 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec2 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec3::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec3::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"squared_length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec3::squared_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec3::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::<impl std::ops::Mul<vec::Vec3> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::MulAssign<f32>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::Div<f32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::ops::DivAssign<f32>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::convert::AsRef<[f32; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::convert::From<[f32; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as std::convert::Into<[f32; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec3 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec3 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec4::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec4::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"squared_length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec4::squared_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec4::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::<impl std::ops::Mul<vec::Vec4> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::MulAssign<f32>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::Div<f32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::ops::DivAssign<f32>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::convert::AsRef<[f32; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::convert::From<[f32; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as std::convert::Into<[f32; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::Vec4 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::Vec4 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec2::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec2::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"squared_length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec2::squared_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec2::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::<impl std::ops::Mul<vec::DVec2> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::MulAssign<f64>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::Div<f64>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::ops::DivAssign<f64>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::convert::AsRef<[f64; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::convert::From<[f64; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as std::convert::Into<[f64; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec2 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec2 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec3::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec3::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"squared_length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec3::squared_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec3::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::<impl std::ops::Mul<vec::DVec3> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::MulAssign<f64>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::Div<f64>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::ops::DivAssign<f64>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::convert::AsRef<[f64; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::convert::From<[f64; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as std::convert::Into<[f64; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec3 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec3 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec4::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec4::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"squared_length\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec4::squared_length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec4::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::<impl std::ops::Mul<vec::DVec4> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::MulAssign<f64>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::Div<f64>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::ops::DivAssign<f64>>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::convert::AsRef<[f64; _]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::convert::From<[f64; _]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as std::convert::Into<[f64; _]>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"default_epsilon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as approx::ApproxEq>::default_epsilon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_relative\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as approx::ApproxEq>::default_max_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"default_max_ulps\"), disambiguator: 0 }]","fn_type":"Safe","name":"<vec::DVec4 as approx::ApproxEq>::default_max_ulps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"relative_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as approx::ApproxEq>::relative_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"ulps_eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<vec::DVec4 as approx::ApproxEq>::ulps_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"angle\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec2::angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"angle\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::Vec3::angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"angle\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec2::angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"angle\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"euler::vec::DVec3::angle"}
