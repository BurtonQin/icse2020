{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::BufferError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_BufferError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::buffer::_DERIVE_failure_Fail_FOR_BufferError::<impl failure::Fail for buffer::BufferError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_BufferError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::buffer::_DERIVE_failure_Fail_FOR_BufferError::<impl failure::Fail for buffer::BufferError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_BufferError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::buffer::_DERIVE_failure_core_fmt_Display_FOR_BufferError::<impl std::fmt::Display for buffer::BufferError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::MeshBuffer<N, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw_buffers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<buffer::MeshBuffer<N, V>>::from_raw_buffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<buffer::MeshBuffer<N, V>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_index_slice\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::MeshBuffer<N, V>>::as_index_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_vertex_slice\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::MeshBuffer<N, V>>::as_vertex_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::MeshBuffer<N, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_indexer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<buffer::MeshBuffer<N, V> as primitive::index::FromIndexer<P, P>>::from_indexer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<buffer::MeshBuffer<N, V> as std::iter::FromIterator<P>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as geometry::convert::IntoGeometry<U>>::into_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as geometry::convert::FromGeometry<T>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as geometry::convert::FromGeometry<(U, U)>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as geometry::convert::FromGeometry<(U, U, U)>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_interior_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as geometry::convert::IntoInteriorGeometry<U>>::into_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::FiniteConstraint<T>>, nalgebra::U3>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<T, nalgebra::U3>> for nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::FiniteConstraint<T>>, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::NotNanConstraint<T>>, nalgebra::U3>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<T, nalgebra::U3>> for nalgebra::Point<decorum::proxy::ConstrainedFloat<T, decorum::constraint::NotNanConstraint<T>>, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<decorum::proxy::ConstrainedFloat<T, ()>, nalgebra::U3>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<nalgebra::Point<T, nalgebra::U3>> for nalgebra::Point<decorum::proxy::ConstrainedFloat<T, ()>, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U)> for nalgebra::Point<T, nalgebra::U2>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U, U)> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Duplet<U>> for nalgebra::Point<T, nalgebra::U2>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Triplet<U>> for nalgebra::Point<T, nalgebra::U3>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U)> for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<(U, U, U)> for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Duplet<U>> for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::FromGeometry<geometry::Triplet<U>> for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::from_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_position\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U2>>::as_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_position_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U2>>::as_position_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_position\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U3>>::as_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_position_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::geometry::convert::feature_geometry_nalgebra::<impl geometry::convert::AsPosition for nalgebra::Point<T, nalgebra::U3>>::as_position_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Interpolate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::Interpolate::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"project\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as geometry::ops::Project>::project"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as geometry::ops::Interpolate>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as geometry::ops::Interpolate>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Normalize for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Normalize for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Average for nalgebra::Point<T, nalgebra::U2>>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"average\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Average for nalgebra::Point<T, nalgebra::U3>>::average"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Point<T, nalgebra::U2>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Point<T, nalgebra::U3>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Interpolate for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Dot for nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Dot for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cross\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::ops::feature_geometry_nalgebra::<impl geometry::ops::Cross for nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>>::cross"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geometry::Duplet<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Duplet<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geometry::Triplet<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geometry::Triplet<T> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lerp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::lerp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Point<U, nalgebra::U2>> for geometry::Duplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Matrix<U, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<U, nalgebra::U2>>::Buffer>> for geometry::Duplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Point<T, nalgebra::U2>> for geometry::Duplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Matrix<T, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U2>>::Buffer>> for geometry::Duplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Point<U, nalgebra::U3>> for geometry::Triplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::From<nalgebra::Matrix<U, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<U, nalgebra::U3>>::Buffer>> for geometry::Triplet<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Point<T, nalgebra::U3>> for geometry::Triplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"feature_geometry_nalgebra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::geometry::feature_geometry_nalgebra::<impl std::convert::Into<nalgebra::Matrix<T, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<T, nalgebra::U3>>::Buffer>> for geometry::Triplet<U>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::container::core::Core>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::container::core::Core<V, E, F>>::into_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F> as graph::storage::convert::AsStorage<graph::topology::Vertex<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F> as graph::storage::convert::AsStorage<graph::topology::Edge<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F> as graph::storage::convert::AsStorage<graph::topology::Face<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F> as graph::storage::convert::AsStorageMut<graph::topology::Vertex<G>>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F> as graph::storage::convert::AsStorageMut<graph::topology::Edge<G>>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::container::core::Core<V, E, F> as graph::storage::convert::AsStorageMut<graph::topology::Face<G>>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::container::core::Core<(), E, F> as graph::container::core::Bind<graph::topology::Vertex<G>, V>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::container::core::Core<V, (), F> as graph::container::core::Bind<graph::topology::Edge<G>, E>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::container::core::Core<V, E> as graph::container::core::Bind<graph::topology::Face<G>, F>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reborrow\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a T as graph::container::Reborrow>::reborrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"reborrow\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a mut T as graph::container::Reborrow>::reborrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"reborrow_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a mut T as graph::container::ReborrowMut>::reborrow_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as graph::geometry::FaceNormal>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"centroid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as graph::geometry::FaceCentroid>::centroid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as graph::geometry::EdgeMidpoint>::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"lateral\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as graph::geometry::EdgeLateral>::lateral"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_raw_buffers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::from_raw_buffers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::vertex_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::orphan_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edge_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::edge_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edge_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::edge_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::orphan_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"face_count\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::face_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"face_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::face_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::orphan_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_vertex_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_vertex_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_mesh_buffer_by_face_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G>>::to_mesh_buffer_by_face_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as graph::storage::convert::AsStorage<graph::topology::Vertex<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as graph::storage::convert::AsStorage<graph::topology::Edge<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as graph::storage::convert::AsStorage<graph::topology::Face<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as graph::storage::convert::AsStorageMut<graph::topology::Vertex<G>>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as graph::storage::convert::AsStorageMut<graph::topology::Edge<G>>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as graph::storage::convert::AsStorageMut<graph::topology::Face<G>>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mesh::Mesh<G> as std::convert::From<graph::container::core::Core<graph::storage::Storage<graph::topology::Vertex<G>>, graph::storage::Storage<graph::topology::Edge<G>>, graph::storage::Storage<graph::topology::Face<G>>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mesh::Mesh<G> as std::convert::Into<graph::container::core::Core<graph::storage::Storage<graph::topology::Vertex<G>>, graph::storage::Storage<graph::topology::Edge<G>>, graph::storage::Storage<graph::topology::Face<G>>>>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as geometry::convert::FromInteriorGeometry<graph::mesh::Mesh<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_indexer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as primitive::index::FromIndexer<P, P>>::from_indexer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Mesh<G> as std::iter::FromIterator<P>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mesh::Iter<'a, I, T, G, Output> as std::convert::From<(I, &'a graph::mesh::Mesh<G>)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::Iter<'a, I, T, G, Output> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mesh::IterMut<'a, I, T, Output> as std::convert::From<I>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mesh::IterMut<'a, I, T, Output> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_edge_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::edge::EdgeMutation<G>>::as_edge_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::insert_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_or_insert_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::get_or_insert_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_or_insert_composite_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::get_or_insert_composite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::remove_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_composite_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::remove_composite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_neighboring_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::connect_neighboring_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::disconnect_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_previous_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::disconnect_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_edge_to_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::connect_edge_to_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_edge_from_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeMutation<G>>::disconnect_edge_from_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::edge::EdgeMutation<G> as graph::storage::convert::AsStorage<graph::topology::Edge<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mutate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::edge::EdgeMutation<G> as graph::mutation::Mutate>::mutate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::edge::EdgeMutation<G> as graph::mutation::Mutate>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::edge::EdgeMutation<G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::edge::EdgeMutation<G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeSplitCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeJoinCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::edge::EdgeExtrudeCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::edge::split_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_with_cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_at_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::edge::split_with_cache::split_at_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::edge::join_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extrude_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::edge::extrude_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_face_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::face::FaceMutation<G>>::as_face_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::insert_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_face_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::insert_face_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_face_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::remove_face_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_face_to_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::connect_face_to_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_face_interior\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::connect_face_interior"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_face_interior\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::disconnect_face_interior"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_face_exterior\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceMutation<G>>::connect_face_exterior"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::face::FaceMutation<G> as graph::storage::convert::AsStorage<graph::topology::Face<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mutate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::face::FaceMutation<G> as graph::mutation::Mutate>::mutate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::face::FaceMutation<G> as graph::mutation::Mutate>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::face::FaceMutation<G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::face::FaceMutation<G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceInsertCache<'a, G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceRemoveCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceTriangulateCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceJoinCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"snapshot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::face::FaceExtrudeCache<G>>::snapshot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::face::triangulate_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::face::join_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extrude_with_cache\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::face::extrude_with_cache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"region\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::region::Region<'a, M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"region\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::region::Region<'a, M, G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"region\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::region::Region<'a, M, G>>::from_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"region\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::region::Region<'a, M, G>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"region\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"face\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::region::Region<'a, M, G>>::face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"region\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_connectivity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::region::Region<'a, M, G>>::reachable_connectivity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_vertex_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::vertex::VertexMutation<G>>::as_vertex_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::vertex::VertexMutation<G>>::insert_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect_outgoing_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::vertex::VertexMutation<G>>::connect_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_outgoing_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::vertex::VertexMutation<G>>::disconnect_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::vertex::VertexMutation<G> as graph::storage::convert::AsStorage<graph::topology::Vertex<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::vertex::VertexMutation<G> as graph::mutation::Mutate>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mutate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::vertex::VertexMutation<G> as graph::mutation::Mutate>::mutate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Mutate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"commit_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::mutation::Mutate::commit_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Mutate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abort\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::mutation::Mutate::abort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G>>::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Replace<'a, M, N, G>>::drain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drain_and_commit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G>>::drain_and_commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"drain_and_abort\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G>>::drain_and_abort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Replace<'a, M, graph::mutation::Mutation<M, G>, G> as std::convert::AsRef<graph::mutation::Mutation<M, G>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Replace<'a, M, graph::mutation::Mutation<M, G>, G> as std::convert::AsMut<graph::mutation::Mutation<M, G>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Replace<'a, M, N, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Replace<'a, M, N, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mutate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G> as graph::mutation::Mutate>::mutate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G> as graph::mutation::Mutate>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"abort\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Replace<'a, M, N, G> as graph::mutation::Mutate>::abort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Mutation<M, G>>::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as std::convert::AsRef<graph::mutation::Mutation<M, G>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as std::convert::AsMut<graph::mutation::Mutation<M, G>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as graph::storage::convert::AsStorage<graph::topology::Edge<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as graph::storage::convert::AsStorage<graph::topology::Face<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as graph::storage::convert::AsStorage<graph::topology::Vertex<G>>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"mutate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::mutation::Mutation<M, G> as graph::mutation::Mutate>::mutate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mutation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"commit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::mutation::Mutation<M, G> as graph::mutation::Mutate>::commit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a U as graph::storage::convert::AsStorage<T>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut U as graph::storage::convert::AsStorage<T>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut U as graph::storage::convert::AsStorageMut<T>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_next_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as graph::storage::KeySequence>::into_next_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_next_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as graph::storage::KeySequence>::into_next_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::VertexKey as graph::storage::OpaqueKey>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_opposite_key\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::storage::EdgeKey::to_opposite_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_vertex_keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::storage::EdgeKey::to_vertex_keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as graph::storage::OpaqueKey>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::convert::From<(u64, u64)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::EdgeKey as std::convert::From<(graph::storage::VertexKey, graph::storage::VertexKey)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::FaceKey as graph::storage::OpaqueKey>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Key as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Key as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Key as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Key as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Key as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Key as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Key as std::convert::From<graph::storage::VertexKey>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Key as std::convert::From<graph::storage::EdgeKey>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Key as std::convert::From<graph::storage::FaceKey>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"map_values_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::map_values_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Storage<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Storage<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"iter_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Storage<T>>::iter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"keys\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Storage<T>>::keys"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"contains_key\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::contains_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"insert_with_key\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::insert_with_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::storage::Storage<T>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Storage<T> as graph::storage::convert::AsStorage<T>>::as_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"storage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"as_storage_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::storage::Storage<T> as graph::storage::convert::AsStorageMut<T>>::as_storage_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::topology::Vertex<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Vertex<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Vertex<G> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Vertex<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::topology::Vertex<G> as geometry::convert::FromInteriorGeometry<graph::topology::Vertex<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::topology::Edge<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Edge<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Edge<G> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Edge<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::topology::Edge<G> as geometry::convert::FromInteriorGeometry<graph::topology::Edge<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::topology::Face<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Face<G> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Face<G> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::topology::Face<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_interior_geometry\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::topology::Face<G> as geometry::convert::FromInteriorGeometry<graph::topology::Face<H>>>::from_interior_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"convert\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_view\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as graph::view::convert::IntoView<U>>::into_view"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_orphan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<&'a mut M, G>>::into_orphan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeView<&'a mut M, G>>::into_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeView<M, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_key_topology\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeView<M, G>>::to_key_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_boundary_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::is_boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::from_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage_unchecked\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeView<M, G>>::from_keyed_storage_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_keyed_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeView<M, G>>::into_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"interior_reborrow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::interior_reborrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"interior_reborrow_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::interior_reborrow_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_boundary_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_opposite_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_previous_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_boundary_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_opposite_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_previous_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_boundary_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_opposite_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_previous_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"boundary_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::boundary_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"opposite_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::opposite_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"previous_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::previous_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_source_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_source_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_destination_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_destination_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_source_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_source_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_destination_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_destination_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_source_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_source_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_destination_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_destination_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"source_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::source_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"destination_vertex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::destination_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_reachable_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::into_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"face\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::reachable_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<&'a mut M, G>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<&'a mut M, G>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"lateral\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G>>::lateral"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"extrude\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<&'a mut M, G>>::extrude"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::EdgeView<M, G> as graph::view::convert::FromKeyedSource<(graph::storage::EdgeKey, M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::OrphanEdgeView<'a, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::OrphanEdgeView<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::OrphanEdgeView<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::OrphanEdgeView<'a, G> as graph::view::convert::FromKeyedSource<(graph::storage::EdgeKey, &'a mut M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::OrphanEdgeView<'a, G> as graph::view::convert::FromKeyedSource<(graph::storage::EdgeKey, &'a mut graph::topology::Edge<G>)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeKeyTopology as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::edge::EdgeKeyTopology as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::view::edge::EdgeKeyTopology::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::view::edge::EdgeKeyTopology::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::view::edge::EdgeKeyTopology::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::VertexCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::VertexCirculator<M, G> as graph::view::convert::FromKeyedSource<(arrayvec::ArrayVec<[graph::storage::VertexKey; _]>, M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::VertexCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::VertexCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::FaceCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::FaceCirculator<M, G> as graph::view::convert::FromKeyedSource<(arrayvec::ArrayVec<[graph::storage::FaceKey; _]>, M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::FaceCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"edge\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::edge::FaceCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_orphan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<&'a mut M, G>>::into_orphan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<&'a mut M, G>>::into_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceView<M, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::from_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage_unchecked\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceView<M, G>>::from_keyed_storage_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_keyed_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceView<M, G>>::into_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"interior_reborrow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::interior_reborrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"interior_reborrow_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::interior_reborrow_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::into_reachable_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_interior_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_interior_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_neighboring_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_neighboring_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_key_topology\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::to_key_topology"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"arity\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::arity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mutuals\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::mutuals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::into_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"interior_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::interior_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"neighboring_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::neighboring_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_interior_orphan_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_interior_orphan_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_neighboring_orphan_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_neighboring_orphan_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"interior_orphan_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::interior_orphan_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"neighboring_orphan_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::neighboring_orphan_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_orphan_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::reachable_orphan_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"orphan_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::orphan_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<&'a mut M, G>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"centroid\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::centroid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<&'a mut M, G>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"normal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G>>::normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"extrude\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<&'a mut M, G>>::extrude"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceView<M, G> as graph::view::convert::FromKeyedSource<(graph::storage::FaceKey, M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::OrphanFaceView<'a, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::OrphanFaceView<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::OrphanFaceView<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::OrphanFaceView<'a, G> as graph::view::convert::FromKeyedSource<(graph::storage::FaceKey, &'a mut M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::OrphanFaceView<'a, G> as graph::view::convert::FromKeyedSource<(graph::storage::FaceKey, &'a mut graph::topology::Face<G>)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceKeyTopology as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceKeyTopology as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::graph::view::face::FaceKeyTopology::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::view::face::FaceKeyTopology::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"interior_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::view::face::FaceKeyTopology::interior_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::VertexCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::VertexCirculator<M, G> as std::convert::From<graph::view::face::EdgeCirculator<M, G>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::VertexCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::VertexCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::EdgeCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::EdgeCirculator<M, G> as std::convert::From<graph::view::face::FaceView<M, G>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::EdgeCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::EdgeCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceCirculator<M, G> as std::convert::From<graph::view::face::EdgeCirculator<M, G>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::face::FaceCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"face\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::face::FaceCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::bind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_orphan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<&'a mut M, G>>::into_orphan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<&'a mut M, G>>::into_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::VertexView<M, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::from_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_storage_unchecked\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::VertexView<M, G>>::from_keyed_storage_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_keyed_storage\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::VertexView<M, G>>::into_keyed_storage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"interior_reborrow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::interior_reborrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"interior_reborrow_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::interior_reborrow_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_reachable_outgoing_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::into_reachable_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_outgoing_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::reachable_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_incoming_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::reachable_incoming_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_outgoing_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::into_outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"outgoing_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::outgoing_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"incoming_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::incoming_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_neighboring_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::reachable_neighboring_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"neighboring_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::neighboring_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_outgoing_orphan_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::reachable_outgoing_orphan_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_incoming_orphan_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::reachable_incoming_orphan_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"outgoing_orphan_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::outgoing_orphan_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"incoming_orphan_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::incoming_orphan_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"reachable_neighboring_orphan_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::reachable_neighboring_orphan_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"neighboring_orphan_faces\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G>>::neighboring_orphan_faces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::VertexView<M, G> as graph::view::convert::FromKeyedSource<(graph::storage::VertexKey, M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::OrphanVertexView<'a, G>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::OrphanVertexView<'a, G> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::OrphanVertexView<'a, G> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::OrphanVertexView<'a, G> as graph::view::convert::FromKeyedSource<(graph::storage::VertexKey, &'a mut M)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from_keyed_source\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::OrphanVertexView<'a, G> as graph::view::convert::FromKeyedSource<(graph::storage::VertexKey, &'a mut graph::topology::Vertex<G>)>>::from_keyed_source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::EdgeCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::EdgeCirculator<M, G> as std::convert::From<graph::view::vertex::VertexView<M, G>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::EdgeCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::EdgeCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::FaceCirculator<M, G>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::view::vertex::FaceCirculator<M, G> as std::convert::From<graph::view::vertex::EdgeCirculator<M, G>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::FaceCirculator<&'a M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"view\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::view::vertex::FaceCirculator<&'a mut M, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::GraphError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_GraphError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::_DERIVE_failure_Fail_FOR_GraphError::<impl failure::Fail for graph::GraphError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_GraphError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::_DERIVE_failure_Fail_FOR_GraphError::<impl failure::Fail for graph::GraphError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_GraphError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::graph::_DERIVE_failure_core_fmt_Display_FOR_GraphError::<impl std::fmt::Display for graph::GraphError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or_if_conflict\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<T, failure::Error> as graph::ResultExt<T>>::or_if_conflict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"or_if_conflict\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<T, graph::GraphError> as graph::ResultExt<T>>::or_if_conflict"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"perimeter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<I as graph::IteratorExt>::perimeter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Perimeter<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Perimeter<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Plane as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Plane as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::cube::Plane as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::cube::Plane as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Bounds as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_radius\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::cube::Bounds::unit_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_width\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::cube::Bounds::unit_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::cube::Bounds as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Cube as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::primitive::cube::Cube::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_plane\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::primitive::cube::Cube::polygons_with_plane"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_plane_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::cube::Cube::polygon_with_plane_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Cube as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Cube as primitive::generate::VertexGenerator>::vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Cube as primitive::generate::PolygonGenerator>::polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_position_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Cube as primitive::generate::PositionVertexGenerator>::vertex_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_position_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::cube::Cube as primitive::generate::PositionPolygonGenerator>::polygon_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_index_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::cube::Cube as primitive::generate::IndexPolygonGenerator>::polygon_with_index_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_texture_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::cube::Cube as primitive::generate::TexturePolygonGenerator>::polygon_with_texture_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::decompose::Decompose<I, P, Q, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::decompose::Decompose<I, P, P, R>>::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::decompose::Decompose<I, P, Q, R> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Edge<T> as primitive::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as primitive::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as primitive::decompose::IntoVertices>::into_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Edge<T> as primitive::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as primitive::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as primitive::decompose::IntoEdges>::into_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"into_triangles\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as primitive::decompose::IntoTriangles>::into_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"into_triangles\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::decompose::IntoTriangles>::into_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"into_triangles\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as primitive::decompose::IntoTriangles>::into_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"into_subdivisions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as primitive::decompose::IntoSubdivisions>::into_subdivisions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into_subdivisions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::decompose::IntoSubdivisions>::into_subdivisions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"into_tetrahedrons\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::decompose::IntoTetrahedrons>::into_tetrahedrons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"into_subdivisions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as primitive::decompose::IntoSubdivisions>::into_subdivisions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as primitive::decompose::Vertices<P>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as primitive::decompose::Edges<P>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as primitive::decompose::Triangulate<P>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as primitive::decompose::Subdivide<P>>::subdivide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"tetrahedrons\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as primitive::decompose::Tetrahedrons<T>>::tetrahedrons"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"decompose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::decompose::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::generate::Generate<'a, G, S, P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::generate::Generate<'a, G, S, P> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"VerticesWithPosition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_with_position\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::generate::VerticesWithPosition::vertices_with_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertices_with_position_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as primitive::generate::VerticesWithPosition<P>>::vertices_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PolygonsWithPosition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_position\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::generate::PolygonsWithPosition::polygons_with_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_position_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as primitive::generate::PolygonsWithPosition<P>>::polygons_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PolygonsWithIndex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::generate::PolygonsWithIndex::polygons_with_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_index_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as primitive::generate::PolygonsWithIndex<P>>::polygons_with_index_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PolygonsWithTexture\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_texture\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::generate::PolygonsWithTexture::polygons_with_texture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"generate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"polygons_with_texture_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<G as primitive::generate::PolygonsWithTexture<P>>::polygons_with_texture_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::index::HashIndexer<T, K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::index::HashIndexer<T, K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::index::HashIndexer<T, K> as primitive::index::Indexer<T, K>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::index::LruIndexer<T, K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::index::LruIndexer<T, K>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::index::LruIndexer<T, K>>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::index::LruIndexer<T, K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::index::LruIndexer<T, K> as primitive::index::Indexer<T, K>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IndexVertices\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::index::IndexVertices::index_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"index_vertices_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<I as primitive::index::IndexVertices<P>>::index_vertices_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FlatIndexVertices\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flat_index_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::index::FlatIndexVertices::flat_index_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"flat_index_vertices_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<I as primitive::index::FlatIndexVertices<P>>::flat_index_vertices_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"index\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"collect_with_indexer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<I as primitive::index::CollectWithIndexer<P, Q>>::collect_with_indexer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::sphere::Bounds as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_radius\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::sphere::Bounds::unit_radius"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit_width\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::sphere::Bounds::unit_width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::sphere::Bounds as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::sphere::UvSphere as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::primitive::sphere::UvSphere::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_position_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::sphere::UvSphere::vertex_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_index_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::primitive::sphere::UvSphere::vertex_with_index_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"map_polygon_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"plexus::primitive::sphere::UvSphere::map_polygon_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::sphere::UvSphere as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::sphere::UvSphere as primitive::generate::VertexGenerator>::vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::sphere::UvSphere as primitive::generate::PolygonGenerator>::polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_with_position_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::sphere::UvSphere as primitive::generate::PositionVertexGenerator>::vertex_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_position_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::sphere::UvSphere as primitive::generate::PositionPolygonGenerator>::polygon_with_position_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_with_index_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::sphere::UvSphere as primitive::generate::IndexPolygonGenerator>::polygon_with_index_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as primitive::topology::MapVertices<T, U>>::map_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Map<I, T, U, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Map<I, T, U, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Edge<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"converged\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Edge<T>>::converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Edge<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Edge<A>, primitive::topology::Edge<B>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Edge<A>, primitive::topology::Edge<B>, primitive::topology::Edge<C>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Edge<A>, primitive::topology::Edge<B>, primitive::topology::Edge<C>, primitive::topology::Edge<D>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Edge<T> as primitive::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Edge<T> as primitive::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Triangle<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"converged\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T>>::converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Triangle<A>, primitive::topology::Triangle<B>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Triangle<A>, primitive::topology::Triangle<B>, primitive::topology::Triangle<C>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Triangle<A>, primitive::topology::Triangle<B>, primitive::topology::Triangle<C>, primitive::topology::Triangle<D>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as primitive::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Triangle<T> as primitive::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Quad<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"converged\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T>>::converged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Quad<A>, primitive::topology::Quad<B>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Quad<A>, primitive::topology::Quad<B>, primitive::topology::Quad<C>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Quad<A>, primitive::topology::Quad<B>, primitive::topology::Quad<C>, primitive::topology::Quad<D>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Quad<T> as primitive::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Polygon<T> as std::convert::From<primitive::topology::Triangle<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<primitive::topology::Polygon<T> as std::convert::From<primitive::topology::Quad<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Polygon<A>, primitive::topology::Polygon<B>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Polygon<A>, primitive::topology::Polygon<B>, primitive::topology::Polygon<C>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(primitive::topology::Polygon<A>, primitive::topology::Polygon<B>, primitive::topology::Polygon<C>, primitive::topology::Polygon<D>) as primitive::topology::ZipVerticesInto>::zip_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertices_into\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as primitive::topology::MapVerticesInto<U>>::map_vertices_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<primitive::topology::Polygon<T> as primitive::topology::Rotate>::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"umod\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::topology::umod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"topology\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zip_vertices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"plexus::primitive::topology::zip_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"half\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<T as primitive::Half>::half"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"option\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bool as BoolExt>::option"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"some\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bool as BoolExt>::some"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"some_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bool as BoolExt>::some_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"and_if\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::option::Option<T> as OptionExt<T>>::and_if"}
