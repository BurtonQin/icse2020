{"def_path":"[DisambiguatedDefPathData { data: Module(\"compose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compose::Composed<X, Y, Z, F, G> as std::ops::FnOnce<(X,)>>::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compose::Composed<X, Y, Z, F, G> as std::ops::FnMut<(X,)>>::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compose::Composed<X, Y, Z, F, G> as std::ops::Fn<(X,)>>::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compose\"), disambiguator: 0 }]","fn_type":"Safe","name":"transducers::compose::compose"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<compose::ComposedTransducer<R, T, U, V, F, G> as Transducer<'t, R, T, V>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"compose\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compose_trans\"), disambiguator: 0 }]","fn_type":"Safe","name":"transducers::compose::compose_trans"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::IdentityStep<'t, R, T> as std::ops::FnOnce<(R, T)>>::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::IdentityStep<'t, R, T> as std::ops::FnMut<(R, T)>>::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::IdentityStep<'t, R, T> as std::ops::Fn<(R, T)>>::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::Identity as Transducer<'t, R, T, T>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"transducers::transform::Identity::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::MappingStep<'t, R, T, F> as std::ops::FnOnce<(R, U)>>::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::MappingStep<'t, R, T, F> as std::ops::FnMut<(R, U)>>::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::MappingStep<'t, R, T, F> as std::ops::Fn<(R, U)>>::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::Mapping<'t, T, U, F> as Transducer<'t, R, T, U>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::Mapping<'f, T, U, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::FilteringStep<'t, R, T, P> as std::ops::FnOnce<(R, T)>>::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::FilteringStep<'t, R, T, P> as std::ops::FnMut<(R, T)>>::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::FilteringStep<'t, R, T, P> as std::ops::Fn<(R, T)>>::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::Filtering<'p, T, P> as Transducer<'p, R, T, T>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"transform\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<transform::Filtering<'p, T, P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"reduce_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"transducers::reduce_iter"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"transduce\"), disambiguator: 0 }]","fn_type":"Safe","name":"transducers::transduce"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"transduce\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","fn_type":"Safe","name":"transducers::transduce::append"}
