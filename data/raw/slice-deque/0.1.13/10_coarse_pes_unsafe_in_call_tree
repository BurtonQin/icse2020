{"def_path":"[DisambiguatedDefPathData { data: Module(\"macros\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"macros::TinyAsciiString::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"macros\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<macros::TinyAsciiString as std::fmt::Write>::write_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"no_required_allocation_units\"), disambiguator: 0 }]","has_unsafe":true,"name":"mirrored::buffer::no_required_allocation_units"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mirrored::buffer::Buffer<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mirrored::buffer::Buffer<T>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mirrored::buffer::Buffer<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size_in_bytes\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mirrored::buffer::Buffer<T>>::size_in_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"uninitialized\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mirrored::buffer::Buffer<T>>::uninitialized"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mirrored::buffer::Buffer<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mirrored::buffer::Buffer<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mirrored::buffer::Buffer<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"linux\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"memfd_create\"), disambiguator: 0 }]","has_unsafe":true,"name":"mirrored::linux::memfd_create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"linux\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"allocation_granularity\"), disambiguator: 0 }]","has_unsafe":true,"name":"mirrored::linux::allocation_granularity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"linux\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"errno\"), disambiguator: 0 }]","has_unsafe":true,"name":"mirrored::linux::errno"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"linux\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"allocate_mirrored\"), disambiguator: 0 }]","has_unsafe":true,"name":"mirrored::linux::allocate_mirrored"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mirrored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"linux\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"print_error\"), disambiguator: 0 }]","has_unsafe":false,"name":"mirrored::linux::print_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nonnull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nonnull::NonNull<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nonnull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_ptr\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nonnull::NonNull<T>>::as_ptr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nonnull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nonnull::NonNull<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nonnull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nonnull::NonNull<T> as std::fmt::Pointer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nonnull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nonnull::NonNull<T> as std::convert::From<&'a mut T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"nonnull\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<nonnull::NonNull<T> as std::convert::From<&'a T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"offset_to_\"), disambiguator: 0 }]","has_unsafe":false,"name":"<*const T as OffsetTo>::offset_to_"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"offset_to_\"), disambiguator: 0 }]","has_unsafe":false,"name":"<*mut T as OffsetToMut>::offset_to_"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"tail_upper_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::tail_upper_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"head_upper_bound\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::head_upper_bound"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"head\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::head"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_full\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SliceDeque<T>>::is_full"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::as_mut_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_slices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::as_slices"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_slices\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::as_mut_slices"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_capacity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::reserve_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_exact\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::reserve_exact"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"grow_policy\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::grow_policy"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"grow\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::grow"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"front\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::front"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"front_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::front_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"back_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::back_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_front\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::push_front"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::push_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_front\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::pop_front"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::pop_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shrink_to_fit\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::shrink_to_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"truncate_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::truncate_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"truncate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"truncate_front\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::truncate_front"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::swap_remove_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"swap_remove_front\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::swap_remove_front"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"split_off\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::split_off"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dedup_by_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::dedup_by_key"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"dedup_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::dedup_by"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"extend_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::extend_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"extend_desugared\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::extend_desugared"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drain_filter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::drain_filter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"extend_from_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::extend_from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"resize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::resize"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"resize_default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::resize_default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"dedup\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::dedup"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remove_item\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T>>::remove_item"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::clone::Clone>::clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::convert::From<&'a [T]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::convert::From<&'a mut [T]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<SliceDeque<B>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b mut [B]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<std::vec::Vec<B>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<[B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<A> as std::cmp::PartialEq<&'b [B; _]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::cmp::PartialOrd<&'a [T]>>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Drain<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Drain<'a, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Drain<'a, T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Drain<'a, T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T>>::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_slice\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T>>::as_mut_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"<IntoIter<T> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<IntoIter<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a SliceDeque<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a mut SliceDeque<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::iter::Extend<T>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"from_iter_default\"), disambiguator: 0 }]","has_unsafe":true,"name":"from_iter_default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as SpecExtend<T, I>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"spec_extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as SpecExtend<T, I>>::spec_extend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as SpecExtend<&'a T, I>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"spec_extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as SpecExtend<&'a T, I>>::spec_extend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::iter::FromIterator<T>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ExtendElement<T> as ExtendWith<T>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<ExtendElement<T> as ExtendWith<T>>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ExtendDefault as ExtendWith<T>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":true,"name":"<ExtendDefault as ExtendWith<T>>::last"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"from_elem\"), disambiguator: 0 }]","has_unsafe":true,"name":"from_elem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"from_elem\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as SpecFromElem>::from_elem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::iter::Extend<&'a T>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Splice<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Splice<'a, I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Splice<'a, I> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Splice<'a, I> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Splice<'a, I> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<DrainFilter<'a, T, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<DrainFilter<'a, T, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<DrainFilter<'a, T, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<DrainFilter<'a, T, F> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::convert::AsRef<[T]>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<SliceDeque<T> as std::convert::AsMut<[T]>>::as_mut"}
