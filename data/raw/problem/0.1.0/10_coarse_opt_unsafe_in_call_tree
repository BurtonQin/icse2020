{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Problem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"problem::Problem::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"while_context\"), disambiguator: 0 }]","fn_type":"Safe","name":"problem::Problem::while_context"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Problem as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Problem as std::convert::From<E>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_problem\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as ToProblem>::to_problem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_problem\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<E> as OptionErrorToProblem>::to_problem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"map_problem\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<O, E> as ResultToProblem<O>>::map_problem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"map_problem\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<O, std::option::Option<E>> as ResultOptionToProblem<O>>::map_problem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ok_or_problem\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<O> as OptionToProblem<O>>::ok_or_problem"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"problem_while\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<O, E> as ProblemWhile<O>>::problem_while"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"problem_while_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<O, E> as ProblemWhile<O>>::problem_while_with"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"in_context_of\"), disambiguator: 0 }]","fn_type":"Safe","name":"problem::in_context_of"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"in_context_of_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"problem::in_context_of_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"or_failed_to\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<O, E> as FailedTo<O>>::or_failed_to"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"or_failed_to\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<O> as FailedTo<O>>::or_failed_to"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ProblemIter<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"or_failed_to\"), disambiguator: 0 }]","fn_type":"Safe","name":"<I as FailedToIter<O, E>>::or_failed_to"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"format_panic_to_stderr\"), disambiguator: 0 }]","fn_type":"Safe","name":"problem::format_panic_to_stderr"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"format_panic_to_error_log\"), disambiguator: 0 }]","fn_type":"Safe","name":"problem::format_panic_to_error_log"}
