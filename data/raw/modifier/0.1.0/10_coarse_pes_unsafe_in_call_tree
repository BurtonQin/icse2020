{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":true,"name":"Set::set"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"Set::set_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"impls::<impl Modifier<X> for (M1,)>::modify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"impls::<impl Modifier<X> for (M1, M2)>::modify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"impls::<impl Modifier<X> for (M1, M2, M3)>::modify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"impls::<impl Modifier<X> for (M1, M2, M3, M4)>::modify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"impls::<impl Modifier<X> for (M1, M2, M3, M4, M5)>::modify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"modify\"), disambiguator: 0 }]","has_unsafe":true,"name":"impls::<impl Modifier<X> for (M1, M2, M3, M4, M5, M6)>::modify"}
