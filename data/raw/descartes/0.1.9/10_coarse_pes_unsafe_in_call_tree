{"def_path":"[DisambiguatedDefPathData { data: Module(\"rough_eq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"RoughEq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"rough_eq::RoughEq::rough_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rough_eq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"<f32 as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rough_eq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Point<f32, nalgebra::U2> as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rough_eq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Matrix<f32, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<f32, nalgebra::U2>>::Buffer> as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"angle_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"angles::angle_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"angle_along_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"angles::angle_along_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signed_angle_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"angles::signed_angle_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"orthogonal\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Matrix<f32, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<f32, nalgebra::U2>>::Buffer> as angles::WithUniqueOrthogonal>::orthogonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert_2d_3d\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_2d\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Matrix<f32, nalgebra::U3, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<f32, nalgebra::U3>>::Buffer> as convert_2d_3d::Into2d>::into_2d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert_2d_3d\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_2d\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Point<f32, nalgebra::U3> as convert_2d_3d::Into2d>::into_2d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert_2d_3d\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_3d\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Matrix<f32, nalgebra::U2, nalgebra::U1, <nalgebra::DefaultAllocator as nalgebra::allocator::Allocator<f32, nalgebra::U2>>::Buffer> as convert_2d_3d::Into3d>::into_3d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"convert_2d_3d\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_3d\"), disambiguator: 0 }]","has_unsafe":true,"name":"<nalgebra::Point<f32, nalgebra::U2> as convert_2d_3d::Into3d>::into_3d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<bbox::BoundingBox as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"infinite\"), disambiguator: 0 }]","has_unsafe":true,"name":"bbox::BoundingBox::infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"overlaps\"), disambiguator: 0 }]","has_unsafe":true,"name":"bbox::BoundingBox::overlaps"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"point\"), disambiguator: 0 }]","has_unsafe":false,"name":"bbox::BoundingBox::point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bbox\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"grown_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"bbox::BoundingBox::grown_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_path::LineSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_path::LineSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LineSegment::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LineSegment::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LineSegment::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LineSegment::direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"along\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LineSegment::along"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LineSegment::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"project_with_tolerance\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LineSegment::project_with_tolerance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"project_with_max_distance\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LineSegment::project_with_max_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_box\"), disambiguator: 0 }]","has_unsafe":true,"name":"<line_path::LineSegment as bbox::HasBoundingBox>::bounding_box"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_path::LinePath as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_path::LinePath as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"segments\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::segments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"segments_with_distances\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::segments_with_distances"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"first_segment\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::first_segment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"last_segment\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::last_segment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find_on_segment\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::find_on_segment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"along\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::along"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"direction_along\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::direction_along"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"start_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::start_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"end_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::end_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"project_with_tolerance\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::project_with_tolerance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"project_with_max_distance\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::project_with_max_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"project\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::project"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"includes\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::includes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"distance_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::distance_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<line_path::ConcatError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"concat_weld\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::concat_weld"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"subsection\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::subsection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"dash\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_path::LinePath::dash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"shift_orthogonally_vectors\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::shift_orthogonally_vectors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"shift_orthogonally\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::shift_orthogonally"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"with_new_start_and_end\"), disambiguator: 0 }]","has_unsafe":true,"name":"line_path::LinePath::with_new_start_and_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<line_path::DashIterator<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a line_path::LinePath as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<closed_line_path::ClosedLinePath as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<closed_line_path::ClosedLinePath as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"closed_line_path::ClosedLinePath::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_clone_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"closed_line_path::ClosedLinePath::try_clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"path\"), disambiguator: 0 }]","has_unsafe":false,"name":"closed_line_path::ClosedLinePath::path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subsection\"), disambiguator: 0 }]","has_unsafe":true,"name":"closed_line_path::ClosedLinePath::subsection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint_between\"), disambiguator: 0 }]","has_unsafe":true,"name":"closed_line_path::ClosedLinePath::midpoint_between"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"closed_line_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a closed_line_path::ClosedLinePath as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<curved_path::CurvedSegment as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<curved_path::CurvedSegment as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"curved_path::CurvedSegment::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","has_unsafe":false,"name":"curved_path::CurvedSegment::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedSegment::start_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedSegment::end_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedSegment::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<curved_path::CurvedPath as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"line\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"arc\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::arc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"biarc\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::biarc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"circle\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::circle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"curved_path::CurvedPath::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","has_unsafe":false,"name":"curved_path::CurvedPath::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::start_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"end_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::end_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"segments\"), disambiguator: 0 }]","has_unsafe":false,"name":"curved_path::CurvedPath::segments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"concat\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::concat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_line_path_with_max_angle\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::to_line_path_with_max_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"curved_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_line_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"curved_path::CurvedPath::to_line_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intersect::Intersection as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intersect::Intersection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<intersect::Intersection as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<intersect::Intersection as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(line_path::LineSegment, line_path::LineSegment) as intersect::Intersect>::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(&'a line_path::LinePath, &'b line_path::LinePath) as intersect::Intersect>::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"intersect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersect\"), disambiguator: 0 }]","has_unsafe":true,"name":"<(&'a closed_line_path::ClosedLinePath, &'b closed_line_path::ClosedLinePath) as intersect::Intersect>::intersect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_svg\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::debug::<impl line_path::LinePath>::from_svg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_svg\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::debug::<impl line_path::LinePath>::to_svg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"debug\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"debug_svg\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::debug::<impl areas::AreaSplitResult<'a>>::debug_svg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::UnclosedPathError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<areas::AreaLocation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PointContainer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::PointContainer::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"winding_angle\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::<impl line_path::LineSegment>::winding_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::PrimitiveArea as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::PrimitiveArea as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::PrimitiveArea::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fully_contains\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::PrimitiveArea::fully_contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"winding_number\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::PrimitiveArea::winding_number"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"location_of\"), disambiguator: 0 }]","has_unsafe":true,"name":"<areas::PrimitiveArea as areas::PointContainer>::location_of"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":true,"name":"<&'a areas::PrimitiveArea as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::Area as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::Area as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::Area::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new_simple\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::Area::new_simple"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"disjoint\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::Area::disjoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"winding_number\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::Area::winding_number"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"location_of\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::Area as areas::PointContainer>::location_of"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"rough_eq_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"<&'a areas::Area as rough_eq::RoughEq>::rough_eq_by"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<areas::PieceEquivalence as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::PieceEquivalence as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::PieceEquivalence as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::BoundaryPiece::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new_unintersected\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::BoundaryPiece::new_unintersected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"to_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::BoundaryPiece::to_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"equivalence\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::BoundaryPiece::equivalence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"other_subject\"), disambiguator: 0 }]","has_unsafe":false,"name":"areas::other_subject"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::Area::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"split_if_intersects\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::Area::split_if_intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"split_helper\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::Area::split_helper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<areas::AreaError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"get_area\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::AreaSplitResult::get_area"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::AreaSplitResult::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::AreaSplitResult::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"a_minus_b\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::AreaSplitResult::a_minus_b"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"areas\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"b_minus_a\"), disambiguator: 0 }]","has_unsafe":true,"name":"areas::AreaSplitResult::b_minus_a"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"band\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<band::Band as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"band\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"band::Band::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"band\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_asymmetric\"), disambiguator: 0 }]","has_unsafe":false,"name":"band::Band::new_asymmetric"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"band\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"outline\"), disambiguator: 0 }]","has_unsafe":true,"name":"band::Band::outline"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"band\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"outline_distance_to_path_distance\"), disambiguator: 0 }]","has_unsafe":true,"name":"band::Band::outline_distance_to_path_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"band\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_area\"), disambiguator: 0 }]","has_unsafe":true,"name":"band::Band::as_area"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"join_within_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::join_within_vec"}
