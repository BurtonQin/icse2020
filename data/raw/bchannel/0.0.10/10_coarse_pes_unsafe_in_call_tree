{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"borrow\"), disambiguator: 0 }]","fn_type":"Safe","name":"<MaybeOwned<'a, A>>::borrow"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"channel\"), disambiguator: 0 }]","fn_type":"Safe","name":"bchannel::channel"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_old\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E>>::from_old"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E>>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"send_all\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Sender<T, E>>::send_all"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"close\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E>>::close"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"error\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E>>::error"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_closed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E>>::is_closed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sender<T, E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_old\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::from_old"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"recv\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::recv"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"recv_block\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::recv_block"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"has_error\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::has_error"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"take_error\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::take_error"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_closed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::is_closed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"blocking_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::blocking_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_blocking_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Receiver<T, E>>::into_blocking_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ReceiverIterator<'a, T, E> as std::iter::Iterator>::next"}
