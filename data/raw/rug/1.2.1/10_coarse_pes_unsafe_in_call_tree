{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::cast::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::cast::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::cast::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<i8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<i16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<i32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<i64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<i128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<isize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<u8>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<u16>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<u32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<u64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<u128>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::Cast<usize>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as cast::Cast<f32>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as cast::Cast<f64>>::cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<i8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<i16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<i32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<i64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<i128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<isize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<u8>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<u16>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<u32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<u64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<u128>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::CheckedCast<usize>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as cast::CheckedCast<f32>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"checked_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as cast::CheckedCast<f64>>::checked_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f32 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<i8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<i16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<i32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<i64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<i128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<isize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<u8>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<u16>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<u32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<u64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 586 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<u128>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 587 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as cast::WrappingCast<usize>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 588 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as cast::WrappingCast<f32>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 589 }, DisambiguatedDefPathData { data: ValueNs(\"wrapping_cast\"), disambiguator: 0 }]","fn_type":"Safe","name":"<f64 as cast::WrappingCast<f64>>::wrapping_cast"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yes_no\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bool as cast::YesNo>::yes_no"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"yes_no\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as cast::YesNo>::yes_no"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 590 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u32, bool> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 591 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u32, ()> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 592 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u64, bool> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 593 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u64, ()> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 594 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u128, bool> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 595 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u128, ()> as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 596 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u64, bool> as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 597 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u64, ()> as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 598 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u128, bool> as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 599 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cast::Float<u128, ()> as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"gmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ord_int\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ext::gmp::ord_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mpc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mulsub\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ext::mpc::mulsub::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mpc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"submul\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ext::mpc::submul::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mpc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rnd_re_im\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ext::mpc::rnd_re_im"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"mpc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ord_ord\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ext::mpc::ord_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"neg_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as misc::NegAbs>::neg_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_f64_to_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::misc::trunc_f64_to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lcase\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::lcase"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trim_start\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::trim_start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trim_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::trim_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_lcase_match\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::skip_lcase_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matched_brackets\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::matched_brackets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_outside_brackets\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::find_outside_brackets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"misc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_space_outside_brackets\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::misc::find_space_outside_brackets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for i8>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a i8> for i8>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for i8>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for i8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a i8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for i8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b i8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for i8>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for i8>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for i8>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a i8> for i8>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for i8>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a i8> for i8>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for i8>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a i8> for i8>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for i8>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a i8> for i8>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for i8>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a i8> for i8>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for i8>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a i8> for i8>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for i8>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a i8> for i8>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for i8>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a i8> for i8>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for i8>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a i8> for i8>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for i8>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a i8> for i8>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for i16>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a i16> for i16>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for i16>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for i16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a i16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for i16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b i16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for i16>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for i16>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for i16>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a i16> for i16>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for i16>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a i16> for i16>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for i16>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a i16> for i16>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for i16>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a i16> for i16>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for i16>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a i16> for i16>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for i16>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a i16> for i16>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for i16>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a i16> for i16>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for i16>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a i16> for i16>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for i16>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a i16> for i16>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for i16>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a i16> for i16>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for i32>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a i32> for i32>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for i32>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for i32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for i32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for i32>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a i32> for i32>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for i32>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a i32> for i32>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for i32>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a i32> for i32>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for i32>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a i32> for i32>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for i32>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a i32> for i32>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for i32>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a i32> for i32>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for i32>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a i32> for i32>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for i32>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a i32> for i32>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for i32>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a i32> for i32>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for i32>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a i32> for i32>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for i64>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a i64> for i64>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for i64>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for i64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a i64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for i64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b i64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for i64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for i64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for i64>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a i64> for i64>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for i64>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a i64> for i64>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for i64>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a i64> for i64>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for i64>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a i64> for i64>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for i64>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a i64> for i64>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for i64>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a i64> for i64>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for i64>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a i64> for i64>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for i64>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a i64> for i64>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for i64>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a i64> for i64>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for i64>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a i64> for i64>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for i128>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a i128> for i128>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for i128>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for i128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a i128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for i128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b i128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for i128>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for i128>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for i128>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a i128> for i128>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for i128>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a i128> for i128>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for i128>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a i128> for i128>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for i128>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a i128> for i128>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for i128>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a i128> for i128>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for i128>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a i128> for i128>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for i128>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a i128> for i128>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for i128>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a i128> for i128>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for i128>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a i128> for i128>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for i128>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a i128> for i128>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for isize>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a isize> for isize>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for isize>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for isize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a isize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for isize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b isize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for isize>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for isize>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for isize>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a isize> for isize>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for isize>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a isize> for isize>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for isize>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a isize> for isize>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for isize>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a isize> for isize>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for isize>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a isize> for isize>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for isize>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a isize> for isize>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for isize>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a isize> for isize>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for isize>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a isize> for isize>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for isize>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a isize> for isize>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for isize>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a isize> for isize>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for u8>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a u8> for u8>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for u8>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for u8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a u8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for u8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b u8>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for u8>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for u8>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for u8>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a u8> for u8>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for u8>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a u8> for u8>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for u8>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a u8> for u8>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for u8>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a u8> for u8>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for u8>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a u8> for u8>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for u8>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a u8> for u8>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for u8>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a u8> for u8>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for u8>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a u8> for u8>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for u8>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a u8> for u8>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for u8>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a u8> for u8>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for u16>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a u16> for u16>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for u16>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for u16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a u16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for u16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b u16>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for u16>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for u16>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for u16>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a u16> for u16>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for u16>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a u16> for u16>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for u16>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a u16> for u16>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for u16>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a u16> for u16>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for u16>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a u16> for u16>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for u16>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a u16> for u16>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for u16>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a u16> for u16>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for u16>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a u16> for u16>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for u16>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a u16> for u16>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for u16>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a u16> for u16>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for u32>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a u32> for u32>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for u32>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for u32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for u32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for u32>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a u32> for u32>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for u32>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a u32> for u32>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for u32>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a u32> for u32>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for u32>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a u32> for u32>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for u32>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a u32> for u32>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for u32>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a u32> for u32>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for u32>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a u32> for u32>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for u32>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a u32> for u32>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for u32>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a u32> for u32>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for u32>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a u32> for u32>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for u64>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a u64> for u64>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for u64>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for u64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a u64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for u64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b u64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for u64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for u64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for u64>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a u64> for u64>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for u64>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a u64> for u64>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for u64>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a u64> for u64>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for u64>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a u64> for u64>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for u64>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a u64> for u64>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for u64>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a u64> for u64>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for u64>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a u64> for u64>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for u64>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a u64> for u64>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for u64>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a u64> for u64>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for u64>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a u64> for u64>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for u128>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a u128> for u128>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for u128>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for u128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a u128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for u128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b u128>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for u128>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for u128>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for u128>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a u128> for u128>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for u128>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a u128> for u128>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for u128>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a u128> for u128>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for u128>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a u128> for u128>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for u128>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a u128> for u128>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for u128>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a u128> for u128>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for u128>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a u128> for u128>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for u128>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a u128> for u128>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for u128>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a u128> for u128>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for u128>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a u128> for u128>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for usize>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a usize> for usize>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NotAssign for usize>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for usize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<u32> for &'a usize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for usize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a u32> for &'b usize>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<u32> for usize>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a u32> for usize>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for usize>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a usize> for usize>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for usize>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a usize> for usize>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for usize>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a usize> for usize>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for usize>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a usize> for usize>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom for usize>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemFrom<&'a usize> for usize>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom for usize>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitAndFrom<&'a usize> for usize>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom for usize>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitOrFrom<&'a usize> for usize>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom for usize>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::BitXorFrom<&'a usize> for usize>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom for usize>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"shl_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShlFrom<&'a usize> for usize>::shl_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom for usize>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"shr_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::ShrFrom<&'a usize> for usize>::shr_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NegAssign for i8>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NegAssign for i16>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NegAssign for i32>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NegAssign for i64>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NegAssign for i128>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::NegAssign for isize>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowFrom for u32>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowFrom<&'a u32> for u32>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for f32>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a f32> for f32>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<i32> for f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<i32> for &'a f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a i32> for f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a i32> for &'b f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<i32> for f32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a i32> for f32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<f32> for f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<f32> for &'a f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a f32> for f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a f32> for &'b f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<f32> for f32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a f32> for f32>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for f32>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a f32> for f32>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for f32>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a f32> for f32>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for f32>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a f32> for f32>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for f32>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a f32> for f32>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowFrom for f32>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowFrom<&'a f32> for f32>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for f64>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a f64> for f64>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<i32> for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<i32> for &'a f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a i32> for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a i32> for &'b f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<i32> for f64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a i32> for f64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<f64> for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<f64> for &'a f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a f64> for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::Pow<&'a f64> for &'b f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<f64> for f64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowAssign<&'a f64> for f64>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for f64>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a f64> for f64>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom for f64>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::SubFrom<&'a f64> for f64>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom for f64>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::MulFrom<&'a f64> for f64>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom for f64>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivFrom<&'a f64> for f64>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowFrom for f64>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::PowFrom<&'a f64> for f64>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for i8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for i8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for i8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for i8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i8> for &'a i8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i8> for &'a i8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i8> for &'a i8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i8> for &'a i8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for &'b i8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for &'b i8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for &'b i8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i8> for &'b i8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i8>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i8>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i8>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i8>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i8> for i8>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i8> for i8>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i8> for i8>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i8> for i8>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i8>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i8>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i8>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i8>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i8> for i8>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i8> for i8>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i8> for i8>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i8> for i8>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i8>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i8>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i8>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i8>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for i8>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for i8>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for i8>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for i8>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i8> for &'a i8>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i8> for &'a i8>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i8> for &'a i8>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i8> for &'a i8>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for &'b i8>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for &'b i8>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for &'b i8>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i8> for &'b i8>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i8>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i8>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i8>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i8>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i8> for i8>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i8> for i8>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i8> for i8>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i8> for i8>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i8>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i8>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i8>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i8>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i8> for i8>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i8> for i8>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i8> for i8>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i8> for i8>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for i16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for i16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for i16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for i16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i16> for &'a i16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i16> for &'a i16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i16> for &'a i16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i16> for &'a i16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for &'b i16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for &'b i16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for &'b i16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i16> for &'b i16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i16>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i16>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i16>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i16>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i16> for i16>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i16> for i16>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i16> for i16>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i16> for i16>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i16>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i16>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i16>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i16>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i16> for i16>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i16> for i16>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i16> for i16>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i16> for i16>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i16>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i16>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i16>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i16>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for i16>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for i16>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for i16>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for i16>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i16> for &'a i16>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i16> for &'a i16>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i16> for &'a i16>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i16> for &'a i16>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for &'b i16>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for &'b i16>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for &'b i16>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i16> for &'b i16>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i16>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i16>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i16>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i16>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i16> for i16>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i16> for i16>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i16> for i16>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i16> for i16>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i16>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i16>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i16>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i16>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i16> for i16>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i16> for i16>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i16> for i16>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i16> for i16>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i32> for &'a i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i32> for &'a i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i32> for &'a i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i32> for &'a i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for &'b i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for &'b i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for &'b i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i32> for &'b i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i32>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i32>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i32>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i32>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i32> for i32>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i32> for i32>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i32> for i32>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i32> for i32>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i32>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i32>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i32>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i32>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i32> for i32>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i32> for i32>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i32> for i32>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i32> for i32>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i32> for &'a i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i32> for &'a i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i32> for &'a i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i32> for &'a i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for &'b i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for &'b i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for &'b i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i32> for &'b i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i32>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i32>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i32>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i32>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i32> for i32>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i32> for i32>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i32> for i32>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i32> for i32>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i32>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i32>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i32>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i32>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i32> for i32>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i32> for i32>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i32> for i32>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i32> for i32>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for i64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for i64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for i64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for i64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i64> for &'a i64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i64> for &'a i64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i64> for &'a i64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i64> for &'a i64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for &'b i64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for &'b i64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for &'b i64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i64> for &'b i64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i64>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i64>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i64>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i64>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i64> for i64>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i64> for i64>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i64> for i64>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i64> for i64>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i64>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i64>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i64>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i64>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i64> for i64>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i64> for i64>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i64> for i64>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i64> for i64>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for i64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for i64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for i64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for i64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i64> for &'a i64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i64> for &'a i64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i64> for &'a i64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i64> for &'a i64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for &'b i64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for &'b i64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for &'b i64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i64> for &'b i64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i64>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i64>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i64>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i64>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i64> for i64>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i64> for i64>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i64> for i64>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i64> for i64>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i64>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i64>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i64>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i64>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i64> for i64>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i64> for i64>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i64> for i64>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i64> for i64>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for i128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for i128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for i128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for i128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for i128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i128> for &'a i128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i128> for &'a i128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i128> for &'a i128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<i128> for &'a i128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for &'b i128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for &'b i128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for &'b i128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a i128> for &'b i128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i128>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i128>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i128>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for i128>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i128> for i128>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i128> for i128>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i128> for i128>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a i128> for i128>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i128>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i128>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i128>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for i128>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i128> for i128>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i128> for i128>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i128> for i128>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a i128> for i128>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i128>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i128>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i128>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for i128>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for i128>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for i128>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for i128>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for i128>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i128> for &'a i128>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i128> for &'a i128>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i128> for &'a i128>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<i128> for &'a i128>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for &'b i128>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for &'b i128>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for &'b i128>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a i128> for &'b i128>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i128>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i128>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i128>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for i128>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i128> for i128>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i128> for i128>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i128> for i128>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a i128> for i128>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i128>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i128>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i128>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for i128>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i128> for i128>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i128> for i128>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i128> for i128>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a i128> for i128>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for isize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for isize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for isize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for isize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for isize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for isize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for isize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for isize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<isize> for &'a isize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<isize> for &'a isize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<isize> for &'a isize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<isize> for &'a isize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for &'b isize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for &'b isize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for &'b isize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a isize> for &'b isize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for isize>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for isize>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for isize>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for isize>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a isize> for isize>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a isize> for isize>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a isize> for isize>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a isize> for isize>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for isize>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for isize>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for isize>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for isize>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a isize> for isize>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a isize> for isize>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a isize> for isize>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a isize> for isize>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for isize>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for isize>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for isize>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for isize>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for isize>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for isize>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for isize>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for isize>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<isize> for &'a isize>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<isize> for &'a isize>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<isize> for &'a isize>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<isize> for &'a isize>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for &'b isize>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for &'b isize>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for &'b isize>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a isize> for &'b isize>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for isize>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for isize>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for isize>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for isize>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a isize> for isize>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a isize> for isize>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a isize> for isize>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a isize> for isize>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for isize>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for isize>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for isize>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for isize>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a isize> for isize>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a isize> for isize>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a isize> for isize>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a isize> for isize>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for u8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for u8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for u8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for u8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u8> for &'a u8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u8> for &'a u8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u8> for &'a u8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u8> for &'a u8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for &'b u8>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for &'b u8>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for &'b u8>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u8> for &'b u8>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u8>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u8>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u8>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u8>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u8> for u8>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u8> for u8>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u8> for u8>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u8> for u8>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u8>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u8>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u8>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u8>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u8> for u8>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u8> for u8>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u8> for u8>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u8> for u8>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for u16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for u16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for u16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for u16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u16> for &'a u16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u16> for &'a u16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u16> for &'a u16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u16> for &'a u16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for &'b u16>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for &'b u16>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for &'b u16>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u16> for &'b u16>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u16>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u16>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u16>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u16>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u16> for u16>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u16> for u16>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u16> for u16>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u16> for u16>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u16>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u16>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u16>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u16>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u16> for u16>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u16> for u16>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u16> for u16>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u16> for u16>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u32> for &'a u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u32> for &'a u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u32> for &'a u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u32> for &'a u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for &'b u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for &'b u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for &'b u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u32> for &'b u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u32>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u32>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u32>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u32>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u32> for u32>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u32> for u32>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u32> for u32>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u32> for u32>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u32>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u32>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u32>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u32>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u32> for u32>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u32> for u32>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u32> for u32>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u32> for u32>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for u64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for u64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for u64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for u64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u64> for &'a u64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u64> for &'a u64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u64> for &'a u64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u64> for &'a u64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for &'b u64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for &'b u64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for &'b u64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u64> for &'b u64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u64>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u64>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u64>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u64>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u64> for u64>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u64> for u64>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u64> for u64>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u64> for u64>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u64>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u64>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u64>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u64>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u64> for u64>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u64> for u64>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u64> for u64>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u64> for u64>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for u128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for u128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for u128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for u128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for u128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u128> for &'a u128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u128> for &'a u128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u128> for &'a u128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<u128> for &'a u128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for &'b u128>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for &'b u128>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for &'b u128>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a u128> for &'b u128>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u128>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u128>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u128>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for u128>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u128> for u128>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u128> for u128>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u128> for u128>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a u128> for u128>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u128>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u128>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u128>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for u128>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u128> for u128>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u128> for u128>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u128> for u128>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a u128> for u128>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for usize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for usize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for usize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for usize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for usize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for usize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for usize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for usize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<usize> for &'a usize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<usize> for &'a usize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<usize> for &'a usize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<usize> for &'a usize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for &'b usize>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for &'b usize>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for &'b usize>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a usize> for &'b usize>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for usize>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for usize>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for usize>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for usize>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a usize> for usize>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a usize> for usize>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a usize> for usize>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a usize> for usize>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for usize>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for usize>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for usize>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for usize>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a usize> for usize>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a usize> for usize>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a usize> for usize>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a usize> for usize>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for f32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for f32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for f32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for f32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f32> for &'a f32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f32> for &'a f32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f32> for &'a f32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f32> for &'a f32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for &'b f32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for &'b f32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for &'b f32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f32> for &'b f32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f32>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f32>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f32>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f32>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f32> for f32>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f32> for f32>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f32> for f32>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f32> for f32>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f32>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f32>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f32>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f32>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f32> for f32>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f32> for f32>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f32> for f32>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f32> for f32>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for f32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for f32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for f32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for f32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f32> for &'a f32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f32> for &'a f32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f32> for &'a f32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f32> for &'a f32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for &'b f32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for &'b f32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for &'b f32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f32> for &'b f32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f32>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f32>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f32>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f32>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f32> for f32>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f32> for f32>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f32> for f32>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f32> for f32>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f32>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f32>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f32>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f32>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f32> for f32>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f32> for f32>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f32> for f32>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f32> for f32>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding for f64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for f64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for f64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for f64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for f64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f64> for &'a f64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f64> for &'a f64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f64> for &'a f64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<f64> for &'a f64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for &'b f64>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for &'b f64>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for &'b f64>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRounding<&'a f64> for &'b f64>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f64>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f64>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f64>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign for f64>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f64> for f64>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f64> for f64>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f64> for f64>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingAssign<&'a f64> for f64>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f64>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f64>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f64>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom for f64>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f64> for f64>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f64> for f64>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f64> for f64>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::DivRoundingFrom<&'a f64> for f64>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding for f64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for f64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for f64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for f64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for f64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f64> for &'a f64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f64> for &'a f64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f64> for &'a f64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<f64> for &'a f64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for &'b f64>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for &'b f64>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for &'b f64>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRounding<&'a f64> for &'b f64>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f64>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f64>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f64>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign for f64>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f64> for f64>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f64> for f64>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f64> for f64>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingAssign<&'a f64> for f64>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f64>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f64>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f64>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom for f64>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f64> for f64>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f64> for f64>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f64> for f64>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::RemRoundingFrom<&'a f64> for f64>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a str> for std::string::String>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign<&'a str> for std::borrow::Cow<'a, str>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl Assign for std::borrow::Cow<'a, str>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a str> for std::string::String>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom<&'a str> for std::borrow::Cow<'a, str>>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops_prim\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::ops_prim::<impl ops::AddFrom for std::borrow::Cow<'a, str>>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Neg for integer::big::Integer>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::NegAssign for integer::big::Integer>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Neg for &'a integer::big::Integer>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::NegIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::NegIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::NegIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<&'a integer::big::Integer> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::big::Integer> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<&'a integer::big::Integer> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<&'a integer::big::Integer> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::AddIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::AddIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::AddIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<&'a integer::big::Integer> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::big::Integer> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<&'a integer::big::Integer> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<&'a integer::big::Integer> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<&'a integer::big::Integer> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<integer::big::Integer> for &'a integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul for &'a integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::MulAssign for integer::big::Integer>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::MulAssign<&'a integer::big::Integer> for integer::big::Integer>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::MulFrom for integer::big::Integer>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::MulFrom<&'a integer::big::Integer> for integer::big::Integer>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::MulIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<&'a integer::big::Integer> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<integer::big::Integer> for &'a integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div for &'a integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::DivAssign for integer::big::Integer>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::DivAssign<&'a integer::big::Integer> for integer::big::Integer>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::DivFrom for integer::big::Integer>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::DivFrom<&'a integer::big::Integer> for integer::big::Integer>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::DivIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::DivIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::DivIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem for integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<&'a integer::big::Integer> for integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<integer::big::Integer> for &'a integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem for &'a integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"rem_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::RemAssign for integer::big::Integer>::rem_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"rem_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::RemAssign<&'a integer::big::Integer> for integer::big::Integer>::rem_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::RemFrom for integer::big::Integer>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::RemFrom<&'a integer::big::Integer> for integer::big::Integer>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::RemIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::RemIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::RemIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Not for integer::big::Integer>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"not_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::NotAssign for integer::big::Integer>::not_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Not for &'a integer::big::Integer>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::NotIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::NotIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::NotIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd for integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'a integer::big::Integer> for integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<integer::big::Integer> for &'a integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd for &'a integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAndAssign for integer::big::Integer>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAndAssign<&'a integer::big::Integer> for integer::big::Integer>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitAndFrom for integer::big::Integer>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitAndFrom<&'a integer::big::Integer> for integer::big::Integer>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitAndIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitAndIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitAndIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr for integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<&'a integer::big::Integer> for integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<integer::big::Integer> for &'a integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr for &'a integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOrAssign for integer::big::Integer>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOrAssign<&'a integer::big::Integer> for integer::big::Integer>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitOrFrom for integer::big::Integer>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitOrFrom<&'a integer::big::Integer> for integer::big::Integer>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitOrIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitOrIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitOrIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor for integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<&'a integer::big::Integer> for integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<integer::big::Integer> for &'a integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor for &'a integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXorAssign for integer::big::Integer>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXorAssign<&'a integer::big::Integer> for integer::big::Integer>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitXorFrom for integer::big::Integer>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitXorFrom<&'a integer::big::Integer> for integer::big::Integer>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitXorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitXorIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitXorIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<i32> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<&'t i32> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<i32> for &'b integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<&'t i32> for &'b integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<i32> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<&'t i32> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::AddI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::AddI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::AddI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::big::Integer> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<&'b integer::big::Integer> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::big::Integer> for &'t i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<&'b integer::big::Integer> for &'t i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<i32> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<&'t i32> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<i32> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<&'t i32> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<i32> for &'b integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<&'t i32> for &'b integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<i32> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<&'t i32> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::big::Integer> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<&'b integer::big::Integer> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::big::Integer> for &'t i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<&'b integer::big::Integer> for &'t i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<i32> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<&'t i32> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubFromI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubFromI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<i32> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<&'t i32> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<i32> for &'b integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<&'t i32> for &'b integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::MulAssign<i32> for integer::big::Integer>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::MulAssign<&'t i32> for integer::big::Integer>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::MulI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<integer::big::Integer> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<&'b integer::big::Integer> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<integer::big::Integer> for &'t i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<&'b integer::big::Integer> for &'t i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::MulFrom<i32> for integer::big::Integer>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::MulFrom<&'t i32> for integer::big::Integer>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<i32> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<&'t i32> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<i32> for &'b integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<&'t i32> for &'b integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::DivAssign<i32> for integer::big::Integer>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::DivAssign<&'t i32> for integer::big::Integer>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::DivI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::DivI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::DivI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<integer::big::Integer> for i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<&'b integer::big::Integer> for i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<integer::big::Integer> for &'t i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<&'b integer::big::Integer> for &'t i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::DivFrom<i32> for integer::big::Integer>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::DivFrom<&'t i32> for integer::big::Integer>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::DivFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::DivFromI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::DivFromI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<i32> for integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<&'t i32> for integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<i32> for &'b integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<&'t i32> for &'b integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"rem_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::RemAssign<i32> for integer::big::Integer>::rem_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"rem_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::RemAssign<&'t i32> for integer::big::Integer>::rem_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::RemI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::RemI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::RemI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<integer::big::Integer> for i32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<&'b integer::big::Integer> for i32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<integer::big::Integer> for &'t i32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<&'b integer::big::Integer> for &'t i32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::RemFrom<i32> for integer::big::Integer>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::RemFrom<&'t i32> for integer::big::Integer>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::RemFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::RemFromI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::RemFromI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shl<i32> for integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shl<&'t i32> for integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shl<i32> for &'b integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shl<&'t i32> for &'b integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShlAssign<i32> for integer::big::Integer>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShlAssign<&'t i32> for integer::big::Integer>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::ShlI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::ShlI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::ShlI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shr<i32> for integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shr<&'t i32> for integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shr<i32> for &'b integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shr<&'t i32> for &'b integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShrAssign<i32> for integer::big::Integer>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShrAssign<&'t i32> for integer::big::Integer>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::ShrI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::ShrI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::ShrI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<i32> for integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'t i32> for integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<i32> for &'b integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'t i32> for &'b integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAndAssign<i32> for integer::big::Integer>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAndAssign<&'t i32> for integer::big::Integer>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitAndI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitAndI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitAndI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<integer::big::Integer> for i32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'b integer::big::Integer> for i32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<integer::big::Integer> for &'t i32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'b integer::big::Integer> for &'t i32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitAndFrom<i32> for integer::big::Integer>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitAndFrom<&'t i32> for integer::big::Integer>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<i32> for integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<&'t i32> for integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<i32> for &'b integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<&'t i32> for &'b integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOrAssign<i32> for integer::big::Integer>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOrAssign<&'t i32> for integer::big::Integer>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitOrI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitOrI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitOrI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<integer::big::Integer> for i32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<&'b integer::big::Integer> for i32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<integer::big::Integer> for &'t i32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<&'b integer::big::Integer> for &'t i32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitOrFrom<i32> for integer::big::Integer>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitOrFrom<&'t i32> for integer::big::Integer>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<i32> for integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<&'t i32> for integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<i32> for &'b integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<&'t i32> for &'b integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXorAssign<i32> for integer::big::Integer>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXorAssign<&'t i32> for integer::big::Integer>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitXorI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitXorI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitXorI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<integer::big::Integer> for i32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<&'b integer::big::Integer> for i32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<integer::big::Integer> for &'t i32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<&'b integer::big::Integer> for &'t i32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitXorFrom<i32> for integer::big::Integer>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitXorFrom<&'t i32> for integer::big::Integer>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<u32> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<&'t u32> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<u32> for &'b integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<&'t u32> for &'b integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<u32> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<&'t u32> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::AddU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::AddU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::AddU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::big::Integer> for u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<&'b integer::big::Integer> for u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::big::Integer> for &'t u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<&'b integer::big::Integer> for &'t u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<u32> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<&'t u32> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<u32> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<&'t u32> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<u32> for &'b integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<&'t u32> for &'b integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<u32> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<&'t u32> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::big::Integer> for u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<&'b integer::big::Integer> for u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::big::Integer> for &'t u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<&'b integer::big::Integer> for &'t u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<u32> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<&'t u32> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubFromU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubFromU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<u32> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<&'t u32> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<u32> for &'b integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<&'t u32> for &'b integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::MulAssign<u32> for integer::big::Integer>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::MulAssign<&'t u32> for integer::big::Integer>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::MulU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<integer::big::Integer> for u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<&'b integer::big::Integer> for u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Mul<integer::big::Integer> for &'t u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Mul<&'b integer::big::Integer> for &'t u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::MulFrom<u32> for integer::big::Integer>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::MulFrom<&'t u32> for integer::big::Integer>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<u32> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<&'t u32> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<u32> for &'b integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<&'t u32> for &'b integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::DivAssign<u32> for integer::big::Integer>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::DivAssign<&'t u32> for integer::big::Integer>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::DivU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::DivU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::DivU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<integer::big::Integer> for u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<&'b integer::big::Integer> for u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Div<integer::big::Integer> for &'t u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Div<&'b integer::big::Integer> for &'t u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::DivFrom<u32> for integer::big::Integer>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::DivFrom<&'t u32> for integer::big::Integer>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::DivFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::DivFromU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::DivFromU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<u32> for integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<&'t u32> for integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<u32> for &'b integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<&'t u32> for &'b integer::big::Integer>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"rem_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::RemAssign<u32> for integer::big::Integer>::rem_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"rem_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::RemAssign<&'t u32> for integer::big::Integer>::rem_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::RemU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::RemU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::RemU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<integer::big::Integer> for u32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<&'b integer::big::Integer> for u32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Rem<integer::big::Integer> for &'t u32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Rem<&'b integer::big::Integer> for &'t u32>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::RemFrom<u32> for integer::big::Integer>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"rem_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::RemFrom<&'t u32> for integer::big::Integer>::rem_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::RemFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::RemFromU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::RemFromU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shl<u32> for integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shl<&'t u32> for integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shl<u32> for &'b integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shl<&'t u32> for &'b integer::big::Integer>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShlAssign<u32> for integer::big::Integer>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShlAssign<&'t u32> for integer::big::Integer>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::ShlU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::ShlU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::ShlU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shr<u32> for integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Shr<&'t u32> for integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shr<u32> for &'b integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Shr<&'t u32> for &'b integer::big::Integer>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShrAssign<u32> for integer::big::Integer>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::ShrAssign<&'t u32> for integer::big::Integer>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::ShrU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::ShrU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::ShrU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::Pow<u32> for integer::big::Integer>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::Pow<&'t u32> for integer::big::Integer>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl ops::Pow<u32> for &'b integer::big::Integer>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl ops::Pow<&'t u32> for &'b integer::big::Integer>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::PowAssign<u32> for integer::big::Integer>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::PowAssign<&'t u32> for integer::big::Integer>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::PowU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::PowU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::PowU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<u32> for integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'t u32> for integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<u32> for &'b integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'t u32> for &'b integer::big::Integer>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAndAssign<u32> for integer::big::Integer>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAndAssign<&'t u32> for integer::big::Integer>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitAndU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitAndU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitAndU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<integer::big::Integer> for u32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'b integer::big::Integer> for u32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitAnd<integer::big::Integer> for &'t u32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitAnd<&'b integer::big::Integer> for &'t u32>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitAndFrom<u32> for integer::big::Integer>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitAndFrom<&'t u32> for integer::big::Integer>::bitand_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<u32> for integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<&'t u32> for integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<u32> for &'b integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<&'t u32> for &'b integer::big::Integer>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOrAssign<u32> for integer::big::Integer>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOrAssign<&'t u32> for integer::big::Integer>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitOrU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitOrU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitOrU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<integer::big::Integer> for u32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<&'b integer::big::Integer> for u32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitOr<integer::big::Integer> for &'t u32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitOr<&'b integer::big::Integer> for &'t u32>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitOrFrom<u32> for integer::big::Integer>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitOrFrom<&'t u32> for integer::big::Integer>::bitor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<u32> for integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<&'t u32> for integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<u32> for &'b integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<&'t u32> for &'b integer::big::Integer>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXorAssign<u32> for integer::big::Integer>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXorAssign<&'t u32> for integer::big::Integer>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::BitXorU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::BitXorU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::BitXorU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<integer::big::Integer> for u32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<&'b integer::big::Integer> for u32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::BitXor<integer::big::Integer> for &'t u32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::BitXor<&'b integer::big::Integer> for &'t u32>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitXorFrom<u32> for integer::big::Integer>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::BitXorFrom<&'t u32> for integer::big::Integer>::bitxor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<integer::arith::MulIncomplete<'a>> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::AddMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::AddMulIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::AddMulIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::arith::MulIncomplete<'a> as std::ops::Add<integer::big::Integer>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulIncomplete<'a> as std::ops::Add<&'a integer::big::Integer>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<integer::arith::MulU32Incomplete<'a>> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::AddMulU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::AddMulU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::AddMulU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::arith::MulU32Incomplete<'a> as std::ops::Add<integer::big::Integer>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulU32Incomplete<'a> as std::ops::Add<&'a integer::big::Integer>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Add<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Add<integer::arith::MulI32Incomplete<'a>> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::AddAssign<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::AddMulI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::AddMulI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::AddMulI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::arith::MulI32Incomplete<'a> as std::ops::Add<integer::big::Integer>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulI32Incomplete<'a> as std::ops::Add<&'a integer::big::Integer>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::AddFrom<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<integer::arith::MulIncomplete<'a>> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubMulIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubMulIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::arith::MulIncomplete<'a> as std::ops::Sub<integer::big::Integer>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulIncomplete<'a> as std::ops::Sub<&'a integer::big::Integer>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<integer::arith::MulIncomplete<'a>> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubMulFromIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubMulFromIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubMulFromIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<integer::arith::MulU32Incomplete<'a>> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubMulU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubMulU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubMulU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::arith::MulU32Incomplete<'a> as std::ops::Sub<integer::big::Integer>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulU32Incomplete<'a> as std::ops::Sub<&'a integer::big::Integer>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<integer::arith::MulU32Incomplete<'a>> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubMulFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubMulFromU32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubMulFromU32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::Sub<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::arith::<impl std::ops::Sub<integer::arith::MulI32Incomplete<'a>> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::ops::SubAssign<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubMulI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubMulI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubMulI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::arith::MulI32Incomplete<'a> as std::ops::Sub<integer::big::Integer>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::MulI32Incomplete<'a> as std::ops::Sub<&'a integer::big::Integer>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl ops::SubFrom<integer::arith::MulI32Incomplete<'a>> for integer::big::Integer>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::arith::SubMulFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl Assign<integer::arith::SubMulFromI32Incomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::convert::From<integer::arith::SubMulFromI32Incomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::iter::Sum<T> for integer::big::Integer>::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"product\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::arith::<impl std::iter::Product<T> for integer::big::Integer>::product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shrink_to_fit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::shrink_to_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::as_raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_digits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::from_digits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assign_digits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::assign_digits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"significant_digits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::significant_digits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_digits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_digits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_digits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::write_digits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::from_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::from_str_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::parse_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i8\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i16\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i16"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i128\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i128"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_isize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_isize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u8\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u16\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u16"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u128\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u128"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i8_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i8_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i16_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i16_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i32_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i32_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i64_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i64_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i128_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_i128_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_isize_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_isize_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u8_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u8_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u16_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u16_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u32_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u64_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u64_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u128_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_u128_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_usize_wrapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_usize_wrapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32_exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_f32_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64_exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_f64_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::to_string_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assign_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::assign_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assign_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::assign_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_neg\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::as_neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::as_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_even\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_even"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_odd\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_odd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_divisible\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_divisible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_divisible_u\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_divisible_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_divisible_2pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_divisible_2pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_congruent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_congruent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_congruent_u\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_congruent_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_congruent_2pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_congruent_2pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_perfect_power\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_perfect_power"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_perfect_square\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_perfect_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_power_of_two\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_power_of_two"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::cmp0"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp_abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::cmp_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"significant_bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::significant_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signed_bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::signed_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_ones\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::count_ones"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_zeros\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::count_zeros"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_zero\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::find_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_one\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::find_one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_bit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::set_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_bit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::get_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toggle_bit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::toggle_bit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hamming_dist\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::hamming_dist"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"product\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::abs_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::abs_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::signum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::signum_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::signum_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::clamp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::clamp_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::clamp_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep_bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::keep_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep_bits_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::keep_bits_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep_bits_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::keep_bits_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep_signed_bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::keep_signed_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep_signed_bits_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::keep_signed_bits_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keep_signed_bits_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::keep_signed_bits_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_power_of_two\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::next_power_of_two"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_power_of_two_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::next_power_of_two_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_power_of_two_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::next_power_of_two_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_rem_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_ceil_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_ceil_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_ceil_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_rem_ceil_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_floor_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_floor_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_floor_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_rem_floor_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_round_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_round_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_round_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_rem_round_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_euc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_rem_euc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem_euc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_rem_euc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mod_u\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::mod_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_exact\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_exact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_exact_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_exact_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_exact_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_exact_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_exact_u\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_exact_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_exact_u_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::div_exact_u_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_exact_u_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::div_exact_u_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"invert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::invert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"invert_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::invert_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"invert_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::invert_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow_mod\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::pow_mod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow_mod_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::pow_mod_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pow_mod_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::pow_mod_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"secure_pow_mod\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::secure_pow_mod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"secure_pow_mod_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::secure_pow_mod_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"secure_pow_mod_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::secure_pow_mod_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"u_pow_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::u_pow_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"i_pow_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::i_pow_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::root_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::root_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::root_rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_rem_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::root_rem_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_rem_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::root_rem_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::square_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::square_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::sqrt_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::sqrt_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_rem\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::sqrt_rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_rem_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::sqrt_rem_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_rem_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::sqrt_rem_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_probably_prime\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::is_probably_prime"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_prime\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::next_prime"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_prime_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::next_prime_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_prime_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::next_prime_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::gcd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::gcd_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::gcd_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd_cofactors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::gcd_cofactors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd_cofactors_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::gcd_cofactors_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gcd_cofactors_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::gcd_cofactors_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lcm\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::lcm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lcm_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::lcm_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lcm_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::lcm_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"jacobi\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::jacobi"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"legendre\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::legendre"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kronecker\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::kronecker"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_factor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::remove_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_factor_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::remove_factor_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_factor_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::remove_factor_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factorial\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::factorial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factorial_2\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::factorial_2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factorial_m\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::factorial_m"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"primorial\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::primorial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binomial\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::binomial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binomial_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::binomial_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binomial_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::binomial_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binomial_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::binomial_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fibonacci\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::fibonacci"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fibonacci_2\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::fibonacci_2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lucas\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::lucas"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lucas_2\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::lucas_2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::random_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_below\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::random_below"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_below_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::Integer::random_below_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_below_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::Integer::random_below_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::SumIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::SumIncomplete<'a, I>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::SumIncomplete<'a, I>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::ops::Add<integer::big::SumIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::ops::AddAssign<integer::big::SumIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DotIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::DotIncomplete<'a, I>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::DotIncomplete<'a, I>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::ops::Add<integer::big::DotIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::ops::AddAssign<integer::big::DotIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::ProductIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::ProductIncomplete<'a, I>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::ProductIncomplete<'a, I>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::ops::Mul<integer::big::ProductIncomplete<'a, I>>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::ops::MulAssign<integer::big::ProductIncomplete<'a, I>>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::AbsIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::AbsIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::AbsIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::SignumIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::SignumIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::SignumIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::ClampIncomplete<'a, Min, Max> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::ClampIncomplete<'a, Min, Max>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::ClampIncomplete<'a, Min, Max>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::KeepBitsIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::KeepBitsIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::KeepBitsIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::KeepSignedBitsIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::KeepSignedBitsIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::KeepSignedBitsIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::NextPowerOfTwoIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::NextPowerOfTwoIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::NextPowerOfTwoIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivRemIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::DivRemIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::DivRemIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::DivRemIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivRemCeilIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::DivRemCeilIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::DivRemCeilIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::DivRemCeilIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivRemFloorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::DivRemFloorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::DivRemFloorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::DivRemFloorIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivRemRoundIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::DivRemRoundIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::DivRemRoundIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::DivRemRoundIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivRemEucIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::DivRemEucIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::DivRemEucIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::DivRemEucIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivExactIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::DivExactIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::DivExactIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::DivExactUIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::DivExactUIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::DivExactUIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::PowModIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::PowModIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::PowModIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::SecurePowModIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::SecurePowModIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::UPowUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::UPowUIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::UPowUIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::IPowUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::IPowUIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::IPowUIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::RootIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::RootIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::RootIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::RootRemIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::RootRemIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::RootRemIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::RootRemIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::SquareIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::SquareIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::SquareIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::SqrtIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::SqrtIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::SqrtIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::SqrtRemIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::SqrtRemIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::SqrtRemIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::SqrtRemIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::NextPrimeIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::NextPrimeIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::NextPrimeIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::GcdIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::GcdIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::GcdIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer) as Assign<integer::big::GcdIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::GcdIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::GcdIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut integer::big::Integer, &'d mut integer::big::Integer) as Assign<integer::big::GcdIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer, integer::big::Integer) as Assign<integer::big::GcdIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::GcdIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::LcmIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::LcmIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::LcmIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::InvertIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::InvertIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::InvertIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::RemoveFactorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut integer::big::Integer, &'c mut u32) as Assign<integer::big::RemoveFactorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, u32) as Assign<integer::big::RemoveFactorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, u32) as std::convert::From<integer::big::RemoveFactorIncomplete<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::FactorialIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::FactorialIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::FactorialIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::Factorial2Incomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::Factorial2Incomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::Factorial2Incomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::FactorialMIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::FactorialMIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::FactorialMIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::PrimorialIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::PrimorialIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::PrimorialIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::BinomialIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::BinomialIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::BinomialIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::BinomialUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::BinomialUIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::BinomialUIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::FibonacciIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::FibonacciIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::FibonacciIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'a mut integer::big::Integer, &'b mut integer::big::Integer) as Assign<integer::big::FibonacciIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::FibonacciIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::FibonacciIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::LucasIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::LucasIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::LucasIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'a mut integer::big::Integer, &'b mut integer::big::Integer) as Assign<integer::big::LucasIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as Assign<integer::big::LucasIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(integer::big::Integer, integer::big::Integer) as std::convert::From<integer::big::LucasIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::RandomBitsIncomplete<'a, 'b>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::RandomBitsIncomplete<'a, 'b>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::RandomBelowIncomplete<'a, 'b>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::RandomBelowIncomplete<'a, 'b>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::BorrowInteger<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::BorrowInteger<'a> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<integer::big::BorrowInteger<'a> as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"req_chars\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::req_chars"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append_to_string\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::append_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append_to_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::append_to_string::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::ParseIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as Assign<integer::big::ParseIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::Integer as std::convert::From<integer::big::ParseIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::ParseIntegerError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::ParseErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::ParseIntegerError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::IsPrime as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::IsPrime as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::IsPrime as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::IsPrime as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::IsPrime as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::IsPrime as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::big::IsPrime as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bitcount_to_u32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::bitcount_to_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::big::Integer as inner::Inner>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UnsignedPrimitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::UnsignedPrimitive::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UnsignedPrimitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::big::UnsignedPrimitive::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UnsignedPrimitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nails\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::big::UnsignedPrimitive::nails"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bool as integer::big::UnsignedPrimitive>::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"nails\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bool as integer::big::UnsignedPrimitive>::nails"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::Ord for integer::big::Integer>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<i8> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for i8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<i8> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for i8>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<i16> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for i16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<i16> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for i16>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<i32> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for i32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<i32> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for i32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<i64> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for i64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<i64> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for i64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<i128> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for i128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<i128> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for i128>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<isize> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for isize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<isize> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for isize>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<u8> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for u8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<u8> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for u8>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<u16> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for u16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<u16> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for u16>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<u32> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for u32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<u32> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for u32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<u64> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for u64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<u64> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for u64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<u128> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for u128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<u128> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for u128>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<usize> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for usize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<usize> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for usize>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<f32> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for f32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<f32> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for f32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<f64> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for f64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<f64> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for f64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding for integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding for integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding for integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding for integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'i integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'i integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'i integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'i integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding for &'i integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding for &'i integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding for &'i integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding for &'i integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign for integer::big::Integer>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign for integer::big::Integer>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign for integer::big::Integer>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign for integer::big::Integer>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom for integer::big::Integer>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom for integer::big::Integer>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom for integer::big::Integer>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom for integer::big::Integer>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::DivRoundingIncomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::DivRoundingIncomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::DivRoundingIncomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding for integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding for integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding for integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding for integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'i integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'i integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'i integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'i integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding for &'i integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding for &'i integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding for &'i integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding for &'i integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign for integer::big::Integer>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign for integer::big::Integer>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign for integer::big::Integer>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign for integer::big::Integer>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'i integer::big::Integer> for integer::big::Integer>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom for integer::big::Integer>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom for integer::big::Integer>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom for integer::big::Integer>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom for integer::big::Integer>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'i integer::big::Integer> for integer::big::Integer>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::RemRoundingIncomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::RemRoundingIncomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::RemRoundingIncomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<i32> for integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<i32> for integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<i32> for integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<i32> for integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<i32> for &'i integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<i32> for &'i integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<i32> for &'i integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<i32> for &'i integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for &'i integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for &'i integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for &'i integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t i32> for &'i integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<i32> for integer::big::Integer>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<i32> for integer::big::Integer>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<i32> for integer::big::Integer>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<i32> for integer::big::Integer>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t i32> for integer::big::Integer>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t i32> for integer::big::Integer>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t i32> for integer::big::Integer>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t i32> for integer::big::Integer>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::DivRoundingI32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::DivRoundingI32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::DivRoundingI32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t i32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t i32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t i32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t i32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<i32> for integer::big::Integer>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<i32> for integer::big::Integer>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<i32> for integer::big::Integer>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<i32> for integer::big::Integer>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t i32> for integer::big::Integer>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t i32> for integer::big::Integer>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t i32> for integer::big::Integer>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t i32> for integer::big::Integer>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::DivRoundingFromI32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::DivRoundingFromI32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::DivRoundingFromI32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<i32> for integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<i32> for integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<i32> for integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<i32> for integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<i32> for &'i integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<i32> for &'i integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<i32> for &'i integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<i32> for &'i integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for &'i integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for &'i integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for &'i integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t i32> for &'i integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<i32> for integer::big::Integer>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<i32> for integer::big::Integer>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<i32> for integer::big::Integer>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<i32> for integer::big::Integer>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t i32> for integer::big::Integer>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t i32> for integer::big::Integer>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t i32> for integer::big::Integer>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t i32> for integer::big::Integer>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::RemRoundingI32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::RemRoundingI32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::RemRoundingI32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t i32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t i32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t i32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t i32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<i32> for integer::big::Integer>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<i32> for integer::big::Integer>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<i32> for integer::big::Integer>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<i32> for integer::big::Integer>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t i32> for integer::big::Integer>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t i32> for integer::big::Integer>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t i32> for integer::big::Integer>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t i32> for integer::big::Integer>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::RemRoundingFromI32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::RemRoundingFromI32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::RemRoundingFromI32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<u32> for integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<u32> for integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<u32> for integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<u32> for integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<u32> for &'i integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<u32> for &'i integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<u32> for &'i integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<u32> for &'i integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for &'i integer::big::Integer>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for &'i integer::big::Integer>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for &'i integer::big::Integer>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'t u32> for &'i integer::big::Integer>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<u32> for integer::big::Integer>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<u32> for integer::big::Integer>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<u32> for integer::big::Integer>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<u32> for integer::big::Integer>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t u32> for integer::big::Integer>::div_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t u32> for integer::big::Integer>::div_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t u32> for integer::big::Integer>::div_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingAssign<&'t u32> for integer::big::Integer>::div_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::DivRoundingU32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::DivRoundingU32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::DivRoundingU32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRounding<integer::big::Integer> for &'t u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t u32>::div_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t u32>::div_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t u32>::div_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::DivRounding<&'i integer::big::Integer> for &'t u32>::div_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<u32> for integer::big::Integer>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<u32> for integer::big::Integer>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<u32> for integer::big::Integer>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<u32> for integer::big::Integer>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"div_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t u32> for integer::big::Integer>::div_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"div_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t u32> for integer::big::Integer>::div_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"div_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t u32> for integer::big::Integer>::div_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"div_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::DivRoundingFrom<&'t u32> for integer::big::Integer>::div_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::DivRoundingFromU32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::DivRoundingFromU32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::DivRoundingFromU32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<u32> for integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<u32> for integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<u32> for integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<u32> for integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<u32> for &'i integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<u32> for &'i integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<u32> for &'i integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<u32> for &'i integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for &'i integer::big::Integer>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for &'i integer::big::Integer>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for &'i integer::big::Integer>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'t u32> for &'i integer::big::Integer>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<u32> for integer::big::Integer>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<u32> for integer::big::Integer>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<u32> for integer::big::Integer>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<u32> for integer::big::Integer>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t u32> for integer::big::Integer>::rem_trunc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t u32> for integer::big::Integer>::rem_ceil_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t u32> for integer::big::Integer>::rem_floor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingAssign<&'t u32> for integer::big::Integer>::rem_euc_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::RemRoundingU32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::RemRoundingU32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::RemRoundingU32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for u32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for u32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for u32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for u32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for u32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for u32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for u32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for u32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t u32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t u32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t u32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRounding<integer::big::Integer> for &'t u32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t u32>::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t u32>::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t u32>::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::division::<impl ops::RemRounding<&'i integer::big::Integer> for &'t u32>::rem_euc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<u32> for integer::big::Integer>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<u32> for integer::big::Integer>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<u32> for integer::big::Integer>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<u32> for integer::big::Integer>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t u32> for integer::big::Integer>::rem_trunc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t u32> for integer::big::Integer>::rem_ceil_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t u32> for integer::big::Integer>::rem_floor_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"rem_euc_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl ops::RemRoundingFrom<&'t u32> for integer::big::Integer>::rem_euc_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::division::RemRoundingFromU32Incomplete<'i> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl Assign<integer::division::RemRoundingFromU32Incomplete<'i>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"division\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::division::<impl std::convert::From<integer::division::RemRoundingFromU32Incomplete<'i>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::small::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::Mpz as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::small::SmallInteger::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_nonreallocating_integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger::as_nonreallocating_integer::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update_d\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::small::SmallInteger::update_d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<integer::small::SmallInteger as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i8 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i16 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i32 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i64 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<i128 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isize as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u64 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u128 as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as integer::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<i8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<i8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<i16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<i16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<i32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<i64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<i128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<i128>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<isize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<isize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<u8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<u8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<u16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<u16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<u32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<u64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<u128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<u128>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<usize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::small::SmallInteger as std::convert::From<usize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign<&'a integer::small::SmallInteger>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::small::SmallInteger as Assign>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::default::Default for integer::big::Integer>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::clone::Clone for integer::big::Integer>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::clone::Clone for integer::big::Integer>::clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::ops::Drop for integer::big::Integer>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::hash::Hash for integer::big::Integer>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::traits::<impl Assign for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a integer::big::Integer> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<&'a integer::big::Integer> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for i8>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for i8>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for i16>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for i16>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for i32>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for i32>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for i64>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for i64>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for i128>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for i128>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for isize>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for isize>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for u8>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for u8>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for u16>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for u16>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for u32>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for u32>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for u64>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for u64>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for u128>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for u128>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<integer::big::Integer> for usize>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::TryFrom<&'a integer::big::Integer> for usize>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<i8> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<i8> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a i8> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<i16> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<i16> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a i16> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<i32> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<i32> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a i32> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<i64> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<i64> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a i64> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<i128> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<i128> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a i128> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<isize> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<isize> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a isize> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<u8> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<u8> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a u8> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<u16> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<u16> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a u16> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<u32> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<u32> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a u32> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<u64> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<u64> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a u64> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<u128> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<u128> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a u128> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<usize> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::convert::From<usize> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl Assign<&'a usize> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::str::FromStr for integer::big::Integer>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::fmt::Display for integer::big::Integer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::fmt::Debug for integer::big::Integer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::fmt::Binary for integer::big::Integer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::fmt::Octal for integer::big::Integer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::fmt::LowerHex for integer::big::Integer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::<impl std::fmt::UpperHex for integer::big::Integer>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::integer::traits::fmt_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::traits::<impl std::fmt::Display for integer::big::ParseIntegerError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::traits::<impl std::error::Error for integer::TryFromIntegerError>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::traits::<impl std::fmt::Display for integer::TryFromIntegerError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::TryFromIntegerError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::TryFromIntegerError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::Order as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::Order as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<integer::Order as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::Order as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::Order as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::Order as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<integer::Order as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"order\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::Order::order"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"endian\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::integer::Order::endian"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Neg for rational::big::Rational>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::NegAssign for rational::big::Rational>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Neg for &'a rational::big::Rational>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::NegIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::NegIncomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::NegIncomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Add for rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Add<&'a rational::big::Rational> for rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Add<rational::big::Rational> for &'a rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Add for &'a rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::AddAssign for rational::big::Rational>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::AddAssign<&'a rational::big::Rational> for rational::big::Rational>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::AddFrom for rational::big::Rational>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::AddFrom<&'a rational::big::Rational> for rational::big::Rational>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::AddIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::AddIncomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::AddIncomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Sub for rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Sub<&'a rational::big::Rational> for rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Sub<rational::big::Rational> for &'a rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Sub for &'a rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::SubAssign for rational::big::Rational>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::SubAssign<&'a rational::big::Rational> for rational::big::Rational>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::SubFrom for rational::big::Rational>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::SubFrom<&'a rational::big::Rational> for rational::big::Rational>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::SubIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::SubIncomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::SubIncomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Mul for rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Mul<&'a rational::big::Rational> for rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Mul<rational::big::Rational> for &'a rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Mul for &'a rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::MulAssign for rational::big::Rational>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::MulAssign<&'a rational::big::Rational> for rational::big::Rational>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::MulFrom for rational::big::Rational>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::MulFrom<&'a rational::big::Rational> for rational::big::Rational>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::MulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::MulIncomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::MulIncomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Div for rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Div<&'a rational::big::Rational> for rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Div<rational::big::Rational> for &'a rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Div for &'a rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::DivAssign for rational::big::Rational>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::DivAssign<&'a rational::big::Rational> for rational::big::Rational>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::DivFrom for rational::big::Rational>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::DivFrom<&'a rational::big::Rational> for rational::big::Rational>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::DivIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::DivIncomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::DivIncomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shl<i32> for rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shl<&'t i32> for rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shl<i32> for &'b rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shl<&'t i32> for &'b rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShlAssign<i32> for rational::big::Rational>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShlAssign<&'t i32> for rational::big::Rational>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::ShlI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::ShlI32Incomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::ShlI32Incomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shr<i32> for rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shr<&'t i32> for rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shr<i32> for &'b rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shr<&'t i32> for &'b rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShrAssign<i32> for rational::big::Rational>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShrAssign<&'t i32> for rational::big::Rational>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::ShrI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::ShrI32Incomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::ShrI32Incomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::Pow<i32> for rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::Pow<&'t i32> for rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl ops::Pow<i32> for &'b rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl ops::Pow<&'t i32> for &'b rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::PowAssign<i32> for rational::big::Rational>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::PowAssign<&'t i32> for rational::big::Rational>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::PowI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::PowI32Incomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::PowI32Incomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shl<u32> for rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shl<&'t u32> for rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shl<u32> for &'b rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shl<&'t u32> for &'b rational::big::Rational>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShlAssign<u32> for rational::big::Rational>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShlAssign<&'t u32> for rational::big::Rational>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::ShlU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::ShlU32Incomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::ShlU32Incomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shr<u32> for rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::Shr<&'t u32> for rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shr<u32> for &'b rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl std::ops::Shr<&'t u32> for &'b rational::big::Rational>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShrAssign<u32> for rational::big::Rational>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::ops::ShrAssign<&'t u32> for rational::big::Rational>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::ShrU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::ShrU32Incomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::ShrU32Incomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::Pow<u32> for rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::Pow<&'t u32> for rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl ops::Pow<u32> for &'b rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::arith::<impl ops::Pow<&'t u32> for &'b rational::big::Rational>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::PowAssign<u32> for rational::big::Rational>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl ops::PowAssign<&'t u32> for rational::big::Rational>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::arith::PowU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl Assign<rational::arith::PowU32Incomplete<'a>> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::convert::From<rational::arith::PowU32Incomplete<'r>> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::iter::Sum<T> for rational::big::Rational>::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"product\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::arith::<impl std::iter::Product<T> for rational::big::Rational>::product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::as_raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::from_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::from_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_str_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::from_str_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::parse_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::to_string_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assign_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::assign_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assign_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::assign_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"numer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::numer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"numer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational::numer::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"denom\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::denom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"denom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational::denom::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mutate_numer_denom\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::mutate_numer_denom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mutate_numer_denom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational::mutate_numer_denom::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mutate_numer_denom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational::mutate_numer_denom::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_numer_denom_no_canonicalization\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational::as_mut_numer_denom_no_canonicalization::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_numer_denom_no_canonicalization\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational::as_mut_numer_denom_no_canonicalization::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_numer_denom\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::into_numer_denom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::as_neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::as_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_recip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::as_recip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::cmp0"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp_abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::cmp_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"product\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::product"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::abs_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::abs_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::signum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::signum_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::signum_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::clamp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::clamp_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::clamp_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::recip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::recip_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::recip_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::trunc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::trunc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_trunc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_trunc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::rem_trunc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_trunc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_trunc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_trunc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::fract_trunc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::ceil_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::ceil_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_ceil_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_ceil_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::rem_ceil_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_ceil_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_ceil_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_ceil_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::fract_ceil_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::floor_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::floor_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_floor_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_floor_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::rem_floor_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_floor_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_floor_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_floor_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::fract_floor_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::round_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::round_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_round_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::rem_round_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rem_round_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::rem_round_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_round_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::fract_round_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_round_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::fract_round_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::Rational::square_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::big::Rational::square_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::SumIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::SumIncomplete<'a, I>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::SumIncomplete<'a, I>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::ops::Add<rational::big::SumIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::ops::AddAssign<rational::big::SumIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::DotIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::DotIncomplete<'a, I>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::DotIncomplete<'a, I>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::ops::Add<rational::big::DotIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::ops::AddAssign<rational::big::DotIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::ProductIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::ProductIncomplete<'a, I>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::ProductIncomplete<'a, I>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::ops::Mul<rational::big::ProductIncomplete<'a, I>>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::ops::MulAssign<rational::big::ProductIncomplete<'a, I>>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::AbsIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::AbsIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::AbsIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::SignumIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl Assign<rational::big::SignumIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl std::convert::From<rational::big::SignumIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::ClampIncomplete<'a, Min, Max> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::ClampIncomplete<'a, Min, Max>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::ClampIncomplete<'a, Min, Max>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::RecipIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::RecipIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::RecipIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::TruncIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl Assign<rational::big::TruncIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl std::convert::From<rational::big::TruncIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::RemTruncIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::RemTruncIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::RemTruncIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::FractTruncIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut rational::big::Rational, &'c mut integer::big::Integer) as Assign<rational::big::FractTruncIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as Assign<rational::big::FractTruncIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as std::convert::From<rational::big::FractTruncIncomplete<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::CeilIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl Assign<rational::big::CeilIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl std::convert::From<rational::big::CeilIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::RemCeilIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::RemCeilIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::RemCeilIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::FractCeilIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut rational::big::Rational, &'c mut integer::big::Integer) as Assign<rational::big::FractCeilIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as Assign<rational::big::FractCeilIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as std::convert::From<rational::big::FractCeilIncomplete<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::FloorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl Assign<rational::big::FloorIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl std::convert::From<rational::big::FloorIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::RemFloorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::RemFloorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::RemFloorIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::FractFloorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut rational::big::Rational, &'c mut integer::big::Integer) as Assign<rational::big::FractFloorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as Assign<rational::big::FractFloorIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as std::convert::From<rational::big::FractFloorIncomplete<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::RoundIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl Assign<rational::big::RoundIncomplete<'a>> for integer::big::Integer>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::<impl std::convert::From<rational::big::RoundIncomplete<'r>> for integer::big::Integer>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::RemRoundIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::RemRoundIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::RemRoundIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::FractRoundIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut rational::big::Rational, &'c mut integer::big::Integer) as Assign<rational::big::FractRoundIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as Assign<rational::big::FractRoundIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(rational::big::Rational, integer::big::Integer) as std::convert::From<rational::big::FractRoundIncomplete<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::SquareIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::SquareIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::SquareIncomplete<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::BorrowRational<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::BorrowRational<'a> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<rational::big::BorrowRational<'a> as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append_to_string\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::append_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::ParseIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as Assign<rational::big::ParseIncomplete>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::big::Rational as std::convert::From<rational::big::ParseIncomplete>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::big::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::ParseRationalError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::ParseErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::ParseRationalError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::big::Rational as inner::Inner>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::Ord for rational::big::Rational>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<i8> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<i8> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for i8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for i8>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<i16> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<i16> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for i16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for i16>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<i32> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<i32> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for i32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for i32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<i64> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<i64> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for i64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for i64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<i128> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<i128> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for i128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for i128>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<isize> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<isize> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for isize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for isize>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<u8> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<u8> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for u8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for u8>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<u16> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<u16> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for u16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for u16>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<u32> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<u32> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for u32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for u32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<u64> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<u64> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for u64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for u64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<u128> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<u128> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for u128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for u128>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<usize> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<usize> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for usize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for usize>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i8, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i8, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i8, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i8, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i16, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i16, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i16, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i16, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i32, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i32, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i32, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i32, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i64, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i64, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i64, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i64, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(i128, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(i128, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (i128, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (i128, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(isize, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(isize, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (isize, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (isize, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u8, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u8, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u8, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u8, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u16, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u16, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u16, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u16, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u32, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u32, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u32, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u32, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u64, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u64, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u64, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u64, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(u128, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(u128, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (u128, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (u128, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, i8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, i8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 592 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 593 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, i8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 586 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, i16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 587 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, i16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 594 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 595 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, i16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 588 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, i32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 589 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, i32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 596 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 597 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, i32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 590 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, i64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 591 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, i64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 598 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 599 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, i64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 600 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, i128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 601 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, i128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 602 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 603 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, i128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 604 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, isize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 605 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, isize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 606 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 607 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, isize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 608 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, u8)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 609 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, u8)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 616 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 617 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, u8)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 610 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, u16)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 611 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, u16)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 618 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 619 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, u16)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 612 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, u32)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 613 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, u32)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 620 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 621 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, u32)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 614 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, u64)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 615 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, u64)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 622 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 623 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, u64)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 624 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, u128)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 625 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, u128)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 626 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 627 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, u128)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 628 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<(usize, usize)> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 629 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<(usize, usize)> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 630 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for (usize, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 631 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for (usize, usize)>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 632 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<f32> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 633 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<f32> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 636 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for f32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 637 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for f32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 634 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<f64> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 635 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<f64> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 638 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for f64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 639 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for f64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::Mpq as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::small::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::small::SmallRational::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_nonreallocating_rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational::as_nonreallocating_rational::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"num_is_first\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::small::SmallRational::num_is_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"update_d\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::small::SmallRational::update_d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<rational::small::SmallRational as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as std::convert::From<Num>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as std::convert::From<(Num, Den)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<i8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i8, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<i16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i16, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<i32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i32, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<i64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i64, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<i128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(i128, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<isize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(isize, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<u8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u8, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<u16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u16, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<u32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u32, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<u64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u64, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<u128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(u128, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<usize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rational::small::SmallRational as Assign<(usize, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign<&'a rational::small::SmallRational>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::small::SmallRational as Assign>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::default::Default for rational::big::Rational>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::clone::Clone for rational::big::Rational>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::clone::Clone for rational::big::Rational>::clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::ops::Drop for rational::big::Rational>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::hash::Hash for rational::big::Rational>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::str::FromStr for rational::big::Rational>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::fmt::Display for rational::big::Rational>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::fmt::Debug for rational::big::Rational>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::fmt::Binary for rational::big::Rational>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::fmt::Octal for rational::big::Rational>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::fmt::LowerHex for rational::big::Rational>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::fmt::UpperHex for rational::big::Rational>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::traits::<impl Assign for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl Assign<&'a rational::big::Rational> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::convert::From<&'a rational::big::Rational> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl Assign<Num> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::convert::From<Num> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl Assign<(Num, Den)> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::convert::From<(Num, Den)> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl Assign<&'a (Num, Den)> for rational::big::Rational>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::convert::From<&'a (Num, Den)> for rational::big::Rational>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::convert::TryFrom<f32> for rational::big::Rational>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::<impl std::convert::TryFrom<f64> for rational::big::Rational>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rational::traits::fmt_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::traits::<impl std::fmt::Display for rational::big::ParseRationalError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::traits::<impl std::error::Error for rational::TryFromFloatError>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rational::traits::<impl std::fmt::Display for rational::TryFromFloatError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::TryFromFloatError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rational\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rational::TryFromFloatError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Neg for float::big::Float>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::NegAssign for float::big::Float>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Neg for &'a float::big::Float>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::NegIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::NegIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'a float::big::Float> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'a float::big::Float> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'a float::big::Float> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'a float::big::Float> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'a float::big::Float> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'a float::big::Float> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'a float::big::Float> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'a float::big::Float> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'a float::big::Float> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'a float::big::Float> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'a float::big::Float> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'a float::big::Float> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'a float::big::Float> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'a float::big::Float> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'a float::big::Float> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'a float::big::Float> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'a float::big::Float> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'a float::big::Float> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<&'a float::big::Float> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'a float::big::Float> for &'a float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<float::big::Float> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<&'a float::big::Float> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<&'a float::big::Float> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for &'a float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<&'a float::big::Float> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<&'a float::big::Float> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<integer::big::Integer> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'a integer::big::Integer> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a integer::big::Integer> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<integer::big::Integer> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'a integer::big::Integer> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<integer::big::Integer> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'a integer::big::Integer> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<integer::big::Integer> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::AddOwnedIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<integer::big::Integer> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'a integer::big::Integer> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<integer::big::Integer> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'a integer::big::Integer> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<integer::big::Integer> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'a integer::big::Integer> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'a integer::big::Integer> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<integer::big::Integer> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'a integer::big::Integer> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<integer::big::Integer> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'a integer::big::Integer> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<integer::big::Integer> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::SubFromIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'a float::big::Float> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'a float::big::Float> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<integer::big::Integer> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'a integer::big::Integer> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<integer::big::Integer> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'a integer::big::Integer> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::SubFromOwnedIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<integer::big::Integer> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'a integer::big::Integer> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a integer::big::Integer> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<integer::big::Integer> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'a integer::big::Integer> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<integer::big::Integer> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'a integer::big::Integer> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<integer::big::Integer> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::MulOwnedIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'a integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for &'a integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<integer::big::Integer> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'a integer::big::Integer> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<integer::big::Integer> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'a integer::big::Integer> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<integer::big::Integer> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'a integer::big::Integer> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'a integer::big::Integer> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<integer::big::Integer> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'a integer::big::Integer> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<integer::big::Integer> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'a integer::big::Integer> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<integer::big::Integer> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::DivFromIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'a float::big::Float> for integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'a integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'a float::big::Float> for &'a integer::big::Integer>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<integer::big::Integer> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'a integer::big::Integer> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<integer::big::Integer> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'a integer::big::Integer> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::DivFromOwnedIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<integer::big::Integer> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<&'a integer::big::Integer> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'a integer::big::Integer> for &'a float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<integer::big::Integer> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<&'a integer::big::Integer> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<integer::big::Integer> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<&'a integer::big::Integer> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<integer::big::Integer> for &'a float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowOwnedIntegerIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::PowOwnedIntegerIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<rational::big::Rational> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'a rational::big::Rational> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a rational::big::Rational> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<rational::big::Rational> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'a rational::big::Rational> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<rational::big::Rational> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'a rational::big::Rational> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<rational::big::Rational> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddOwnedRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::AddOwnedRationalIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'a rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for &'a rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<rational::big::Rational> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'a rational::big::Rational> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<rational::big::Rational> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'a rational::big::Rational> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<rational::big::Rational> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'a rational::big::Rational> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'a rational::big::Rational> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<rational::big::Rational> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'a rational::big::Rational> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<rational::big::Rational> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'a rational::big::Rational> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<rational::big::Rational> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::SubFromRationalIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'a float::big::Float> for rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'a rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'a float::big::Float> for &'a rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<rational::big::Rational> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'a rational::big::Rational> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<rational::big::Rational> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'a rational::big::Rational> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubOwnedRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromOwnedRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::SubFromOwnedRationalIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<rational::big::Rational> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'a rational::big::Rational> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a rational::big::Rational> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<rational::big::Rational> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'a rational::big::Rational> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<rational::big::Rational> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'a rational::big::Rational> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<rational::big::Rational> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulOwnedRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::MulOwnedRationalIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'a rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for &'a rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<rational::big::Rational> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'a rational::big::Rational> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<rational::big::Rational> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'a rational::big::Rational> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<rational::big::Rational> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'a rational::big::Rational> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'a rational::big::Rational> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<rational::big::Rational> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'a rational::big::Rational> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<rational::big::Rational> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'a rational::big::Rational> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<rational::big::Rational> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::DivFromRationalIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'a float::big::Float> for rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'a rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'a float::big::Float> for &'a rational::big::Rational>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<rational::big::Rational> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'a rational::big::Rational> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<rational::big::Rational> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'a rational::big::Rational> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivOwnedRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromOwnedRationalIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<&'a float::arith::DivFromOwnedRationalIncomplete<'b>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<i32> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'t i32> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<i32> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'t i32> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<i32> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'t i32> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<i32> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'t i32> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'t i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'b float::big::Float> for &'t i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<i32> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'t i32> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<i32> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'t i32> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<i32> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'t i32> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<i32> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'t i32> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<i32> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'t i32> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<i32> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'t i32> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'t i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for &'t i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<i32> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'t i32> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<i32> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'t i32> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<i32> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'t i32> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<i32> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'t i32> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<i32> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'t i32> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<i32> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'t i32> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'t i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'b float::big::Float> for &'t i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<i32> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'t i32> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<i32> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'t i32> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<i32> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'t i32> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<i32> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'t i32> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<i32> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'t i32> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<i32> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'t i32> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'t i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for &'t i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<i32> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'t i32> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<i32> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'t i32> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<u32> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'t u32> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<u32> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'t u32> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<u32> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'t u32> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<u32> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'t u32> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'t u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'b float::big::Float> for &'t u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<u32> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'t u32> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<u32> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'t u32> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<u32> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'t u32> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<u32> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'t u32> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<u32> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'t u32> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<u32> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'t u32> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'t u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for &'t u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<u32> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'t u32> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<u32> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'t u32> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<u32> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'t u32> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<u32> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'t u32> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<u32> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'t u32> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<u32> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'t u32> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'t u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'b float::big::Float> for &'t u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<u32> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'t u32> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<u32> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'t u32> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<u32> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'t u32> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<u32> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'t u32> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<u32> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'t u32> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<u32> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'t u32> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'t u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for &'t u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<u32> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'t u32> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<u32> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'t u32> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<f32> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'t f32> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<f32> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'t f32> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<f32> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'t f32> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<f32> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'t f32> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'t f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'b float::big::Float> for &'t f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<f32> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'t f32> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<f32> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'t f32> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<f32> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'t f32> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<f32> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'t f32> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<f32> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'t f32> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<f32> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'t f32> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'t f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for &'t f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<f32> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'t f32> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<f32> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'t f32> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<f32> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'t f32> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<f32> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'t f32> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<f32> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'t f32> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<f32> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'t f32> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'t f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'b float::big::Float> for &'t f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<f32> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'t f32> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<f32> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'t f32> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<f32> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'t f32> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<f32> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'t f32> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<f32> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'t f32> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<f32> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'t f32> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'t f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for &'t f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<f32> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'t f32> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<f32> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'t f32> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<f64> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<&'t f64> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<f64> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'t f64> for &'b float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<f64> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<&'t f64> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<f64> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<&'t f64> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'a float::big::Float> for f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::big::Float> for &'t f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<&'b float::big::Float> for &'t f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<f64> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<&'t f64> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<f64> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<&'t f64> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<f64> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<&'t f64> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<f64> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'t f64> for &'b float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<f64> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<&'t f64> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<f64> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<&'t f64> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::big::Float> for &'t f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<&'b float::big::Float> for &'t f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<f64> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<&'t f64> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<f64> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<&'t f64> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubFromF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubFromF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<f64> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<&'t f64> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<f64> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'t f64> for &'b float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<f64> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::MulAssign<&'t f64> for float::big::Float>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<f64> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulAssignRound<&'t f64> for float::big::Float>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'a float::big::Float> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Mul<float::big::Float> for &'t f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Mul<&'b float::big::Float> for &'t f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<f64> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFrom<&'t f64> for float::big::Float>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<f64> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::MulFromRound<&'t f64> for float::big::Float>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<f64> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<&'t f64> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<f64> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'t f64> for &'b float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<f64> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::DivAssign<&'t f64> for float::big::Float>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<f64> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivAssignRound<&'t f64> for float::big::Float>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Div<float::big::Float> for &'t f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Div<&'b float::big::Float> for &'t f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<f64> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFrom<&'t f64> for float::big::Float>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<f64> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::DivFromRound<&'t f64> for float::big::Float>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::DivFromF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::DivFromF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shl<u32> for float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shl<&'t u32> for float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 586 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shl<u32> for &'b float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 587 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shl<&'t u32> for &'b float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 588 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShlAssign<u32> for float::big::Float>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 589 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShlAssign<&'t u32> for float::big::Float>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 591 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::ShlU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 590 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::ShlU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 592 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shr<u32> for float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 593 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shr<&'t u32> for float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 594 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shr<u32> for &'b float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 595 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shr<&'t u32> for &'b float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 596 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShrAssign<u32> for float::big::Float>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 597 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShrAssign<&'t u32> for float::big::Float>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 599 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::ShrU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 598 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::ShrU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 611 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<u32> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 612 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<&'t u32> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 613 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<u32> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 614 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'t u32> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 615 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<u32> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 616 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<&'t u32> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 618 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 617 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 609 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<u32> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 610 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<&'t u32> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 600 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 601 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 602 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for &'t u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 603 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for &'t u32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 604 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<u32> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 605 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<&'t u32> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 606 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<u32> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 607 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<&'t u32> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 619 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 608 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowFromU32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 620 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shl<i32> for float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 621 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shl<&'t i32> for float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 622 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shl<i32> for &'b float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 623 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shl<&'t i32> for &'b float::big::Float>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 624 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShlAssign<i32> for float::big::Float>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 625 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShlAssign<&'t i32> for float::big::Float>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 627 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::ShlI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 626 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::ShlI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 628 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shr<i32> for float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 629 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Shr<&'t i32> for float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 630 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shr<i32> for &'b float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 631 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Shr<&'t i32> for &'b float::big::Float>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 632 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShrAssign<i32> for float::big::Float>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 633 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::ShrAssign<&'t i32> for float::big::Float>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 635 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::ShrI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 634 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::ShrI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 647 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<i32> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 648 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<&'t i32> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 649 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<i32> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 650 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'t i32> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 651 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<i32> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 652 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<&'t i32> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 654 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 653 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 645 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<i32> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 646 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<&'t i32> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 636 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 637 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 638 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for &'t i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 639 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for &'t i32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 640 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<i32> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 641 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<&'t i32> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 642 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<i32> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 643 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<&'t i32> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 655 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 644 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowFromI32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 667 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<f64> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 668 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<&'t f64> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 669 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<f64> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 670 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'t f64> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 671 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<f64> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 672 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<&'t f64> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 674 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 673 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 665 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<f64> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 666 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<&'t f64> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 656 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 657 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 658 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for &'t f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 659 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for &'t f64>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 660 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<f64> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 661 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<&'t f64> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 662 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<f64> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 663 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<&'t f64> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 675 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowFromF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 664 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowFromF64Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 687 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<f32> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 688 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<&'t f32> for float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 689 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<f32> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 690 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'t f32> for &'b float::big::Float>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 691 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<f32> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 692 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssign<&'t f32> for float::big::Float>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 694 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 693 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 685 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<f32> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 686 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowAssignRound<&'t f32> for float::big::Float>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 676 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 677 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 678 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::Pow<float::big::Float> for &'t f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 679 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl ops::Pow<&'b float::big::Float> for &'t f32>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 680 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<f32> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 681 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFrom<&'t f32> for float::big::Float>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 682 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<f32> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 683 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::PowFromRound<&'t f32> for float::big::Float>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 695 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::PowFromF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 684 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::PowFromF32Incomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 700 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Add<float::arith::MulIncomplete<'a>> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 701 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Add<float::arith::MulIncomplete<'a>> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 702 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::AddAssign<float::arith::MulIncomplete<'a>> for float::big::Float>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 703 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddAssignRound<float::arith::MulIncomplete<'a>> for float::big::Float>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 705 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::AddMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 704 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::AddMulIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 696 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::arith::MulIncomplete<'a> as std::ops::Add<float::big::Float>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 697 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulIncomplete<'a> as std::ops::Add<&'a float::big::Float>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 698 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFrom<float::arith::MulIncomplete<'a>> for float::big::Float>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 699 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AddFromRound<float::arith::MulIncomplete<'a>> for float::big::Float>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 711 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::Sub<float::arith::MulIncomplete<'a>> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 712 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::arith::<impl std::ops::Sub<float::arith::MulIncomplete<'a>> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 713 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl std::ops::SubAssign<float::arith::MulIncomplete<'a>> for float::big::Float>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 714 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubAssignRound<float::arith::MulIncomplete<'a>> for float::big::Float>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 716 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 715 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubMulIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 706 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::arith::MulIncomplete<'a> as std::ops::Sub<float::big::Float>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 707 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulIncomplete<'a> as std::ops::Sub<&'a float::big::Float>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 708 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFrom<float::arith::MulIncomplete<'a>> for float::big::Float>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 709 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::SubFromRound<float::arith::MulIncomplete<'a>> for float::big::Float>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 717 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::SubMulFromIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 710 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::SubMulFromIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulIncomplete<'a> as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 718 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulAddMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulAddMulIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulIncomplete<'a> as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 719 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::arith::MulSubMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::arith::<impl ops::AssignRound<float::arith::MulSubMulIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_round\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::raw_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ordering1\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::ordering1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ordering2\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::ordering2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_val\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::with_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_val_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::with_val_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_nan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::new_nan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_prec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::set_prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_prec_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::set_prec_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::as_raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::parse_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_integer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_integer_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_integer_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_integer_exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_integer_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_rational\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_rational"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i32_saturating\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_i32_saturating"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_i32_saturating_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_i32_saturating_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32_saturating\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_u32_saturating"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32_saturating_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_u32_saturating_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f32_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f64_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32_exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f32_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f32_exp_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f32_exp_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64_exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f64_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_f64_exp_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_f64_exp_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_string_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string_radix_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::to_string_radix_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::as_neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::as_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ord\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::as_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Float::as_ord::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_integer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_nan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_nan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_infinite\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_infinite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_finite\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_finite"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_normal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"classify\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::classify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cmp0"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp_abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cmp_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::get_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_significand\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::get_significand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_positive\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_sign_positive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_sign_negative\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::is_sign_negative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_toward\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::next_toward"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_up\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::next_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_down\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::next_down"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subnormalize_ieee\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::subnormalize_ieee"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subnormalize_ieee_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::subnormalize_ieee_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subnormalize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::subnormalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subnormalize_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::subnormalize_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_add_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_add_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::mul_add_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_sub_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_sub_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::mul_sub_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_add_mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_mul_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_add_mul_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_mul_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_add_mul_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_mul_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::mul_add_mul_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_sub_mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_mul_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_sub_mul_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_mul_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::mul_sub_mul_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_mul_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::mul_sub_mul_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"u_pow_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::u_pow_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"i_pow_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::i_pow_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::square_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::square_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::square_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sqrt_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sqrt_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sqrt_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sqrt_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_sqrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::recip_sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_sqrt_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::recip_sqrt_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_sqrt_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::recip_sqrt_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_sqrt_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::recip_sqrt_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cbrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cbrt_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cbrt_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cbrt_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::cbrt_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::root_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::root_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::root_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::abs_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::abs_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::signum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::signum_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"signum_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::signum_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::clamp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::clamp_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::clamp_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clamp_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::clamp_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::recip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::recip_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::recip_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::recip_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::min_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::min_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::min_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::max_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::max_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::max_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"positive_diff\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::positive_diff"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"positive_diff_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::positive_diff_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"positive_diff_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::positive_diff_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"positive_diff_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::positive_diff_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ln_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ln_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log2\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::log2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log2_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::log2_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log2_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::log2_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log2_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::log2_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::log10"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::log10_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::log10_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::log10_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::exp_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp2\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp2_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp2_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp2_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp2_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp2_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::exp2_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp10\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp10"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp10_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp10_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp10_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp10_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp10_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::exp10_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sin_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sin_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sin_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cos_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cos_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::cos_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::tan_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::tan_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::tan_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sin_cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sin_cos_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sin_cos_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sin_cos_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sec_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sec_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sec_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sec_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sec_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sec_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::csc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::csc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csc_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::csc_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::csc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cot_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cot_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cot_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cot_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cot_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::cot_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::asin_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::asin_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::asin_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::acos_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::acos_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::acos_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atan_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atan_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::atan_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan2\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atan2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan2_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atan2_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan2_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atan2_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan2_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::atan2_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sinh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sinh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sinh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sinh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cosh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cosh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::cosh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::cosh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::tanh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::tanh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::tanh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::tanh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_cosh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sinh_cosh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_cosh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sinh_cosh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_cosh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sinh_cosh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_cosh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sinh_cosh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sech\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sech"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sech_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sech_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sech_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::sech_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sech_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::sech_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csch\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::csch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csch_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::csch_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csch_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::csch_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csch_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::csch_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coth\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::coth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coth_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::coth_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coth_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::coth_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"coth_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::coth_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::asinh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::asinh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::asinh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::asinh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::acosh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::acosh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::acosh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::acosh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atanh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atanh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::atanh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::atanh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factorial\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::factorial"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_1p\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_1p"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_1p_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_1p_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_1p_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_1p_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_1p_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ln_1p_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_m1\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp_m1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_m1_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp_m1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_m1_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::exp_m1_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_m1_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::exp_m1_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::eint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eint_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::eint_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eint_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::eint_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eint_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::eint_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"li2\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::li2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"li2_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::li2_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"li2_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::li2_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"li2_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::li2_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::gamma_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::gamma_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::gamma_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_inc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::gamma_inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_inc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::gamma_inc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_inc_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::gamma_inc_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gamma_inc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::gamma_inc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_gamma\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_gamma_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_gamma_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_gamma_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_gamma_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_gamma_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ln_gamma_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_abs_gamma\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_abs_gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_abs_gamma_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_abs_gamma_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_abs_gamma_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ln_abs_gamma_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_abs_gamma_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ln_abs_gamma_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digamma\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::digamma"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digamma_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::digamma_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digamma_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::digamma_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"digamma_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::digamma_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zeta\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::zeta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zeta_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::zeta_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zeta_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::zeta_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zeta_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::zeta_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"zeta_u\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::zeta_u"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erf\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::erf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erf_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::erf_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erf_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::erf_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erf_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::erf_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erfc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::erfc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erfc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::erfc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erfc_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::erfc_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"erfc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::erfc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::j0"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j0_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::j0_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j0_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::j0_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j0_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::j0_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j1\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::j1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j1_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::j1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j1_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::j1_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"j1_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::j1_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"jn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::jn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"jn_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::jn_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"jn_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::jn_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"jn_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::jn_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::y0"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y0_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::y0_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y0_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::y0_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y0_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::y0_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y1\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::y1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y1_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::y1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y1_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::y1_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"y1_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::y1_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::yn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yn_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::yn_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yn_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::yn_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yn_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::yn_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"agm\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::agm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"agm_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::agm_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"agm_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::agm_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"agm_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::agm_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hypot\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::hypot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hypot_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::hypot_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hypot_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::hypot_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hypot_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::hypot_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ai\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ai"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ai_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ai_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ai_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ai_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ai_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ai_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ceil"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::ceil_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ceil_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::ceil_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::floor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::floor_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"floor_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::floor_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::round_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::round_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_even\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::round_even"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_even_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::round_even_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_even_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::round_even_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::trunc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::trunc_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::trunc_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::fract"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::fract_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fract_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::fract_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_fract\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::trunc_fract"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_fract_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::trunc_fract_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_fract_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::Float::trunc_fract_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"trunc_fract_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::trunc_fract_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::random_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_cont\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::random_cont"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_normal\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::random_normal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_exp\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::Float::random_exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SumIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SumIncomplete<'a, I>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<float::big::Float as ops::AssignRound<float::big::SumIncomplete<'a, I>>>::assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as std::ops::Add<float::big::SumIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as std::ops::AddAssign<float::big::SumIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AddAssignRound<float::big::SumIncomplete<'a, I>>>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<float::big::Float as ops::AddAssignRound<float::big::SumIncomplete<'a, I>>>::add_assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::DotIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exact_prods\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::exact_prods"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::DotIncomplete<'a, I>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as std::ops::Add<float::big::DotIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as std::ops::AddAssign<float::big::DotIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AddAssignRound<float::big::DotIncomplete<'a, I>>>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::UPowUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::UPowUIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::IPowUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::IPowUIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SquareIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SquareIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SqrtIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SqrtIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SqrtUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SqrtUIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::RecipSqrtIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RecipSqrtIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CbrtIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CbrtIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::RootIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RootIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AbsIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AbsIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SignumIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SignumIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ClampIncomplete<'a, Min, Max> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ClampIncomplete<'a, Min, Max>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::RecipIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RecipIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::MinIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::MinIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::MaxIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::MaxIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::PositiveDiffIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::PositiveDiffIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::LnIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::LnIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::LnUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::LnUIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Log2Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Log2Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Log10Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Log10Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ExpIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ExpIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Exp2Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Exp2Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Exp10Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Exp10Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SinIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SinIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CosIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::TanIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::TanIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SinCosIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut float::big::Float) as ops::AssignRound<float::big::SinCosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, float::big::Float) as ops::AssignRound<float::big::SinCosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut float::big::Float) as Assign<float::big::SinCosIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, float::big::Float) as Assign<float::big::SinCosIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SecIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SecIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CscIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CscIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CotIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CotIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AcosIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AcosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AsinIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AsinIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AtanIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AtanIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Atan2Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Atan2Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CoshIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CoshIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SinhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SinhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::TanhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::TanhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SinhCoshIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut float::big::Float) as ops::AssignRound<float::big::SinhCoshIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, float::big::Float) as ops::AssignRound<float::big::SinhCoshIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut float::big::Float) as Assign<float::big::SinhCoshIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, float::big::Float) as Assign<float::big::SinhCoshIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::SechIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::SechIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CschIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CschIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CothIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CothIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AcoshIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AcoshIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AsinhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AsinhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AtanhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AtanhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::FactorialIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::FactorialIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Ln1pIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Ln1pIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ExpM1Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ExpM1Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::EintIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::EintIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Li2Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Li2Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::GammaIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::GammaIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::GammaIncIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::GammaIncIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::LnGammaIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::LnGammaIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut std::cmp::Ordering) as ops::AssignRound<float::big::LnAbsGammaIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, std::cmp::Ordering) as ops::AssignRound<float::big::LnAbsGammaIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut std::cmp::Ordering) as Assign<float::big::LnAbsGammaIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, std::cmp::Ordering) as Assign<float::big::LnAbsGammaIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::DigammaIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::DigammaIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ZetaIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ZetaIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ZetaUIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ZetaUIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ErfIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ErfIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ErfcIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ErfcIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::J0Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::J0Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::J1Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::J1Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::JnIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::JnIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Y0Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Y0Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Y1Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::Y1Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::YnIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::YnIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AgmIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AgmIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::HypotIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::HypotIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::AiIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::AiIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::CeilIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::CeilIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::FloorIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::FloorIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::RoundIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RoundIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::RoundEvenIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RoundEvenIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::TruncIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::TruncIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::FractIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::FractIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::TruncFractIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut float::big::Float) as ops::AssignRound<float::big::TruncFractIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, float::big::Float) as ops::AssignRound<float::big::TruncFractIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut float::big::Float, &'c mut float::big::Float) as Assign<float::big::TruncFractIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(float::big::Float, float::big::Float) as Assign<float::big::TruncFractIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as Assign<float::big::RandomBitsIncomplete<'a, 'b>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RandomCont<'a, 'b>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RandomNormal<'a, 'b>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::RandomExp<'a, 'b>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::BorrowFloat<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::BorrowFloat<'a> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<float::big::BorrowFloat<'a> as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"req_chars\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::req_chars"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append_to_string\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::append_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append_to_string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::append_to_string::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ParseIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::big::Float as ops::AssignRound<float::big::ParseIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<float::big::Float as ops::AssignRound<float::big::ParseIncomplete>>::assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<float::big::Float as ops::AssignRound<float::big::ParseIncomplete>>::assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_special\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::parse_special"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_nan_extra\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::big::skip_nan_extra"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ParseFloatError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ParseErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::ParseFloatError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ieee_storage_bits_for_prec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::big::ieee_storage_bits_for_prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::big::Float as inner::Inner>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd for float::big::Float>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd for float::big::Float>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd for float::big::Float>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd for float::big::Float>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for integer::big::Integer>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<integer::big::Integer> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for rational::big::Rational>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<rational::big::Rational> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<i8> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for i8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for i8>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<i8> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<i16> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for i16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for i16>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<i16> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<i32> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for i32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for i32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<i32> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<i64> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for i64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for i64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<i64> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<i128> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for i128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for i128>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<i128> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<isize> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for isize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for isize>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<isize> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<u8> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for u8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for u8>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<u8> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<u16> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for u16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for u16>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<u16> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<u32> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for u32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for u32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<u32> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<u64> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for u64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for u64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<u64> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<u128> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for u128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for u128>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<u128> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<usize> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for usize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for usize>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<usize> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<f32> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for f32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for f32>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<f32> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<f64> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for f64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for f64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<f64> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::Special> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialEq<float::big::Float> for float::Special>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::big::Float> for float::Special>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::cmp::<impl std::cmp::PartialOrd<float::Special> for float::big::Float>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::ord::OrdFloat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::ord::OrdFloat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::ord::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_float\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::ord::OrdFloat::as_float"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_float_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::ord::OrdFloat::as_float_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::ord::OrdFloat as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::ord::OrdFloat as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::ord::OrdFloat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::ord::OrdFloat as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::ord::OrdFloat as std::convert::From<float::big::Float>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::ord::<impl std::convert::From<float::ord::OrdFloat> for float::big::Float>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::small::SmallFloat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::small::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::small::Mpfr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_nonreallocating_float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::small::SmallFloat::as_nonreallocating_float::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_d\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::small::SmallFloat::update_d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<float::small::SmallFloat as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i8 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i16 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i32 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i64 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<i128 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isize as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u8 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<u8 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u16 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<u16 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u32 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<u32 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u64 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<u64 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<u128 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<u128 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<usize as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f32 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<f32 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<f64 as float::small::CopyToSmall>::copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<f64 as float::small::CopyToSmall>::copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<i8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<i8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<i16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<i16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<i32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<i64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<i128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<i128>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<isize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<isize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<u8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<u8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<u16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<u16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<u32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<u64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<u128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<u128>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<usize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<usize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<f32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as Assign<f64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::small::SmallFloat as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::small::SmallFloat as Assign<&'a float::small::SmallFloat>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::small::SmallFloat as Assign>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::clone::Clone for float::big::Float>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::clone::Clone for float::big::Float>::clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::ops::Drop for float::big::Float>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::Display for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::Debug for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::LowerExp for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::UpperExp for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::Binary for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::Octal for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::LowerHex for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::fmt::UpperHex for float::big::Float>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl Assign<T> for float::big::Float>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<float::Constant> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a float::Constant> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<float::Special> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a float::Special> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a float::big::Float> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a integer::big::Integer> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<integer::big::Integer> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a rational::big::Rational> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<rational::big::Rational> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<i8> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a i8> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<i16> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a i16> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<i32> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a i32> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<i64> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a i64> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<i128> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a i128> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<isize> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a isize> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<u8> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a u8> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<u16> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a u16> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<u32> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a u32> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<u64> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a u64> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<u128> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a u128> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<usize> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a usize> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<f32> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a f32> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<f64> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl ops::AssignRound<&'a f64> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::convert::TryFrom<float::big::Float> for rational::big::Rational>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::<impl std::convert::TryFrom<&'a float::big::Float> for rational::big::Rational>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::traits::fmt_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::float::traits::<impl std::fmt::Display for float::big::ParseFloatError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_min\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::exp_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_max\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::exp_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prec_min\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::prec_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prec_max\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::float::prec_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Round as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Round as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Round as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Round as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Round as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Round as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Round as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Round as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Constant as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Constant as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Constant as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Constant as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Constant as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Constant as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Constant as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Special as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Special as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<float::Special as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Special as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Special as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Special as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"float\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<float::Special as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Neg for complex::big::Complex>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neg_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::NegAssign for complex::big::Complex>::neg_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neg\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Neg for &'a complex::big::Complex>::neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::NegIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::NegIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'a complex::big::Complex> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'a complex::big::Complex> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'a complex::big::Complex> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'a complex::big::Complex> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'a complex::big::Complex> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'a complex::big::Complex> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'a complex::big::Complex> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'a complex::big::Complex> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'a complex::big::Complex> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'a complex::big::Complex> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'a complex::big::Complex> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'a complex::big::Complex> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'a complex::big::Complex> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'a complex::big::Complex> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'a complex::big::Complex> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<&'a complex::big::Complex> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<&'a complex::big::Complex> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<complex::big::Complex> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'a complex::big::Complex> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'a complex::big::Complex> for &'a complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<complex::big::Complex> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'a complex::big::Complex> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'a complex::big::Complex> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<complex::big::Complex> for &'a complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowFrom for complex::big::Complex>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowFrom<&'a complex::big::Complex> for complex::big::Complex>::pow_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowFromRound for complex::big::Complex>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"pow_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowFromRound<&'a complex::big::Complex> for complex::big::Complex>::pow_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<float::big::Float> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'a float::big::Float> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a float::big::Float> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<float::big::Float> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'a float::big::Float> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<float::big::Float> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'a float::big::Float> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<float::big::Float> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::AddOwnedFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for &'a float::big::Float>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<float::big::Float> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'a float::big::Float> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<float::big::Float> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'a float::big::Float> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<float::big::Float> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'a float::big::Float> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a float::big::Float> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<float::big::Float> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'a float::big::Float> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<float::big::Float> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'a float::big::Float> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<float::big::Float> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::SubFromFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for &'a float::big::Float>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<float::big::Float> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'a float::big::Float> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<float::big::Float> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'a float::big::Float> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::SubFromOwnedFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<float::big::Float> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'a float::big::Float> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a float::big::Float> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<float::big::Float> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'a float::big::Float> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<float::big::Float> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'a float::big::Float> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<float::big::Float> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::MulOwnedFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for &'a float::big::Float>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<float::big::Float> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'a float::big::Float> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<float::big::Float> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'a float::big::Float> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<float::big::Float> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'a float::big::Float> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'a float::big::Float> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<float::big::Float> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'a float::big::Float> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<float::big::Float> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'a float::big::Float> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<float::big::Float> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFromFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFromFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::DivFromFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'a complex::big::Complex> for float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'a complex::big::Complex> for &'a float::big::Float>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<float::big::Float> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<&'a float::big::Float> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<float::big::Float> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<&'a float::big::Float> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFromOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFromOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::DivFromOwnedFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<float::big::Float> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'a float::big::Float> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'a float::big::Float> for &'a complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<float::big::Float> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'a float::big::Float> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<float::big::Float> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'a float::big::Float> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<float::big::Float> for &'a complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowOwnedFloatIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowOwnedFloatIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::PowOwnedFloatIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<integer::big::Integer> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'a integer::big::Integer> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'a integer::big::Integer> for &'a complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<integer::big::Integer> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'a integer::big::Integer> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<integer::big::Integer> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'a integer::big::Integer> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<integer::big::Integer> for &'a complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowOwnedIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::PowOwnedIntegerIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<u32> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'t u32> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<u32> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'t u32> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<u32> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'t u32> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<u32> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'t u32> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'t u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'b complex::big::Complex> for &'t u32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<u32> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'t u32> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<u32> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'t u32> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<u32> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'t u32> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<u32> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'t u32> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<u32> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'t u32> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<u32> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'t u32> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'t u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for &'t u32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<u32> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'t u32> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<u32> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'t u32> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<u32> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'t u32> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<u32> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'t u32> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<u32> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'t u32> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<u32> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'t u32> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'t u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'b complex::big::Complex> for &'t u32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<u32> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'t u32> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<u32> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'t u32> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<u32> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'t u32> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<u32> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'t u32> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<u32> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'t u32> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<u32> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'t u32> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for &'t u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for &'t u32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<u32> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<&'t u32> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<u32> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<&'t u32> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFromU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFromU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<i32> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'t i32> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<i32> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'t i32> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<i32> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'t i32> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<i32> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'t i32> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'t i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'b complex::big::Complex> for &'t i32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<i32> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'t i32> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<i32> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'t i32> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<i32> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'t i32> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<i32> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'t i32> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<i32> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'t i32> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<i32> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'t i32> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'t i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for &'t i32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<i32> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'t i32> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<i32> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'t i32> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<i32> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'t i32> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<i32> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'t i32> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<i32> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'t i32> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<i32> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'t i32> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'t i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'b complex::big::Complex> for &'t i32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<i32> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'t i32> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<i32> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'t i32> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<i32> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'t i32> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<i32> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'t i32> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<i32> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'t i32> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<i32> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'t i32> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for &'t i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for &'t i32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<i32> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<&'t i32> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<i32> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<&'t i32> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFromI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFromI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<f32> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'t f32> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<f32> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'t f32> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<f32> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'t f32> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<f32> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'t f32> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'t f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'b complex::big::Complex> for &'t f32>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<f32> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'t f32> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<f32> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'t f32> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<f32> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'t f32> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<f32> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'t f32> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<f32> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'t f32> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<f32> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'t f32> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'t f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for &'t f32>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<f32> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'t f32> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<f32> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'t f32> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<f32> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'t f32> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<f32> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'t f32> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<f32> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'t f32> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<f32> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'t f32> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'t f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'b complex::big::Complex> for &'t f32>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<f32> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'t f32> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<f32> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'t f32> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<f32> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'t f32> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<f32> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'t f32> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<f32> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'t f32> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<f32> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'t f32> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for &'t f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for &'t f32>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<f32> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<&'t f32> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<f32> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<&'t f32> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFromF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFromF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<f64> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'t f64> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<f64> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'t f64> for &'b complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<f64> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'t f64> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<f64> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'t f64> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'t f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'b complex::big::Complex> for &'t f64>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<f64> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'t f64> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<f64> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'t f64> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<f64> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'t f64> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<f64> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'t f64> for &'b complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<f64> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'t f64> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<f64> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'t f64> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'t f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'b complex::big::Complex> for &'t f64>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<f64> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'t f64> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<f64> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'t f64> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<f64> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'t f64> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<f64> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'t f64> for &'b complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<f64> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'t f64> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<f64> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'t f64> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'t f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'b complex::big::Complex> for &'t f64>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<f64> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'t f64> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<f64> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'t f64> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<f64> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'t f64> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<f64> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'t f64> for &'b complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<f64> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'t f64> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<f64> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'t f64> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<complex::big::Complex> for &'t f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'b complex::big::Complex> for &'t f64>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<f64> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"div_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFrom<&'t f64> for complex::big::Complex>::div_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<f64> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"div_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivFromRound<&'t f64> for complex::big::Complex>::div_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivFromF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivFromF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<integer::big::Integer> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'a integer::big::Integer> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a integer::big::Integer> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<integer::big::Integer> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'a integer::big::Integer> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<integer::big::Integer> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'a integer::big::Integer> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<integer::big::Integer> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddOwnedIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::AddOwnedIntegerIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for &'a integer::big::Integer>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<integer::big::Integer> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'a integer::big::Integer> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<integer::big::Integer> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'a integer::big::Integer> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<integer::big::Integer> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'a integer::big::Integer> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a integer::big::Integer> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<integer::big::Integer> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'a integer::big::Integer> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<integer::big::Integer> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'a integer::big::Integer> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<integer::big::Integer> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::SubFromIntegerIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for &'a integer::big::Integer>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<integer::big::Integer> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'a integer::big::Integer> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<integer::big::Integer> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'a integer::big::Integer> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubOwnedIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromOwnedIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::SubFromOwnedIntegerIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<integer::big::Integer> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'a integer::big::Integer> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a integer::big::Integer> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<integer::big::Integer> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'a integer::big::Integer> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<integer::big::Integer> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'a integer::big::Integer> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<integer::big::Integer> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulOwnedIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::MulOwnedIntegerIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'a integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for &'a integer::big::Integer>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<integer::big::Integer> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'a integer::big::Integer> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<integer::big::Integer> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'a integer::big::Integer> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<integer::big::Integer> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'a integer::big::Integer> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'a integer::big::Integer> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<integer::big::Integer> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'a integer::big::Integer> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<integer::big::Integer> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'a integer::big::Integer> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<integer::big::Integer> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivOwnedIntegerIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivOwnedIntegerIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::DivOwnedIntegerIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 591 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<rational::big::Rational> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 592 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<&'a rational::big::Rational> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 593 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a rational::big::Rational> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 594 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<rational::big::Rational> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 595 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<&'a rational::big::Rational> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 596 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<rational::big::Rational> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 597 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<&'a rational::big::Rational> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 599 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 598 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 588 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<rational::big::Rational> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 600 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 589 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddOwnedRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 590 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::AddOwnedRationalIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::big::Complex> for &'a rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<&'a complex::big::Complex> for &'a rational::big::Rational>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<rational::big::Rational> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<&'a rational::big::Rational> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 586 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<rational::big::Rational> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 587 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<&'a rational::big::Rational> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 615 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<rational::big::Rational> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 616 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<&'a rational::big::Rational> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 617 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a rational::big::Rational> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 618 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<rational::big::Rational> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 619 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<&'a rational::big::Rational> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 620 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<rational::big::Rational> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 621 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<&'a rational::big::Rational> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 623 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 622 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 612 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<rational::big::Rational> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 624 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 613 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 614 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::SubFromRationalIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 601 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 602 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 603 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::big::Complex> for &'a rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 604 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<&'a complex::big::Complex> for &'a rational::big::Rational>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 605 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<rational::big::Rational> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 606 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<&'a rational::big::Rational> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 607 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<rational::big::Rational> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 608 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<&'a rational::big::Rational> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 625 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 609 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubOwnedRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 626 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubFromOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 610 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubFromOwnedRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 611 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::SubFromOwnedRationalIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 638 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<rational::big::Rational> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 639 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<&'a rational::big::Rational> for complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 640 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a rational::big::Rational> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 641 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<rational::big::Rational> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 642 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::MulAssign<&'a rational::big::Rational> for complex::big::Complex>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 643 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<rational::big::Rational> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 644 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulAssignRound<&'a rational::big::Rational> for complex::big::Complex>::mul_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 646 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 645 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 635 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<rational::big::Rational> for &'a complex::big::Complex>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 647 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 636 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::MulOwnedRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 637 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::MulOwnedRationalIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 627 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 628 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 629 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Mul<complex::big::Complex> for &'a rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 630 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Mul<&'a complex::big::Complex> for &'a rational::big::Rational>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 631 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<rational::big::Rational> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 632 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFrom<&'a rational::big::Rational> for complex::big::Complex>::mul_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 633 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<rational::big::Rational> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 634 }, DisambiguatedDefPathData { data: ValueNs(\"mul_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::MulFromRound<&'a rational::big::Rational> for complex::big::Complex>::mul_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 651 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<rational::big::Rational> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 652 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Div<&'a rational::big::Rational> for complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 653 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<&'a rational::big::Rational> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 654 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<rational::big::Rational> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 655 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::DivAssign<&'a rational::big::Rational> for complex::big::Complex>::div_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 656 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<rational::big::Rational> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 657 }, DisambiguatedDefPathData { data: ValueNs(\"div_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::DivAssignRound<&'a rational::big::Rational> for complex::big::Complex>::div_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 659 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 658 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 648 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Div<rational::big::Rational> for &'a complex::big::Complex>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 660 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::DivOwnedRationalIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 649 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::DivOwnedRationalIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 650 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<&'a complex::arith::DivOwnedRationalIncomplete<'b>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 661 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shl<u32> for complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 662 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shl<&'t u32> for complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 663 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shl<u32> for &'b complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 664 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shl<&'t u32> for &'b complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 665 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShlAssign<u32> for complex::big::Complex>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 666 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShlAssign<&'t u32> for complex::big::Complex>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 668 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::ShlU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 667 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::ShlU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 669 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shr<u32> for complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 670 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shr<&'t u32> for complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 671 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shr<u32> for &'b complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 672 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shr<&'t u32> for &'b complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 673 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShrAssign<u32> for complex::big::Complex>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 674 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShrAssign<&'t u32> for complex::big::Complex>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 676 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::ShrU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 675 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::ShrU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 679 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<u32> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 680 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'t u32> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 681 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<u32> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 682 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'t u32> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 683 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<u32> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 684 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'t u32> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 686 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowU32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 685 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowU32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 677 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<u32> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 678 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'t u32> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 687 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shl<i32> for complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 688 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shl<&'t i32> for complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 689 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shl<i32> for &'b complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 690 }, DisambiguatedDefPathData { data: ValueNs(\"shl\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shl<&'t i32> for &'b complex::big::Complex>::shl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 691 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShlAssign<i32> for complex::big::Complex>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 692 }, DisambiguatedDefPathData { data: ValueNs(\"shl_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShlAssign<&'t i32> for complex::big::Complex>::shl_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 694 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::ShlI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 693 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::ShlI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 695 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shr<i32> for complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 696 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Shr<&'t i32> for complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 697 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shr<i32> for &'b complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 698 }, DisambiguatedDefPathData { data: ValueNs(\"shr\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Shr<&'t i32> for &'b complex::big::Complex>::shr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 699 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShrAssign<i32> for complex::big::Complex>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 700 }, DisambiguatedDefPathData { data: ValueNs(\"shr_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::ShrAssign<&'t i32> for complex::big::Complex>::shr_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 702 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::ShrI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 701 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::ShrI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 705 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<i32> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 706 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'t i32> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 707 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<i32> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 708 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'t i32> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 709 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<i32> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 710 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'t i32> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 712 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowI32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 711 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowI32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 703 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<i32> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 704 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'t i32> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 715 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<f64> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 716 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'t f64> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 717 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<f64> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 718 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'t f64> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 719 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<f64> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 720 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'t f64> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 722 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowF64Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 721 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowF64Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 713 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<f64> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 714 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'t f64> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 725 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<f32> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 726 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::Pow<&'t f32> for complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 727 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<f32> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 728 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl ops::Pow<&'t f32> for &'b complex::big::Complex>::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 729 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<f32> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 730 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssign<&'t f32> for complex::big::Complex>::pow_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 732 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::PowF32Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 731 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::PowF32Incomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 723 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<f32> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 724 }, DisambiguatedDefPathData { data: ValueNs(\"pow_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::PowAssignRound<&'t f32> for complex::big::Complex>::pow_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 737 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Add<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 738 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Add<complex::arith::MulIncomplete<'a>> for &'a complex::big::Complex>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 739 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::AddAssign<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 740 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddAssignRound<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 742 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::AddMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 741 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::AddMulIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 733 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::arith::MulIncomplete<'a> as std::ops::Add<complex::big::Complex>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 734 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulIncomplete<'a> as std::ops::Add<&'a complex::big::Complex>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 735 }, DisambiguatedDefPathData { data: ValueNs(\"add_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFrom<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::add_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 736 }, DisambiguatedDefPathData { data: ValueNs(\"add_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AddFromRound<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::add_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 748 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::Sub<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 749 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::arith::<impl std::ops::Sub<complex::arith::MulIncomplete<'a>> for &'a complex::big::Complex>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 750 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl std::ops::SubAssign<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 751 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubAssignRound<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::sub_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 753 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubMulIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 752 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubMulIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 743 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::arith::MulIncomplete<'a> as std::ops::Sub<complex::big::Complex>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 744 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::MulIncomplete<'a> as std::ops::Sub<&'a complex::big::Complex>>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 745 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFrom<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::sub_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 746 }, DisambiguatedDefPathData { data: ValueNs(\"sub_from_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::SubFromRound<complex::arith::MulIncomplete<'a>> for complex::big::Complex>::sub_from_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 754 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::arith::SubMulFromIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"arith\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 747 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::arith::<impl ops::AssignRound<complex::arith::SubMulFromIncomplete<'a>> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_nan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::new_nan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_val\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::with_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_val_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::with_val_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_prec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::set_prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_prec_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::set_prec_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::as_raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::parse_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::to_string_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_string_radix_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::to_string_radix_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"real\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::real::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"imag\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::imag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"imag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::imag::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mut_real\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mut_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mut_real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::mut_real::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mut_imag\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mut_imag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mut_imag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::mut_imag::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_real_imag\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::as_mut_real_imag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_real_imag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::as_mut_real_imag::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut_real_imag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::as_mut_real_imag::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_real_imag\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::into_real_imag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_neg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::as_neg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_conj\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::as_conj"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mul_i\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::as_mul_i"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ord\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::as_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex::as_ord::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::eq0"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp_abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cmp_abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_add_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_add_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_add_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::mul_add_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_sub_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_sub_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_sub_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::mul_sub_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"proj\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::proj"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"proj_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::proj_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"proj_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::proj_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::square_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::square_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::square_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sqrt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sqrt_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sqrt_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sqrt_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::sqrt_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"conj\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::conj"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"conj_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::conj_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"conj_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::conj_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::abs_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"abs_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::abs_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arg\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::arg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arg_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::arg_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arg_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::arg_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"arg_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::arg_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_i\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_i"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_i_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_i_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_i_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::mul_i_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul_i_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::mul_i_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::recip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::recip_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::recip_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recip_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::recip_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"norm\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::norm"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"norm_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::norm_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"norm_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::norm_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"norm_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::norm_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::ln"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::ln_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::ln_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ln_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::ln_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::log10"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::log10_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::log10_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"log10_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::log10_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"root_of_unity\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::root_of_unity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::exp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::exp_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::exp_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exp_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::exp_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sin_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sin_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::sin_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cos_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cos_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cos_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::cos_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sin_cos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sin_cos_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sin_cos_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sin_cos_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::sin_cos_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::tan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::tan_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::tan_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tan_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::tan_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sinh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sinh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::sinh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sinh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::sinh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cosh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cosh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::cosh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cosh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::cosh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::tanh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::tanh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::tanh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tanh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::tanh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::asin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::asin_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::asin_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asin_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::asin_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::acos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::acos_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::acos_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acos_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::acos_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::atan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::atan_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::atan_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atan_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::atan_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::asinh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::asinh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::asinh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"asinh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::asinh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::acosh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::acosh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::acosh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"acosh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::acosh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::atanh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::atanh_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::Complex::atanh_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"atanh_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::atanh_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::random_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"random_cont\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::Complex::random_cont"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::SumIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::SumIncomplete<'a, I>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::big::Complex as ops::AssignRound<complex::big::SumIncomplete<'a, I>>>::assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::big::Complex as ops::AssignRound<complex::big::SumIncomplete<'a, I>>>::assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as std::ops::Add<complex::big::SumIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as std::ops::AddAssign<complex::big::SumIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AddAssignRound<complex::big::SumIncomplete<'a, I>>>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::big::Complex as ops::AddAssignRound<complex::big::SumIncomplete<'a, I>>>::add_assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::big::Complex as ops::AddAssignRound<complex::big::SumIncomplete<'a, I>>>::add_assign_round::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::DotIncomplete<'a, I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prods_real\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::prods_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prods_imag\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::prods_imag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::DotIncomplete<'a, I>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as std::ops::Add<complex::big::DotIncomplete<'a, I>>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as std::ops::AddAssign<complex::big::DotIncomplete<'a, I>>>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AddAssignRound<complex::big::DotIncomplete<'a, I>>>::add_assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ProjIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::ProjIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::SquareIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::SquareIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::SqrtIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::SqrtIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ConjIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::ConjIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AbsIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::<impl ops::AssignRound<complex::big::AbsIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ArgIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::<impl ops::AssignRound<complex::big::ArgIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::MulIIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::MulIIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::RecipIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::RecipIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::NormIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::<impl ops::AssignRound<complex::big::NormIncomplete<'a>> for float::big::Float>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::LnIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::LnIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Log10Incomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::Log10Incomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::RootOfUnityIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::RootOfUnityIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ExpIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::ExpIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::SinIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::SinIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::CosIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::CosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::SinCosIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut complex::big::Complex, &'c mut complex::big::Complex) as ops::AssignRound<complex::big::SinCosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(complex::big::Complex, complex::big::Complex) as ops::AssignRound<complex::big::SinCosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(&'b mut complex::big::Complex, &'c mut complex::big::Complex) as Assign<complex::big::SinCosIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(complex::big::Complex, complex::big::Complex) as Assign<complex::big::SinCosIncomplete<'a>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::TanIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::TanIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::SinhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::SinhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::CoshIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::CoshIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::TanhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::TanhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AsinIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::AsinIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AcosIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::AcosIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AtanIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::AtanIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AsinhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::AsinhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AcoshIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::AcoshIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::AtanhIncomplete<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::AtanhIncomplete<'a>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as Assign<complex::big::RandomBitsIncomplete<'a, 'b>>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::RandomCont<'a, 'b>>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::BorrowComplex<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::BorrowComplex<'a> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::big::BorrowComplex<'a> as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append_to_string\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::append_to_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ParseIncomplete as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::big::Complex as ops::AssignRound<complex::big::ParseIncomplete>>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::big::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ParseComplexError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ParseErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::ParseComplexError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_round2\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::raw_round2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ordering1\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::ordering1"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ordering2\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::ordering2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ordering4\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::big::ordering4"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"big\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::big::Complex as inner::Inner>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<integer::big::Integer> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for integer::big::Integer>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(integer::big::Integer, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (integer::big::Integer, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<rational::big::Rational> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for rational::big::Rational>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(rational::big::Rational, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (rational::big::Rational, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<float::big::Float> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for float::big::Float>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::big::Float, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::big::Float, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<float::Special> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for float::Special>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(float::Special, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (float::Special, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<i8> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for i8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i8, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i8, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<i16> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for i16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i16, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i16, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<i32> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for i32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 251 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i32, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i32, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<i64> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for i64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i64, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i64, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<i128> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for i128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 330 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(i128, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (i128, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<isize> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for isize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 367 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 374 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(isize, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (isize, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 381 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<u8> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for u8>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 396 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 404 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 412 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u8, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u8, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<u16> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for u16>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 455 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u16, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u16, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<u32> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for u32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 480 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 487 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u32, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u32, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<u64> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 388 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for u64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 506 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u64, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u64, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<u128> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for u128>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 537 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 538 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 539 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 540 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 541 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 542 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 543 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 544 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 545 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 546 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 547 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 548 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 549 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 550 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 551 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 552 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 553 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 554 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 555 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 556 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 557 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 558 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 559 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 560 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 561 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 562 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 563 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 564 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 565 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 566 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 567 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 568 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 569 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(u128, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 570 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (u128, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 571 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<usize> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 572 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for usize>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 573 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 574 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 575 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 576 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 577 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 578 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 579 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 580 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 581 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 582 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 583 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 584 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 585 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 586 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 587 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 588 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 589 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 590 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 591 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 592 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 593 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 594 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 595 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 596 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 597 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 598 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 599 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 600 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 601 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 602 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 603 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 604 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 605 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 606 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 607 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(usize, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 608 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (usize, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 609 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<f32> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 610 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for f32>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 613 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 614 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 615 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 616 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 617 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 618 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 619 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 620 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 621 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 622 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 623 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 624 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 625 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 626 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 627 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 628 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 629 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 630 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 631 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 632 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 633 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 634 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 635 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 636 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 637 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 638 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 639 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 640 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 641 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 642 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 643 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 644 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 645 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 646 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 647 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f32, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 648 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f32, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 611 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<f64> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 612 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for f64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 649 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, integer::big::Integer)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 650 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, integer::big::Integer)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 651 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, rational::big::Rational)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 652 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, rational::big::Rational)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 653 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, float::big::Float)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 654 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, float::big::Float)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 655 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, float::Special)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 656 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, float::Special)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 657 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, i8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 658 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, i8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 659 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, i16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 660 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, i16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 661 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, i32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 662 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, i32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 663 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, i64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 664 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, i64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 665 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, i128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 666 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, i128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 667 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, isize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 668 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, isize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 669 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, u8)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 670 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, u8)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 671 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, u16)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 672 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, u16)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 673 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, u32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 674 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, u32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 675 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, u64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 676 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, u64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 677 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, u128)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 678 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, u128)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 679 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, usize)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 680 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, usize)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 681 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, f32)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 682 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, f32)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 683 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<(f64, f64)> for complex::big::Complex>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cmp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 684 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::cmp::<impl std::cmp::PartialEq<complex::big::Complex> for (f64, f64)>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::ord::OrdComplex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::ord::OrdComplex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::ord::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_complex\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::ord::OrdComplex::as_complex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_complex_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::ord::OrdComplex::as_complex_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::ord::OrdComplex as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::ord::OrdComplex as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::ord::OrdComplex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::ord::OrdComplex as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::ord::OrdComplex as std::convert::From<complex::big::Complex>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ord\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::ord::<impl std::convert::From<complex::ord::OrdComplex> for complex::big::Complex>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::small::SmallComplex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::small::Mpc as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::small::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_nonreallocating_complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::small::SmallComplex::as_nonreallocating_complex::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"re_is_first\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::small::SmallComplex::re_is_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_d\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::small::SmallComplex::update_d"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as std::ops::Deref>::deref::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as std::convert::From<Re>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as std::convert::From<Re>>::from::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as std::convert::From<(Re, Im)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<i8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<i8>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i8, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<i16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<i16>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i16, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<i32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<i32>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i32, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<i64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<i64>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i64, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<i128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<i128>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(i128, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<isize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<isize>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(isize, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<u8>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<u8>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u8, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<u16>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<u16>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u16, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<u32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<u32>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u32, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<u64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<u64>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u64, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<u128>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<u128>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 168 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(u128, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<usize>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<usize>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 182 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(usize, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<f32>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<f32>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f32, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<f64>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<complex::small::SmallComplex as Assign<f64>>::assign::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, i8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, i16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, i32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 207 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, i64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, i128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, isize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, u8)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, u16)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, u32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, u64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 214 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, u128)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, usize)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, f32)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<complex::small::SmallComplex as Assign<(f64, f64)>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::small::SmallComplex as Assign<&'a complex::small::SmallComplex>>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"small\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<complex::small::SmallComplex as Assign>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::clone::Clone for complex::big::Complex>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::clone::Clone for complex::big::Complex>::clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::ops::Drop for complex::big::Complex>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::convert::From<Re> for complex::big::Complex>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::convert::From<(Re, Im)> for complex::big::Complex>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::Display for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::Debug for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::LowerExp for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::UpperExp for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::Binary for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::Octal for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::LowerHex for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl std::fmt::UpperHex for complex::big::Complex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl Assign<T> for complex::big::Complex>::assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl ops::AssignRound for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl ops::AssignRound<&'a complex::big::Complex> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl ops::AssignRound<Re> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl ops::AssignRound<(Re, Im)> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assign_round\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::<impl ops::AssignRound<&'a (Re, Im)> for complex::big::Complex>::assign_round"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt_radix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::complex::traits::fmt_radix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"traits\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::complex::traits::<impl std::fmt::Display for complex::big::ParseComplexError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prec\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as complex::Prec>::prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"complex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"prec\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(u32, u32) as complex::Prec>::prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rand::RandState<'a> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rand::RandState<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<<rand::RandState<'a> as std::clone::Clone>::clone::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rand::RandState<'a> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_mersenne_twister\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::new_mersenne_twister"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_linear_congruential\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::new_linear_congruential"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_linear_congruential_size\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::new_linear_congruential_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_custom\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::new_custom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_custom_boxed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::new_custom_boxed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rand::RandState::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rand::RandState::as_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"as_raw_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::as_raw_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"seed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"below\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandState::below"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"RandGen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_bits\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::RandGen::gen_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"RandGen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"seed\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rand::RandGen::seed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"RandGen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"boxed_clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"rug::rand::RandGen::boxed_clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::rand::_static_assertions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_seed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_seed::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_seed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_seed::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_get\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_get::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_clear\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_clear::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_iset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_iset::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_boxed_seed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_boxed_seed::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_boxed_seed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_boxed_seed::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_boxed_get\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_boxed_get::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_boxed_clear\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_boxed_clear::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"custom_boxed_iset\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ClosureExpr, disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::custom_boxed_iset::{{closure}}::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_copy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::gen_copy::Ptr<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rand\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rand::RandState<'a> as inner::Inner>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"_static_assertions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rug::_static_assertions"}
