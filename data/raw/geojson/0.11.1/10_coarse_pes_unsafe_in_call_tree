{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_coords_value\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_coords_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_bbox\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_bbox"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_foreign_members\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_foreign_members"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_properties\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_properties"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_coords_one_pos\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_coords_one_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_coords_1d_pos\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_coords_1d_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_coords_2d_pos\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_coords_2d_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_coords_3d_pos\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_coords_3d_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_geometries\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_geometries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_id\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_geometry\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_geometry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_features\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::get_features"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"json_to_position\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::json_to_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"json_to_1d_positions\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::json_to_1d_positions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"json_to_2d_positions\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::json_to_2d_positions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"json_to_3d_positions\"), disambiguator: 0 }]","has_unsafe":true,"name":"util::json_to_3d_positions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geojson::GeoJson as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geojson::GeoJson as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"geojson::<impl std::convert::From<&'a geojson::GeoJson> for serde_json::Map<std::string::String, serde_json::Value>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geojson::GeoJson as std::convert::From<geometry::Geometry>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geojson::GeoJson as std::convert::From<feature::Feature>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geojson::GeoJson as std::convert::From<feature_collection::FeatureCollection>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_object\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as FromObject>::from_object"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_object\"), disambiguator: 0 }]","has_unsafe":true,"name":"geojson::get_object"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geojson\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geojson::GeoJson as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Value as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Value as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::<impl std::convert::From<&'a geometry::Value> for serde_json::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Value as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Geometry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"geometry::Geometry::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"geometry::<impl std::convert::From<&'a geometry::Geometry> for serde_json::Map<std::string::String, serde_json::Value>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_object\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry as FromObject>::from_object"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geometry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Geometry as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature::Feature as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature::Feature as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature::Feature as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature::Feature as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"feature::<impl std::convert::From<&'a feature::Feature> for serde_json::Map<std::string::String, serde_json::Value>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_object\"), disambiguator: 0 }]","has_unsafe":true,"name":"<feature::Feature as FromObject>::from_object"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<feature::Feature as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<feature::Feature as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature_collection::FeatureCollection as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature_collection::FeatureCollection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature_collection::FeatureCollection as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<feature_collection::FeatureCollection as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"feature_collection::<impl std::convert::From<&'a feature_collection::FeatureCollection> for serde_json::Map<std::string::String, serde_json::Value>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_object\"), disambiguator: 0 }]","has_unsafe":true,"name":"<feature_collection::FeatureCollection as FromObject>::from_object"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<feature_collection::FeatureCollection as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"feature_collection\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<feature_collection::FeatureCollection as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_point_type\"), disambiguator: 0 }]","has_unsafe":true,"name":"conversion::create_point_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_line_string_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_line_string_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_multi_line_string_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_multi_line_string_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_polygon_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_polygon_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_multi_polygon_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_multi_polygon_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_geo_point\"), disambiguator: 0 }]","has_unsafe":true,"name":"conversion::create_geo_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_geo_line_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_geo_line_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_geo_multi_line_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_geo_multi_line_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_geo_polygon\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_geo_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create_geo_multi_polygon\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::create_geo_multi_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Value as conversion::TryInto<geo_types::Point<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"conversion::<impl std::convert::From<&'a geo_types::Point<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as conversion::TryInto<geo_types::MultiPoint<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::<impl std::convert::From<&'a geo_types::MultiPoint<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as conversion::TryInto<geo_types::LineString<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::<impl std::convert::From<&'a geo_types::LineString<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as conversion::TryInto<geo_types::MultiLineString<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::<impl std::convert::From<&'a geo_types::MultiLineString<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as conversion::TryInto<geo_types::Polygon<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::<impl std::convert::From<&'a geo_types::Polygon<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as conversion::TryInto<geo_types::MultiPolygon<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::<impl std::convert::From<&'a geo_types::MultiPolygon<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":false,"name":"<geometry::Value as conversion::TryInto<geo_types::GeometryCollection<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"try_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<geometry::Value as conversion::TryInto<geo_types::Geometry<T>>>::try_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"conversion::<impl std::convert::From<&'a geo_types::GeometryCollection<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"conversion\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"conversion::<impl std::convert::From<&'a geo_types::Geometry<T>> for geometry::Value>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Error as std::error::Error>::description"}
