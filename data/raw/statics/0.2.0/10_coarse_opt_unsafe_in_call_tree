{"def_path":"[DisambiguatedDefPathData { data: Module(\"angle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<angle::Angle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_rad\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::angle::Angle::as_rad"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_deg\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::angle::Angle::as_deg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::angle::<impl std::convert::From<angle::Angle> for f64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<angle::Angle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"angle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_approx_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<angle::Angle as std::cmp::PartialEq>::eq::is_approx_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mass::Mass as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mass::Mass as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mass::Mass as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_gram\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::mass::Mass::as_gram"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_lb\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::mass::Mass::as_lb"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mass::Mass as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mass::Mass as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mass\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::mass::<impl std::convert::From<mass::Mass> for f64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unit\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::vector::Vector::unit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_mag_and_angle\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::vector::Vector::from_mag_and_angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mag\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::vector::Vector::mag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"angle\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::vector::Vector::angle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertical\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::vector::Vector::vertical"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"horizontal\"), disambiguator: 0 }]","fn_type":"Safe","name":"statics::vector::Vector::horizontal"}
