{"def_path":"[DisambiguatedDefPathData { data: Module(\"scored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<scored::MinScored<K, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<scored::MinScored<K, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<scored::MinScored<K, T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<scored::MinScored<K, T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scored\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<scored::MinScored<K, T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_cyclic_undirected\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::is_cyclic_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_cyclic\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::is_cyclic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toposort_generic\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::toposort_generic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_cyclic_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::is_cyclic_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"toposort\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::toposort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::scc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"condensation\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::condensation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connected_components\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::connected_components"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"algo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min_spanning_tree\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::algo::min_spanning_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_key\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::graphmap::edge_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::from_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"node_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::node_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"edge_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::edge_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::add_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::remove_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::contains_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::add_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove_single_edge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::remove_single_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::remove_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::contains_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"edge_weight\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::edge_weight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"edge_weight_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E>>::edge_weight_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"all_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E>>::all_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E> as std::iter::FromIterator<Item>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E> as std::iter::Extend<Item>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Nodes<'a, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Nodes<'a, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Neighbors<'a, N> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Neighbors<'a, N> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Neighbors<'a, N> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Neighbors<'a, N> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::Edges<'a, N, E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::AllEdges<'a, N, E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E> as std::ops::Index<(N, N)>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E> as std::ops::IndexMut<(N, N)>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Ptr<'b, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ptr_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"petgraph::graphmap::ptr_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Ptr<'b, T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Ptr<'b, T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Ptr<'b, T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Ptr<'b, T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::Ptr<'b, T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graphmap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::Ptr<'b, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as graph::IndexType>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as graph::IndexType>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<usize as graph::IndexType>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as graph::IndexType>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as graph::IndexType>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u32 as graph::IndexType>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as graph::IndexType>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as graph::IndexType>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u16 as graph::IndexType>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as graph::IndexType>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as graph::IndexType>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","fn_type":"Safe","name":"<u8 as graph::IndexType>::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndex<Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndex<Ix> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix>>::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"_into_edge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndex<Ix>>::_into_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndex<Ix> as std::convert::From<Ix>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"node_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::graph::node_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edge_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::graph::edge_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndex<Ix> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix>>::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"_into_node\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndex<Ix>>::_into_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Node<N, Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Node<N, Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Node<N, Ix>>::next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Edge<E, Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Edge<E, Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Edge<E, Ix>>::next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"source\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Edge<E, Ix>>::source"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"target\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Edge<E, Ix>>::target"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix> as std::clone::Clone>::clone_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"index_twice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::graph::index_twice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"new_undirected\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Undirected>>::new_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"node_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::node_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edge_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::edge_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"is_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::is_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"add_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::add_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"node_weight\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::node_weight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"node_weight_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::node_weight_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"add_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::add_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"update_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::update_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edge_weight\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::edge_weight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edge_weight_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::edge_weight_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edge_endpoints\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::edge_endpoints"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"remove_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::remove_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"change_edge_links\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::change_edge_links"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"remove_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::remove_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"remove_edge_adjust_indices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::remove_edge_adjust_indices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::neighbors_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors_undirected\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::neighbors_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edges_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::edges_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edges_undirected\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::edges_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"find_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::find_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"find_edge_undirected\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::find_edge_undirected"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"externals\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::externals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"node_indices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::node_indices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"node_weights_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::node_weights_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edge_indices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::edge_indices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"edge_weights_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::edge_weights_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"raw_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::raw_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"raw_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::raw_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"into_nodes_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::into_nodes_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"first_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::first_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"walk_edges_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::walk_edges_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"index_twice_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::index_twice_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reverse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::reverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clear_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::clear_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"capacity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::reserve_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::reserve_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_exact_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::reserve_exact_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reserve_exact_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::reserve_exact_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"shrink_to_fit_nodes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::shrink_to_fit_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"shrink_to_fit_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::shrink_to_fit_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"shrink_to_fit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::shrink_to_fit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"retain_nodes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::retain_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"retain_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::retain_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::from_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"extend_with_edges\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::extend_with_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"filter_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix>>::filter_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"into_edge_type\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix>>::into_edge_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Externals<'a, N, Ty, Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Neighbors<'a, E, Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Neighbors<'a, E, Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"detach\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Neighbors<'a, E, Ix>>::detach"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgesMut<'a, E, Ix>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgesMut<'a, E, Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Edges<'a, E, Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Edges<'a, E, Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeWeightsMut<'a, N, Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeWeightsMut<'a, N, Ix> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeWeightsMut<'a, E, Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeWeightsMut<'a, E, Ix> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as std::ops::Index<graph::NodeIndex<Ix>>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as std::ops::IndexMut<graph::NodeIndex<Ix>>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as std::ops::Index<graph::EdgeIndex<Ix>>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as std::ops::IndexMut<graph::EdgeIndex<Ix>>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::NodeIndex<Ix> as graph::GraphIndex>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"is_node_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndex<Ix> as graph::GraphIndex>::is_node_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::EdgeIndex<Ix> as graph::GraphIndex>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"is_node_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndex<Ix> as graph::GraphIndex>::is_node_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::WalkNeighbors<Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::WalkNeighbors<Ix>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"next_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::WalkNeighbors<Ix>>::next_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"next_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::WalkNeighbors<Ix>>::next_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::WalkEdges<Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::WalkEdges<Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::WalkEdges<Ix>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"next_neighbor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::WalkEdges<Ix>>::next_neighbor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"enumerate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::graph::enumerate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndices<Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndices<Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndices<Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndices<Ix> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::NodeIndices<Ix> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndices<Ix> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndices<Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndices<Ix> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndices<Ix> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::EdgeIndices<Ix> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<dot::Dot<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_config\"), disambiguator: 0 }]","fn_type":"Safe","name":"<dot::Dot<'a, G>>::with_config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<dot::Config as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Config as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Config as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<dot::Config as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"graph_fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Dot<'a, graph::Graph<N, E, Ty, Ix>>>::graph_fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Dot<'a, graph::Graph<N, E, Ty, Ix>> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Dot<'a, graph::Graph<N, E, Ty, Ix>> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"graphmap_fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Dot<'a, graphmap::GraphMap<N, E>>>::graphmap_fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Dot<'a, graphmap::GraphMap<N, E>> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Dot<'a, graphmap::GraphMap<N, E>> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"write_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Escaper<W> as std::fmt::Write>::write_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"write_char\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::Escaper<W> as std::fmt::Write>::write_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<dot::Escaped<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dot\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<dot::DebugFmt<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as visit::NeighborIter<'a>>::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as visit::NeighborIter<'a>>::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::AsUndirected<&'b graph::Graph<N, E, Ty, Ix>> as visit::NeighborIter<'a>>::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Reversed<&'b graph::Graph<N, E, Ty, Ix>> as visit::NeighborIter<'a>>::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graph::Graph<N, E, Ty, Ix> as visit::NeighborsDirected<'a>>::neighbors_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors_directed\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Reversed<&'b G> as visit::NeighborsDirected<'a>>::neighbors_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"externals\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix> as visit::Externals<'a>>::externals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"externals\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Reversed<&'b G> as visit::Externals<'a>>::externals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"visit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fixedbitset::FixedBitSet as visit::VisitMap<graph::NodeIndex<Ix>>>::visit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_visited\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fixedbitset::FixedBitSet as visit::VisitMap<graph::NodeIndex<Ix>>>::is_visited"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"visit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fixedbitset::FixedBitSet as visit::VisitMap<graph::EdgeIndex<Ix>>>::visit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_visited\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fixedbitset::FixedBitSet as visit::VisitMap<graph::EdgeIndex<Ix>>>::is_visited"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"visit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::collections::HashSet<N> as visit::VisitMap<N>>::visit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_visited\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::collections::HashSet<N> as visit::VisitMap<N>>::is_visited"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix> as visit::Visitable>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"reset_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graph::Graph<N, E, Ty, Ix> as visit::Revisitable>::reset_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"reset_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Reversed<&'a G> as visit::Revisitable>::reset_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as visit::Visitable>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"reset_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as visit::Revisitable>::reset_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::AsUndirected<&'a G> as visit::Visitable>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Reversed<&'a G> as visit::Visitable>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"adjacency_matrix\"), disambiguator: 0 }]","fn_type":"Safe","name":"<graphmap::GraphMap<N, E> as visit::GetAdjacencyMatrix>::adjacency_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"is_adjacent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<graphmap::GraphMap<N, E> as visit::GetAdjacencyMatrix>::is_adjacent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Dfs<N, VM> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<visit::Dfs<N, VM> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Dfs<N, VM>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Dfs<N, VM>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"move_to\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Dfs<N, VM>>::move_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Dfs<N, VM>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::DfsIter<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"move_to\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::DfsIter<'a, G>>::move_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::DfsIter<'a, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<visit::DfsIter<'a, G> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::DfsIter<'a, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Bfs<N, VM> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Bfs<N, VM>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Bfs<N, VM>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::BfsIter<'a, G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::BfsIter<'a, G> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<visit::BfsIter<'a, G> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::BfsIter<'a, G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Topo<N, VM> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Topo<N, VM>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Topo<N, VM>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Topo<N, VM>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::Topo<N, VM>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::SubTopo<N, VM> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::SubTopo<N, VM>>::from_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::SubTopo<N, VM>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"reset_with_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::SubTopo<N, VM>>::reset_with_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"discover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::SubTopo<N, VM>>::discover"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"visit\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<visit::SubTopo<N, VM>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<unionfind::UnionFind<K> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<unionfind::UnionFind<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<unionfind::UnionFind<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<unionfind::UnionFind<K>>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<unionfind::UnionFind<K>>::find_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<unionfind::UnionFind<K>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unionfind\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_labeling\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<unionfind::UnionFind<K>>::into_labeling"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dijkstra\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"dijkstra\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::dijkstra::dijkstra"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::Vf2State<Ty, Ix> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isomorphism::Vf2State<Ty, Ix>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_complete\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::Vf2State<Ty, Ix>>::is_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_mapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isomorphism::Vf2State<Ty, Ix>>::push_mapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_mapping\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isomorphism::Vf2State<Ty, Ix>>::pop_mapping"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_out_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::Vf2State<Ty, Ix>>::next_out_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_in_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isomorphism::Vf2State<Ty, Ix>>::next_in_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_rest_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::Vf2State<Ty, Ix>>::next_rest_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_isomorphic\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::isomorphism::is_isomorphic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_isomorphic_matching\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::isomorphism::is_isomorphic_matching"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"enabled\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::NoSemanticMatch as isomorphism::SemanticMatcher<T>>::enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::NoSemanticMatch as isomorphism::SemanticMatcher<T>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"enabled\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as isomorphism::SemanticMatcher<T>>::enabled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<F as isomorphism::SemanticMatcher<T>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_match\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::isomorphism::try_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_match\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::try_match::OpenList as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_match\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<isomorphism::try_match::OpenList as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"isomorphism\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_match\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<isomorphism::try_match::OpenList as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traits_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"adjacency_matrix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::traits_graph::<impl visit::GetAdjacencyMatrix for graph::Graph<N, E, Ty, Ix>>::adjacency_matrix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"traits_graph\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_adjacent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"petgraph::traits_graph::<impl visit::GetAdjacencyMatrix for graph::Graph<N, E, Ty, Ix>>::is_adjacent"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<EdgeDirection as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<EdgeDirection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<EdgeDirection as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<EdgeDirection as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<EdgeDirection as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<EdgeDirection as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<EdgeDirection as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"opposite\"), disambiguator: 0 }]","fn_type":"Safe","name":"petgraph::EdgeDirection::opposite"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Directed as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Directed as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Undirected as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Undirected as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_directed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Directed as EdgeType>::is_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_directed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Undirected as EdgeType>::is_directed"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_weighted_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(Ix, Ix) as IntoWeightedEdge<E>>::into_weighted_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_weighted_edge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(Ix, Ix, E) as IntoWeightedEdge<E>>::into_weighted_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into_weighted_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<(Ix, Ix, &'a E) as IntoWeightedEdge<E>>::into_weighted_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into_weighted_edge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a (Ix, Ix) as IntoWeightedEdge<E>>::into_weighted_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into_weighted_edge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a (Ix, Ix, E) as IntoWeightedEdge<E>>::into_weighted_edge"}
