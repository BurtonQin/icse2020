{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8) as puzzle::vector::VectorDifference<(i8, i8)>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8, i8) as puzzle::vector::VectorDifference<(i8, i8, i8)>>::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8) as puzzle::vector::VectorAdd<(i8, i8)>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"vector\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8, i8) as puzzle::vector::VectorAdd<(i8, i8, i8)>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"symmetry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::symmetry::CubeSymmetry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"symmetry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"pack::puzzle::piece::symmetry::CubeSymmetryIterator::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"symmetry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::symmetry::CubeSymmetryIterator as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"symmetry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8, i8) as puzzle::piece::symmetry::Transformable>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"symmetry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8) as puzzle::piece::symmetry::Transformable>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"translation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::translation::Translation<(i8, i8, i8)>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<(i8, i8, i8)>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"d2\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<(i8, i8)>>::d2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as puzzle::piece::position::Positionable<T>>::to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_reference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as puzzle::piece::position::Normalizable<T>>::to_reference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_reference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8, i8) as puzzle::piece::position::Normalizable<(i8, i8, i8)>>::to_reference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_reference\"), disambiguator: 0 }]","fn_type":"Safe","name":"<(i8, i8) as puzzle::piece::position::Normalizable<(i8, i8)>>::to_reference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<(i8, i8, i8)> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<(i8, i8)> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as puzzle::piece::symmetry::Transformable>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::position::Position<T> as puzzle::piece::translation::Translatable<T>>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"named\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T>>::named"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<(i8, i8, i8)> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<(i8, i8)> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"transform\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as puzzle::piece::symmetry::Transformable>::transform"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as puzzle::piece::translation::Translatable<T>>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"minimum_position\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::Piece<T> as puzzle::piece::position::MinimumPosition<T>>::minimum_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::PositionIterator<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"entity\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::entity::PositionIterator<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_name\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T>>::with_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::Template<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::PieceIterator<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::piece::template::PieceIterator<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"piece\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"pack::puzzle::piece::template::<impl std::convert::From<puzzle::piece::template::Template<T>> for puzzle::piece::entity::Piece<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::Bag<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::BagSelectionIterator<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"pieces\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::pieces::BagSelectionIterator<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_packed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T>>::is_packed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fits\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T>>::fits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"place\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T>>::place"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"minimum_position\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Target<T> as puzzle::piece::position::MinimumPosition<T>>::minimum_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Solution<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Solution<T>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"record\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Solution<T>>::record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Solution<(i8, i8, i8)> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<puzzle::solver::Solution<(i8, i8)> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"solve\"), disambiguator: 0 }]","fn_type":"Safe","name":"pack::puzzle::solver::solve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"puzzle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"solver\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"solve_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"pack::puzzle::solver::solve_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"target\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"brick\"), disambiguator: 0 }]","fn_type":"Safe","name":"pack::util::target::brick"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"target\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rectangle\"), disambiguator: 0 }]","fn_type":"Safe","name":"pack::util::target::rectangle"}
