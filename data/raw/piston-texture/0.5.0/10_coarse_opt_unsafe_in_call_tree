{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flip_vertical\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::ops::flip_vertical"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ops\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"alpha_to_rgba8\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::ops::alpha_to_rgba8"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"ImageSize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_width\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::ImageSize::get_width"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"ImageSize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_height\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::ImageSize::get_height"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_convert_gamma\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_convert_gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_convert_gamma\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_convert_gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert_gamma\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::convert_gamma"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_compress\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_compress"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_compress\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_compress"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compress\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::compress"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_generate_mipmap\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_generate_mipmap"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_generate_mipmap\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_generate_mipmap"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"generate_mipmap\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::generate_mipmap"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_min"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_min\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_min"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"min\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::min"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mag\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_mag"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_mag\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_mag"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mag\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::mag"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mipmap\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_mipmap"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_mipmap\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_mipmap"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mipmap\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::mipmap"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_filter\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::get_filter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_filter\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::set_filter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","fn_type":"Safe","name":"texture::TextureSettings::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Format as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Format as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Filter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Filter as std::fmt::Debug>::fmt"}
