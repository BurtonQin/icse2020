{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::OpCodes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::OpCodes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::OpCodes as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::OpCodes as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::OpCodes as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bitvec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::bitvec::Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::OpCodes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::OpCodes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::OpCodes as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::OpCodes as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::OpCodes as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"integer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::integer::Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::OpCodes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::OpCodes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::OpCodes as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::OpCodes as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::OpCodes as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::Sorts as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::core::Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::OpCodes<X, Y, Z> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::OpCodes<X, Y, Z> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::OpCodes<X, Y, Z> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::OpCodes<X, Y, Z> as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::OpCodes<X, Y, Z> as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::Sorts<X, Y> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::Sorts<X, Y> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::Sorts<X, Y> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"array_ex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::array_ex::Sorts<X, Y>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::OpCodes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::OpCodes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::OpCodes as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::OpCodes as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::OpCodes as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real::Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::OpCodes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::OpCodes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::OpCodes as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::OpCodes as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::OpCodes as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"theories\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real_ints\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<theories::real_ints::Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_bv::<impl std::convert::Into<logics::qf_bv::QF_BV_Sorts> for theories::bitvec::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_bv::<impl std::convert::Into<logics::qf_bv::QF_BV_Sorts> for theories::core::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Fn as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Fn as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_bv::<impl std::convert::Into<logics::qf_bv::QF_BV_Fn> for theories::bitvec::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_bv::<impl std::convert::Into<logics::qf_bv::QF_BV_Fn> for theories::core::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Fn as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Fn as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV_Fn as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_bv::QF_BV as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_bv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"free_var\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<logics::qf_bv::QF_BV as backends::backend::Logic>::free_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_aufbv::<impl std::convert::Into<logics::qf_aufbv::QF_AUFBV_Sorts> for theories::bitvec::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_aufbv::<impl std::convert::Into<logics::qf_aufbv::QF_AUFBV_Sorts> for theories::core::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_aufbv::<impl std::convert::Into<logics::qf_aufbv::QF_AUFBV_Sorts> for theories::array_ex::Sorts<logics::qf_aufbv::QF_AUFBV_Sorts, logics::qf_aufbv::QF_AUFBV_Sorts>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Fn as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Fn as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_aufbv::<impl std::convert::Into<logics::qf_aufbv::QF_AUFBV_Fn> for theories::bitvec::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_aufbv::<impl std::convert::Into<logics::qf_aufbv::QF_AUFBV_Fn> for theories::core::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_aufbv::<impl std::convert::Into<logics::qf_aufbv::QF_AUFBV_Fn> for theories::array_ex::OpCodes<logics::qf_aufbv::QF_AUFBV_Sorts, logics::qf_aufbv::QF_AUFBV_Sorts, logics::qf_aufbv::QF_AUFBV_Fn>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Fn as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Fn as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV_Fn as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_aufbv::QF_AUFBV as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_aufbv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"free_var\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<logics::qf_aufbv::QF_AUFBV as backends::backend::Logic>::free_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::<impl std::convert::Into<logics::qf_abv::QF_ABV_Sorts> for theories::bitvec::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::<impl std::convert::Into<logics::qf_abv::QF_ABV_Sorts> for theories::core::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::<impl std::convert::Into<logics::qf_abv::QF_ABV_Sorts> for theories::array_ex::Sorts<logics::qf_abv::QF_ABV_Sorts, logics::qf_abv::QF_ABV_Sorts>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Fn as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Fn as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::<impl std::convert::Into<logics::qf_abv::QF_ABV_Fn> for theories::bitvec::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::<impl std::convert::Into<logics::qf_abv::QF_ABV_Fn> for theories::core::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::<impl std::convert::Into<logics::qf_abv::QF_ABV_Fn> for theories::array_ex::OpCodes<logics::qf_abv::QF_ABV_Sorts, logics::qf_abv::QF_ABV_Sorts, logics::qf_abv::QF_ABV_Fn>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Fn as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Fn as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV_Fn as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::qf_abv::QF_ABV as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"free_var\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<logics::qf_abv::QF_ABV as backends::backend::Logic>::free_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"array_sort\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::logics::qf_abv::array_sort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bv_sort\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::bv_sort"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bv_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::qf_abv::bv_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"qf_abv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"array_const\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::logics::qf_abv::array_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Sorts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Sorts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::lia::<impl std::convert::Into<logics::lia::LIA_Sorts> for theories::integer::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::lia::<impl std::convert::Into<logics::lia::LIA_Sorts> for theories::core::Sorts>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Sorts as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Fn as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Fn as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::lia::<impl std::convert::Into<logics::lia::LIA_Fn> for theories::integer::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"rustproof_libsmt::logics::lia::<impl std::convert::Into<logics::lia::LIA_Fn> for theories::core::OpCodes>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Fn as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_var\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Fn as backends::backend::SMTNode>::is_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_const\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA_Fn as backends::backend::SMTNode>::is_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<logics::lia::LIA as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"logics\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"lia\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"free_var\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<logics::lia::LIA as backends::backend::Logic>::free_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::backend::SMTError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::backend::SMTError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::backend::SMTRes as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::backend::SMTRes as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"backend\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SMTNode\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_fn\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::backends::backend::SMTNode::is_fn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SMTProc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::backends::smtlib2::SMTProc::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SMTProc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::backends::smtlib2::SMTProc::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SMTProc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_checksat_output\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::backends::smtlib2::SMTProc::read_checksat_output"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SMTProc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_getmodel_output\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rustproof_libsmt::backends::smtlib2::SMTProc::read_getmodel_output"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::smtlib2::EdgeData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::smtlib2::EdgeData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::smtlib2::SMTLib2<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::smtlib2::SMTLib2<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::smtlib2::SMTLib2<L>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expand_assertion\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L>>::expand_assertion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_const\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L>>::new_const"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_var\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L> as backends::backend::SMTBackend>::new_var"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_logic\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L> as backends::backend::SMTBackend>::set_logic"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L> as backends::backend::SMTBackend>::assert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"check_sat\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L> as backends::backend::SMTBackend>::check_sat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"smtlib2\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"solve\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<backends::smtlib2::SMTLib2<L> as backends::backend::SMTBackend>::solve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"z3\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::z3::Z3 as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"z3\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::z3::Z3 as backends::smtlib2::SMTProc>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"backends\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"z3\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pipe\"), disambiguator: 0 }]","fn_type":"Safe","name":"<backends::z3::Z3 as backends::smtlib2::SMTProc>::pipe"}
