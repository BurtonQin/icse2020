{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"BinTree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bin_make\"), disambiguator: 0 }]","has_unsafe":false,"name":"trees::BinTree::bin_make"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rand\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trees::NegBin as rand::Rand>::rand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"l_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as trees::Level>::l_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"l_min\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as trees::Level>::l_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"l_inc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as trees::Level>::l_inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"l_dec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trees::NegBin as trees::Level>::l_dec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"l_max\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as trees::Level>::l_max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"l_min\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as trees::Level>::l_min"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"l_inc\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as trees::Level>::l_inc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"l_dec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as trees::Level>::l_dec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"LevelTree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lev_make\"), disambiguator: 0 }]","has_unsafe":false,"name":"trees::LevelTree::lev_make"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trees\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"NominalTree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nm_make\"), disambiguator: 0 }]","has_unsafe":false,"name":"trees::NominalTree::nm_make"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"memo_into\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as memo::MemoInto<U>>::memo_into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"memo\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<T as memo::MemoFrom<T>>::memo_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Head<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Head<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Body<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Body<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Body<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Body<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Body<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Body<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pull\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::pull"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Stack<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Head<T>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T>>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pull\"), disambiguator: 0 }]","has_unsafe":true,"name":"<stack::Head<T>>::pull"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Head<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_onto\"), disambiguator: 0 }]","has_unsafe":false,"name":"stack::push_onto"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Iter<T>>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<stack::Iter<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AtHead<T, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AtTail<T, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"active_len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::active_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::pop_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extend_rev\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::extend_rev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_archive\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::next_archive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"active_data\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::active_data"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<archive_stack::AStack<E, M>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"archive\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::archive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"archive_with_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::archive_with_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"retrieve\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M>>::retrieve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, M> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::Iter<E, M> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"archive_stack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<archive_stack::AStack<E, ()> as std::convert::From<std::vec::Vec<E>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::TreeNode<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::TreeNode<E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::TreeNode<E> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::TreeNode<E> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::TreeNode<E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::TreeNode<E> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E>>::level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E>>::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"l_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::l_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"r_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::r_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold_up\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::fold_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold_up_meta\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::fold_up_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold_lr\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::fold_lr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold_lr_meta\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::fold_lr_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<level_tree::Tree<E>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"good_levels\"), disambiguator: 0 }]","has_unsafe":true,"name":"level_tree::good_levels"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<level_tree::Tree<E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"level_tree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_branch_level\"), disambiguator: 0 }]","has_unsafe":true,"name":"level_tree::gen_branch_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rebuild\"), disambiguator: 0 }]","has_unsafe":true,"name":"<E as tree_cursor::TreeUpdate>::rebuild"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Force as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Force as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Force as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::UpResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::UpResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::UpResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek_op\"), disambiguator: 0 }]","has_unsafe":true,"name":"tree_cursor::peek_op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E> as std::convert::From<level_tree::Tree<E>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_depth\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::with_depth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iters\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::into_iters"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"at_tree\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::at_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"left_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::left_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"right_tree\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::right_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"peek_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::peek_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"peek_name\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::peek_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"up_left_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::up_left_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"up_right_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::up_right_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"down_left_force\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::down_left_force"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"down_left\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::down_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"down_right_force\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::down_right_force"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"down_right\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::down_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"up\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::Cursor<E>>::up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"up_discard\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::Cursor<E>>::up_discard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterL<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterL<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterL<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterL<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterL<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterL<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterR<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterR<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterR<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterR<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterR<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<tree_cursor::IterR<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fold_out\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::IterR<T>>::fold_out"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tree_cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<tree_cursor::IterR<T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::TreeData<E, M> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::TreeData<E, M> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::TreeData<E, M> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::TreeData<E, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::TreeData<E, M> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::TreeData<E, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rebuild\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::TreeData<E, M> as tree_cursor::TreeUpdate>::rebuild"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"treetop_meta\"), disambiguator: 0 }]","has_unsafe":true,"name":"raz::treetop_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M>>::meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold_up\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M>>::fold_up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold_up_nl\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M>>::fold_up_nl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold_up_gauged\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::RazTree<E, M>>::fold_up_gauged"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold_lr\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::fold_lr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold_lr_meta\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::fold_lr_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fold_lr_archive\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::fold_lr_archive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"focus\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::focus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"focus_left\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M>>::focus_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unfocus\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::Raz<E, M>>::unfocus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M>>::push_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M>>::push_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"peek_left\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::Raz<E, M>>::peek_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"peek_right\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::Raz<E, M>>::peek_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"archive_left\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M>>::archive_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"archive_right\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz::Raz<E, M>>::archive_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_left\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::Raz<E, M>>::pop_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pop_right\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::Raz<E, M>>::pop_right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"leaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"raz::leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bin\"), disambiguator: 0 }]","has_unsafe":true,"name":"raz::bin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as memo::MemoFrom<archive_stack::AtTail<E, u32>>>::memo_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_stack_memo\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as memo::MemoFrom<archive_stack::AtTail<E, u32>>>::memo_from::from_stack_memo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_stack\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as memo::MemoFrom<archive_stack::AtTail<E, u32>>>::memo_from::from_stack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as memo::MemoFrom<archive_stack::AtHead<E, u32>>>::memo_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_stack_memo\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as memo::MemoFrom<archive_stack::AtHead<E, u32>>>::memo_from::from_stack_memo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"memo_from\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_stack\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz::RazTree<E, M> as memo::MemoFrom<archive_stack::AtHead<E, u32>>>::memo_from::from_stack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Position<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz_meta::Position<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Position<I> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz_meta::Position<I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz_meta::Position<I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz_meta::Position<I> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"first\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Position<I> as raz_meta::FirstLast>::first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Position<I> as raz_meta::FirstLast>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Position<I> as std::convert::From<I>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_none\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as raz_meta::RazMeta<E>>::from_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as raz_meta::RazMeta<E>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as raz_meta::RazMeta<E>>::from_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"navigate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as raz_meta::RazMeta<E>>::navigate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"split_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as raz_meta::RazMeta<E>>::split_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_none\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as raz_meta::RazMeta<E>>::from_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as raz_meta::RazMeta<E>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as raz_meta::RazMeta<E>>::from_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"navigate\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as raz_meta::RazMeta<E>>::navigate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"split_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Count as raz_meta::RazMeta<E>>::split_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"first\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as raz_meta::FirstLast>::first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<usize as raz_meta::FirstLast>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_none\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as raz_meta::RazMeta<E>>::from_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as raz_meta::RazMeta<E>>::from_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_meta\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as raz_meta::RazMeta<E>>::from_meta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"navigate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<raz_meta::Names as raz_meta::RazMeta<E>>::navigate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"raz_meta\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"split_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"<raz_meta::Names as raz_meta::RazMeta<E>>::split_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"my_hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"skiplist::my_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::HashVal as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::HashVal as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::HashVal as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::HashVal as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::HashVal as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Path<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Path<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Path<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Path<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Path<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Path<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"make_mask\"), disambiguator: 0 }]","has_unsafe":false,"name":"skiplist::make_mask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::HashVal as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fill_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Cursor<K, V>>::fill_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsParam as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsParam as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsParam as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsParam as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsParam as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsParam as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsRes<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsRes<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsRes<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsRes<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsRes<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::ObsRes<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build_path_step\"), disambiguator: 0 }]","has_unsafe":false,"name":"skiplist::build_path_step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build_path_rec\"), disambiguator: 0 }]","has_unsafe":true,"name":"skiplist::build_path_rec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"emp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as skiplist::FinMap<K, V>>::emp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"archive\"), disambiguator: 0 }]","has_unsafe":false,"name":"<skiplist::Skiplist<K, V> as skiplist::FinMap<K, V>>::archive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ext\"), disambiguator: 0 }]","has_unsafe":true,"name":"<skiplist::Skiplist<K, V> as skiplist::FinMap<K, V>>::ext"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"rem\"), disambiguator: 0 }]","has_unsafe":true,"name":"<skiplist::Skiplist<K, V> as skiplist::FinMap<K, V>>::rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"put\"), disambiguator: 0 }]","has_unsafe":true,"name":"<skiplist::Skiplist<K, V> as skiplist::FinMap<K, V>>::put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"skiplist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":true,"name":"<skiplist::Skiplist<K, V> as skiplist::FinMap<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"my_hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"trie::my_hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::HashVal as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::HashVal as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::HashVal as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::HashVal as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::HashVal as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::HashVal as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"make_mask\"), disambiguator: 0 }]","has_unsafe":false,"name":"trie::make_mask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Bits as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Bits as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Bits as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Bits as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Bits as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Bits as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Trie<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Trie<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Trie<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieLeaf<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieLeaf<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieLeaf<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::TrieBin<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::TrieBin<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieBin<K, V> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieBin<K, V> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieBin<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieBin<K, V> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieLeaf<K, V> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::TrieLeaf<K, V> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V>>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash_map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V>>::hash_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"split_map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V>>::split_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<trie::Trie<K, V>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_hashmap\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V>>::from_hashmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V>>::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"trie\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"union_rec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<trie::Trie<K, V>>::union_rec"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"inc_level\"), disambiguator: 0 }]","has_unsafe":true,"name":"inc_level"}
