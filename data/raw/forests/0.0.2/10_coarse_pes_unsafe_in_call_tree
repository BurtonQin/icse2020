{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T> as std::convert::AsRef<primitive::forest<T>>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T> as std::convert::AsMut<primitive::forest<T>>>::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_first_root_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::get_first_root_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"check_node_validity\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::check_node_validity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_parent_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::get_parent_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_prev_sibling_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::get_prev_sibling_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_next_sibling_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::get_next_sibling_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_first_child_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::get_first_child_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_last_child_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::get_last_child_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"check_node_not_equal_or_ancestor_of_another\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::check_node_not_equal_or_ancestor_of_another"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reconnect_prev_next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T>>::reconnect_prev_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"prepare_new_node_at_top_last\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::prepare_new_node_at_top_last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"disconnect_node_from_parent\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T>>::disconnect_node_from_parent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"knockout_node_from_siblings\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T>>::knockout_node_from_siblings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"move_detached_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<collections::Forest<T>>::move_detached_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"create_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::create_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"detach_node\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::detach_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"prepend_node_child\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::prepend_node_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"append_node_child\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::append_node_child"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_node_child_before\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::insert_node_child_before"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_node_child_after\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T>>::insert_node_child_after"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"collections\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<collections::Forest<T> as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<navigator::SeekPos as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<navigator::SeekPos as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<navigator::SeekPos as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<navigator::NavigateDir as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<navigator::NavigateDir as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<navigator::NavigateDir as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<navigator::NavigateDir as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"down\"), disambiguator: 0 }]","has_unsafe":true,"name":"navigator::Navigator::down"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"right\"), disambiguator: 0 }]","has_unsafe":true,"name":"navigator::Navigator::right"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"left\"), disambiguator: 0 }]","has_unsafe":true,"name":"navigator::Navigator::left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"up\"), disambiguator: 0 }]","has_unsafe":true,"name":"navigator::Navigator::up"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Navigator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"exit\"), disambiguator: 0 }]","has_unsafe":true,"name":"navigator::Navigator::exit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::node as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::node as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::node as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::node as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::node as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_invalid\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitive::node::new_invalid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_invalid\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitive::node::is_invalid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_opt_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitive::node::into_opt_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_opt_idx\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitive::node::into_opt_idx"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::ForestEntry<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::ForestEntry<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::forest<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::forest<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::forest<T>>::iter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_inner_ptr\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::get_inner_ptr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_inner_ptr_mut\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::get_inner_ptr_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMovement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMovement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterMovement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterMovement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMovement as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"join\"), disambiguator: 0 }]","has_unsafe":false,"name":"primitive::IterMovement::join"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::Iter<'a, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"mode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::Iter<'a, T>>::mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::Iter<'a, T>>::values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"last_visited_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::Iter<'a, T>>::last_visited_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMut<'a, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"mode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMut<'a, T>>::mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"values\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMut<'a, T>>::values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"last_visited_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterMut<'a, T>>::last_visited_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterDir as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterDir as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<primitive::IterDir as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"top_first_entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::top_first_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"seek_entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::seek_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"iterate_once\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::iterate_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"iterate_entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::iterate_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"navigate_entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::forest<T>>::navigate_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Iter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Iter<'a, T> as navigator::BiIterator>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"navigate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Iter<'a, T> as navigator::Navigator>::navigate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Iter<'a, T> as navigator::Navigator>::seek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterMut<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterMut<'a, T> as navigator::BiIterator>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"navigate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterMut<'a, T> as navigator::Navigator>::navigate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::IterMut<'a, T> as navigator::Navigator>::seek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Values<V, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Values<V, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Values<V, T> as navigator::BiIterator>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"navigate\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Values<V, T> as navigator::Navigator>::navigate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"primitive\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<primitive::Values<V, T> as navigator::Navigator>::seek"}
