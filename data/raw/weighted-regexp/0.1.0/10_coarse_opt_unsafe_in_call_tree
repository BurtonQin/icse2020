{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::boxed::Box<(dyn Regex<T, M> + 'static)> as Regex<T, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::boxed::Box<(dyn Regex<T, M> + 'static)> as Regex<T, M>>::shift"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::boxed::Box<(dyn Regex<T, M> + 'static)> as Regex<T, M>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Epsilon as Regex<T, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Epsilon as Regex<T, M>>::shift"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Epsilon as Regex<T, M>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as Regex<T, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as Regex<T, M>>::shift"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<F as Regex<T, M>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Alternative<L, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Alternative<L, R> as Regex<T, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Alternative<L, R> as Regex<T, M>>::shift"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Alternative<L, R> as Regex<T, M>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sequence<M, L, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sequence<M, L, R> as Regex<T, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sequence<M, L, R> as Regex<T, M>>::shift"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Sequence<M, L, R> as Regex<T, M>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Repetition<M, R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Repetition<M, R> as Regex<T, M>>::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Repetition<M, R> as Regex<T, M>>::shift"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reset\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Repetition<M, R> as Regex<T, M>>::reset"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"match_regex\"), disambiguator: 0 }]","fn_type":"Safe","name":"weighted_regexp::match_regex"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Match as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Match as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Match as num_traits::Zero>::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Match as num_traits::Zero>::is_zero"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Match as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"one\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Match as num_traits::One>::one"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"has_match\"), disambiguator: 0 }]","fn_type":"Safe","name":"weighted_regexp::has_match"}
