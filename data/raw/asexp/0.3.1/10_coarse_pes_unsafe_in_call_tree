{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<atom::Atom as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<atom::Atom as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<usize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<u16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<u8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<isize>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<i64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<i32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<i16>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<i8>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<f64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::convert::From<f32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_num_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"atom::is_num_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"quote\"), disambiguator: 0 }]","has_unsafe":false,"name":"atom::quote"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"atom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<atom::Atom as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sexp::Sexp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sexp::Sexp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_atom\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::is_atom"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_flat\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::is_flat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::into_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_uint\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::get_uint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::get_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_float\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::get_float"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"sexp::Sexp::get_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::Sexp::get_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_uint_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::Sexp::get_uint_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_iter\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::Sexp::parse_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::Sexp::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_toplevel\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::Sexp::parse_toplevel"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sexp::Sexp as std::convert::From<()>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::convert::From<(A,)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::convert::From<(A, B)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::convert::From<(A, B, C)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<sexp::Sexp as std::convert::From<(A, B, C, D)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sexp::Sexp as std::convert::From<std::vec::Vec<A>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pp\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::pp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prettyprint\"), disambiguator: 0 }]","has_unsafe":true,"name":"sexp::prettyprint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sexp\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<sexp::Sexp as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::ParseError<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::ParseError<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parser::ParseError<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_sexp\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::parse_sexp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"at_end\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::at_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<token::TokenError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<token::TokenError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<token::TokenError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<token::Token<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<token::Token<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<token::Token<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<token::Token<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scan\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::scan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_token_delim\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::is_token_delim"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid_unquoted_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::is_valid_unquoted_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_token\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::next_token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::Tokenizer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_curly_around\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::Tokenizer::with_curly_around"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<token::Tokenizer<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"token::CurlyAroundTokenizer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<token::CurlyAroundTokenizer<'a> as std::iter::Iterator>::next"}
