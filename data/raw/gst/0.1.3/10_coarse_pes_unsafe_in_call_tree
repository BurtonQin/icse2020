{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"GstKey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::gst::GstKey::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gst::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gst::Error as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gst::Error as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gst::Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Gst<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Gst<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Gst<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Gst<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_root\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::gst::NodeType::is_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bounds\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Node<K, V>>::bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Node<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Node<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::Node<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gst::Node<K, V> as std::convert::From<gst::InternalNode<K, V>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gst::Node<K, V> as std::convert::From<gst::LeafNode<K, V>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::LeafNode<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new_with\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::LeafNode<K, V>>::new_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::LeafNode<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::LeafNode<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::LeafNode<K, V>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::LeafNode<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert_node_and_spill\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::insert_node_and_spill"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::insert_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"split_root\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::split_root"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gst::InternalNode<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"diag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"print_rect\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::gst::diag::print_rect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"diag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"print_gst\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::gst::diag::print_gst"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gst\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"diag\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"print_node\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::gst::diag::print_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Point as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Point as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Point as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Point as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Point as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::Point::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"distance\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::Point::distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Point as std::convert::Into<rtree::Rect>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Rect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Rect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Rect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Rect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Rect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_float\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::Rect::from_float"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::rtree::Rect::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"area\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::Rect::area"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"growth\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::Rect::growth"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"perimeter\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::Rect::perimeter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cmp_x\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::rtree::Rect::cmp_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cmp_y\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::rtree::Rect::cmp_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"consistent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Rect as gst::GstKey>::consistent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"expand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Rect as gst::GstKey>::expand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"penalty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<rtree::Rect as gst::GstKey>::penalty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pick_split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Rect as gst::GstKey>::pick_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_rects_by_x\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::sort_rects_by_x"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_rects_by_y\"), disambiguator: 0 }]","fn_type":"Safe","name":"gst::rtree::sort_rects_by_y"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"margin_value\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::rtree::margin_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"overlap_value\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::rtree::overlap_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"choose_split_axis_and_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"gst::rtree::choose_split_axis_and_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Rect as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rtree\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<rtree::Rect as std::cmp::Ord>::cmp"}
