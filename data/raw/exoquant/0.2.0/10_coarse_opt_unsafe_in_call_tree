{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Color as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Color as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Color as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Color as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Color as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::color::Color::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"zero\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::color::Colorf::zero"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"dot\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::color::Colorf::dot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::color::Colorf::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pow\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::color::Colorf::pow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::Add<f64>>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::Mul<f64>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::MulAssign<f64>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorf as std::ops::Div>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"histogram\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<histogram::ColorCount as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"histogram\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::histogram::Histogram::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"histogram\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_color_counts\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::histogram::Histogram::to_color_counts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"histogram\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::histogram::Histogram::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"histogram\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<histogram::Histogram as std::iter::Extend<color::Color>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"histogram\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<histogram::Histogram as std::iter::FromIterator<color::Color>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::QuantizerNode::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::Quantizer::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"create_palette\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::Quantizer::create_palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"num_colors\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::Quantizer::num_colors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::Quantizer::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"colors\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::Quantizer::colors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"quantizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"optimize\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::quantizer::Quantizer::optimize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::KDNode::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_nearest\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::KDNode::find_nearest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"occludes\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::occludes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_float_colors\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::from_float_colors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find_nearest\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::find_nearest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neighbor_distance\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::neighbor_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"neighbors\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"float_color\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::float_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colormap\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"num_colors\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colormap::ColorMap::num_colors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"remapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<remapper::Remapper<'a, T, D>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"remapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<remapper::Remapper<'a, T, D>>::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"remapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap_usize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<remapper::Remapper<'a, T, D>>::remap_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"remapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<remapper::Remapper<'a, T, D>>::remap_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"remapper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap_iter_usize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<remapper::Remapper<'a, T, D>>::remap_iter_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"optimize_palette\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::optimizer::Optimizer::optimize_palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_noop\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::optimizer::Optimizer::is_noop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"Safe","name":"<optimizer::None as optimizer::Optimizer>::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_noop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<optimizer::None as optimizer::Optimizer>::is_noop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"Safe","name":"<optimizer::KMeans as optimizer::Optimizer>::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optimizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"Safe","name":"<optimizer::WeightedKMeans as optimizer::Optimizer>::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ColorSpace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_dither\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colorspace::ColorSpace::to_dither"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ColorSpace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_dither\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colorspace::ColorSpace::from_dither"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ColorSpace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_float\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colorspace::ColorSpace::to_float"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ColorSpace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_float\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::colorspace::ColorSpace::from_float"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<colorspace::SimpleColorSpace as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_linear\"), disambiguator: 0 }]","fn_type":"Safe","name":"<colorspace::SimpleColorSpace as colorspace::ColorSpace>::to_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_linear\"), disambiguator: 0 }]","fn_type":"Safe","name":"<colorspace::SimpleColorSpace as colorspace::ColorSpace>::from_linear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_dither\"), disambiguator: 0 }]","fn_type":"Safe","name":"<colorspace::SimpleColorSpace as colorspace::ColorSpace>::to_dither"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"colorspace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_dither\"), disambiguator: 0 }]","fn_type":"Safe","name":"<colorspace::SimpleColorSpace as colorspace::ColorSpace>::from_dither"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"palettesort\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_palette\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::palettesort::sort_palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basicapi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert_to_indexed\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::basicapi::convert_to_indexed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"basicapi\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"generate_palette\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::basicapi::generate_palette"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ditherer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ditherer::None as ditherer::Ditherer>::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ditherer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ditherer::Ordered as ditherer::Ditherer>::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ditherer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::ditherer::FloydSteinberg::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ditherer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vanilla\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::ditherer::FloydSteinberg::vanilla"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ditherer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"checkered\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::ditherer::FloydSteinberg::checkered"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ditherer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ditherer::FloydSteinberg as ditherer::Ditherer>::remap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"testdata\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"test_image\"), disambiguator: 0 }]","fn_type":"Safe","name":"exoquant::testdata::test_image"}
