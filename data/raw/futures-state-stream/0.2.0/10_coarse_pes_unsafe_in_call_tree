{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_future\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::into_future"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_stream\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::into_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::map_err"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_state\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::map_state"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::filter_map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"collect\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::collect"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StateStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_each\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StateStream::for_each"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::boxed::Box<S> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut S as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::panic::AssertUnwindSafe<S> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"FutureExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatten_state_stream\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::FutureExt::flatten_state_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"StreamExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_state_stream\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::StreamExt::into_state_stream"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"unfold\"), disambiguator: 0 }]","fn_type":"Safe","name":"futures_state_stream::unfold"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<FromStream<S, T> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<IntoFuture<S> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<IntoStream<S> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Map<S, F> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<MapErr<S, F> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<MapState<S, F> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Collect<S> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Unfold<T, F, Fut> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<FlattenStateStream<F> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Filter<S, F> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<FilterMap<S, F> as StateStream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ForEach<S, F> as futures::Future>::poll"}
