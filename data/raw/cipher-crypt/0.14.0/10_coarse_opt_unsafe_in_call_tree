{"def_path":"[DisambiguatedDefPathData { data: Module(\"adfgvx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<adfgvx::ADFGVX as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"adfgvx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<adfgvx::ADFGVX as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"adfgvx\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<adfgvx::ADFGVX as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"affine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<affine::Affine as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"affine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<affine::Affine as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"affine\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<affine::Affine as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autokey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autokey::Autokey as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autokey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autokey::Autokey as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autokey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<autokey::Autokey as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autokey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"autokey_decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"autokey::Autokey::autokey_decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"autokey\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt_keystream\"), disambiguator: 0 }]","has_unsafe":false,"name":"autokey::Autokey::encrypt_keystream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<baconian::CODE_MAP as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<baconian::CODE_MAP as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<baconian::CODE_MAP as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":true,"name":"<baconian::ITALIC_CODES as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<baconian::ITALIC_CODES as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<baconian::ITALIC_CODES as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_code\"), disambiguator: 0 }]","has_unsafe":true,"name":"baconian::get_code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"baconian::get_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<baconian::Baconian as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<baconian::Baconian as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"baconian\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<baconian::Baconian as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"caesar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<caesar::Caesar as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"caesar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<caesar::Caesar as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"caesar\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<caesar::Caesar as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"columnar_transposition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<columnar_transposition::ColumnarTransposition as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"columnar_transposition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<columnar_transposition::ColumnarTransposition as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"columnar_transposition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<columnar_transposition::ColumnarTransposition as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"modulo\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::alphabet::Alphabet::modulo"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scrub\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::alphabet::Alphabet::scrub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"multiplicative_inverse\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::alphabet::Alphabet::multiplicative_inverse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_position\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Standard as common::alphabet::Alphabet>::find_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_letter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Standard as common::alphabet::Alphabet>::get_letter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Standard as common::alphabet::Alphabet>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Standard as common::alphabet::Alphabet>::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find_position\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Alphanumeric as common::alphabet::Alphabet>::find_position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_letter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Alphanumeric as common::alphabet::Alphabet>::get_letter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Alphanumeric as common::alphabet::Alphabet>::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::alphabet::Alphanumeric as common::alphabet::Alphabet>::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"alphabet\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_numeric\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::alphabet::is_numeric"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keygen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keyed_alphabet\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::keygen::keyed_alphabet"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keygen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"columnar_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::keygen::columnar_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keygen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polybius_square\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::keygen::polybius_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keygen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::keygen::PlayfairTable as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"keygen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::keygen::PlayfairTable::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode_sequence\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::morse::decode_sequence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode_character\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::morse::encode_character"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"substitute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shift_substitution\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::substitute::shift_substitution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"substitute\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"key_substitution\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::substitute::key_substitution"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fractionated_morse::FractionatedMorse as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fractionated_morse::FractionatedMorse as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<fractionated_morse::FractionatedMorse as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_morse\"), disambiguator: 0 }]","has_unsafe":false,"name":"fractionated_morse::FractionatedMorse::to_morse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt_sequence\"), disambiguator: 0 }]","has_unsafe":false,"name":"fractionated_morse::FractionatedMorse::encrypt_sequence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_trigraphs\"), disambiguator: 0 }]","has_unsafe":false,"name":"fractionated_morse::FractionatedMorse::to_trigraphs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt_sequence\"), disambiguator: 0 }]","has_unsafe":false,"name":"fractionated_morse::FractionatedMorse::decrypt_sequence"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fractionated_morse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"pad\"), disambiguator: 0 }]","has_unsafe":false,"name":"fractionated_morse::FractionatedMorse::pad"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<hill::Hill as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<hill::Hill as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<hill::Hill as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_phrase\"), disambiguator: 0 }]","has_unsafe":true,"name":"hill::Hill::from_phrase"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"transform_message\"), disambiguator: 0 }]","has_unsafe":true,"name":"hill::Hill::transform_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"transform_chunk\"), disambiguator: 0 }]","has_unsafe":true,"name":"hill::Hill::transform_chunk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"hill\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc_inverse_key\"), disambiguator: 0 }]","has_unsafe":true,"name":"hill::Hill::calc_inverse_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<playfair::Playfair as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<playfair::Playfair as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<playfair::Playfair as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bigram\"), disambiguator: 0 }]","has_unsafe":false,"name":"playfair::bigram"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply_row_col\"), disambiguator: 0 }]","has_unsafe":false,"name":"playfair::apply_row_col"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_separate\"), disambiguator: 0 }]","has_unsafe":false,"name":"playfair::find_separate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply_rectangle\"), disambiguator: 0 }]","has_unsafe":false,"name":"playfair::apply_rectangle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"playfair\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply_rules\"), disambiguator: 0 }]","has_unsafe":false,"name":"playfair::apply_rules"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polybius\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polybius::Polybius as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polybius\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polybius::Polybius as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"polybius\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<polybius::Polybius as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"railfence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<railfence::Railfence as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"railfence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<railfence::Railfence as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"railfence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<railfence::Railfence as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"railfence\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"calc_current_rail\"), disambiguator: 0 }]","has_unsafe":false,"name":"railfence::Railfence::calc_current_rail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"rot13\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","has_unsafe":false,"name":"rot13::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scytale\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scytale::Scytale as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scytale\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scytale::Scytale as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"scytale\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<scytale::Scytale as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vigenere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vigenere::Vigenere as common::cipher::Cipher>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vigenere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vigenere::Vigenere as common::cipher::Cipher>::encrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vigenere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decrypt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<vigenere::Vigenere as common::cipher::Cipher>::decrypt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vigenere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"keystream\"), disambiguator: 0 }]","has_unsafe":false,"name":"vigenere::Vigenere::keystream"}
