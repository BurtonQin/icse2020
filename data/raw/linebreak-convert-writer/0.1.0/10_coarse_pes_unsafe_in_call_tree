{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LinebreakConvertWriter<W> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LinebreakConvertWriter<W>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_linebreak\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LinebreakConvertWriter<W>>::set_linebreak"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert_linebreak\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LinebreakConvertWriter<W>>::convert_linebreak"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert_linebreak\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_cr\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LinebreakConvertWriter<W>>::convert_linebreak::remove_cr"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","has_unsafe":true,"name":"<LinebreakConvertWriter<W> as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LinebreakConvertWriter<W> as std::io::Write>::write_fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"write_fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<<LinebreakConvertWriter<W> as std::io::Write>::write_fmt::Adaptor<'a, T> as std::fmt::Write>::write_str"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","has_unsafe":true,"name":"<LinebreakConvertWriter<W> as std::io::Write>::flush"}
