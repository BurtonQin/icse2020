{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Endian as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<Endian as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Endian as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Endian as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Endian as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<definition::Definition as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<definition::Definition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<definition::Definition as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<definition::Definition as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<definition::Definition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fields\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::definition::Definition::fields"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"definition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"field\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::definition::Definition::field"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Constant as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Constant as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Constant as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Constant as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Constant as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::constant::Constant::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::constant::Constant::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::constant::Constant::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Builder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::constant::Builder::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::constant::Builder::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::constant::Builder::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"constant\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::constant::Builder as std::convert::Into<field::Field>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Garbage as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Garbage as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Garbage as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Garbage as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Garbage as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::garbage::Garbage::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::garbage::Garbage::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Builder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::garbage::Builder::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::garbage::Builder::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"garbage\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::garbage::Builder as std::convert::Into<field::Field>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Unknown as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Unknown as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Unknown as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Unknown as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Unknown as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::unknown::Unknown::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::unknown::Unknown::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Builder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::unknown::Builder::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::unknown::Builder::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unknown\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::unknown::Builder as std::convert::Into<field::Field>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Padding as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Padding as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Padding as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Padding as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Padding as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::padding::Padding::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::padding::Padding::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Builder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::padding::Builder::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::padding::Builder::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"padding\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::padding::Builder as std::convert::Into<field::Field>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::named::Named as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::named::Named as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::named::Named as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::named::Named as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Named::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Named::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"style\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Named::style"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binary\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Named::binary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"endian\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Named::endian"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Named::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::named::Named::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::named::Named::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::named::Builder as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Builder::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Builder::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::named::Builder::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"style\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Builder::style"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"binary\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Builder::binary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::named::Builder::is"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"named\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::named::Builder as std::convert::Into<field::Field>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Field as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Field as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Field as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Field as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::Field::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"constant\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::Field::constant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"named\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rorschach::field::Field::named"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"padding\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::Field::padding"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"garbage\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::Field::garbage"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unknown\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::Field::unknown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::field::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::Style as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::Style as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::Style as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::Style as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::Style as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Structured as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Structured as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Structured as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Structured as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Structured as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"header\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::formatter::structured::Structured::header"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"style\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::formatter::structured::Structured::style"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"format\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Structured as formatter::Formatter>::format"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remaining\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Printer<W>>::remaining"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"space\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::structured::Printer<W>>::space"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"pad\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::pad"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"byte\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::byte"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"binary\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::binary"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hex\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::hex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"print\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::print"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"structured\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::structured::Printer<W>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::inline::Inline as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::inline::Inline as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::inline::Inline as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::inline::Inline as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<formatter::inline::Inline as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::formatter::inline::Inline::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"newline\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::formatter::inline::Inline::newline"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"style\"), disambiguator: 0 }]","fn_type":"Safe","name":"rorschach::formatter::inline::Inline::style"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"format\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::inline::Inline as formatter::Formatter>::format"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"print\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::inline::Printer<W>>::print"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"formatter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"inline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<formatter::inline::Printer<W>>::finish"}
