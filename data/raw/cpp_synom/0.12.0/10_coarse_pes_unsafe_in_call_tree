{"def_path":"[DisambiguatedDefPathData { data: Module(\"space\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"whitespace\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::space::whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"space\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"block_comment\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::space::block_comment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"space\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"word_break\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::space::word_break"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"space\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip_whitespace\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::space::skip_whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"space\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_whitespace\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::space::is_whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"helper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"punct\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::helper::punct"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"helper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"keyword\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::helper::keyword"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"helper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"separated_list\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"cpp_synom::helper::separated_list"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseState<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseState<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rest\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::rest"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::len"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"starts_with\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::starts_with"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"until\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::until"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char_indices\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::char_indices"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"chars\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::chars"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"advance\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::advance"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"idx\"), disambiguator: 0 }]","fn_type":"Safe","name":"cpp_synom::ParseState::idx"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IResult<I, O> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<IResult<I, O> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<IResult<I, O> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IResult<I, O> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<IResult<I, O> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"expect\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IResult<ParseState<'a>, O>>::expect"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"test_looks_like\"), disambiguator: 0 }]","fn_type":"Safe","name":"<IResult<ParseState<'a>, O>>::test_looks_like"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"many0\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"cpp_synom::many0"}
