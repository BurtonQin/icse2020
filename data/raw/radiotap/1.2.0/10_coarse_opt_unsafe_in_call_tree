{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ht_rate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"radiotap::field::ext::ht_rate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vht_rate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"radiotap::field::ext::vht_rate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::ChannelFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::ChannelFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::ChannelFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::ChannelFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::ChannelFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::ChannelFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::XChannelFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::XChannelFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::XChannelFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::XChannelFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::XChannelFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::XChannelFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::Bandwidth as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::Bandwidth as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::Bandwidth as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::Bandwidth as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::Bandwidth as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::Bandwidth as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::ext::Bandwidth::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::VHTUser as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::VHTUser as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::VHTUser as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::VHTUser as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::GuardInterval as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::GuardInterval as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::GuardInterval as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::GuardInterval as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::GuardInterval as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::FEC as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::FEC as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::FEC as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::FEC as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::FEC as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::HTFormat as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::HTFormat as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::HTFormat as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::HTFormat as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::HTFormat as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::TimeUnit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::TimeUnit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::TimeUnit as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::TimeUnit as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::TimeUnit as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::ext::TimeUnit::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::SamplingPosition as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::SamplingPosition as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::ext::SamplingPosition as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::SamplingPosition as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::ext::SamplingPosition as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ext\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::ext::SamplingPosition::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flag_is_set\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::util::flag_is_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bit_is_set\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::util::bit_is_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"util\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bits_as_int\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::util::bits_as_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Kind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Kind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Kind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Kind as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Kind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Kind as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::Kind::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"align\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::Kind::align"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::Kind::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes_some\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::field::from_bytes_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Header as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VendorNamespace as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TSFT as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Flags as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Rate as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Rate as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Rate as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Rate as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Rate as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Channel as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::FHSS as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignal as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaSignalDb as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoise as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AntennaNoiseDb as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::LockQuality as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuation as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxAttenuationDb as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxPower as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Antenna as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RxFlags as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::TxFlags as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::RTSRetries as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::DataRetries as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::XChannel as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::MCS as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::MCS as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::MCS as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::MCS as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::MCS as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::MCS as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AMPDUStatus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AMPDUStatus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 161 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AMPDUStatus as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AMPDUStatus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AMPDUStatus as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::AMPDUStatus as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VHT as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VHT as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VHT as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VHT as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::VHT as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::VHT as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Timestamp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Timestamp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Timestamp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Timestamp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<field::Timestamp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Timestamp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"field\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<field::Timestamp as field::Field>::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"align\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::io::Cursor<T> as Align>::align"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RadiotapIterator<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RadiotapIterator<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::RadiotapIterator::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::RadiotapIterator::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RadiotapIteratorIntoIter<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RadiotapIteratorIntoIter<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a RadiotapIterator<'a> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<RadiotapIterator<'a> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<RadiotapIteratorIntoIter<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"radiotap::<impl std::default::Default for field::Header>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Radiotap as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Radiotap as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Radiotap as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Radiotap as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Radiotap as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_bytes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"radiotap::Radiotap::from_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"radiotap::Radiotap::parse"}
