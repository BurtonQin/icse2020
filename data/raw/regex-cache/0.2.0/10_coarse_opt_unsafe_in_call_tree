{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<options::Options as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<options::Options as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<options::Options as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<options::Options as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<options::Options as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<options::Options as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"define\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::options::Options::define"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cache::RegexCache as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cache::RegexCache as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::RegexCache::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"save\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::RegexCache::save"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compile\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::RegexCache::compile"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"configure\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::RegexCache::configure"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cache::RegexCache as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cache::RegexCache as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cache::CachedRegex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegex::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_match\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::is_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"captures\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::captures"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"replace_all\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::replace_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"shortest_match\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::shortest_match"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"captures_len\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegex::captures_len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegex::as_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cache::CachedRegex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<cache::CachedRegex as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cache::CachedRegexBuilder as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cache::CachedRegexBuilder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::cache::CachedRegexBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"case_insensitive\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::case_insensitive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"multi_line\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::multi_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"dot_matches_new_line\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::dot_matches_new_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"swap_greed\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::swap_greed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ignore_whitespace\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::ignore_whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"unicode\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::unicode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"size_limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::size_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cache\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"dfa_size_limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::cache::CachedRegexBuilder::dfa_size_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::lazy::LazyRegex::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegex::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::lazy::LazyRegex::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lazy::LazyRegex as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lazy::LazyRegex as std::convert::AsRef<regex::Regex>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegex as std::convert::Into<regex::Regex>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lazy::LazyRegex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lazy::LazyRegex as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lazy::LazyRegex as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegexBuilder as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegexBuilder as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegexBuilder as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegexBuilder as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lazy::LazyRegexBuilder as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"regex_cache::lazy::LazyRegexBuilder::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"case_insensitive\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::case_insensitive"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"multi_line\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::multi_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"dot_matches_new_line\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::dot_matches_new_line"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"swap_greed\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::swap_greed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ignore_whitespace\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::ignore_whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"unicode\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::unicode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"size_limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::size_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"dfa_size_limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::dfa_size_limit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lazy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"nest_limit\"), disambiguator: 0 }]","fn_type":"Safe","name":"regex_cache::lazy::LazyRegexBuilder::nest_limit"}
