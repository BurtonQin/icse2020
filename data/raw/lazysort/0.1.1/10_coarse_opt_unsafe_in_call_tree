{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"pivot\"), disambiguator: 0 }]","has_unsafe":false,"name":"pivot"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LazySortIterator<T, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"partition\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LazySortIterator<T, F>>::partition"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"qsort\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LazySortIterator<T, F>>::qsort"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sorted\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as Sorted>::sorted"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"partial_cmp_first\"), disambiguator: 0 }]","has_unsafe":false,"name":"partial_cmp_first"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"partial_cmp_last\"), disambiguator: 0 }]","has_unsafe":false,"name":"partial_cmp_last"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"sorted_partial\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as SortedPartial>::sorted_partial"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sorted_by\"), disambiguator: 0 }]","has_unsafe":false,"name":"<I as SortedBy>::sorted_by"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LazySortIterator<T, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","has_unsafe":false,"name":"<LazySortIterator<T, F> as std::iter::Iterator>::size_hint"}
