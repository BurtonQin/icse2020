{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"emit_triangles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as triangulate::EmitTriangles>::emit_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"emit_triangles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as triangulate::EmitTriangles>::emit_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"emit_triangles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Polygon<T> as triangulate::EmitTriangles>::emit_triangles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"triangulate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as triangulate::Triangulate<T, V>>::triangulate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triangulate::TriangulateIterator<SRC, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triangulate::TriangulateIterator<SRC, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"triangulate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<triangulate::TriangulateIterator<SRC, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Polygon<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Polygon<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<poly::Polygon<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<poly::Polygon<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"emit_vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as poly::EmitVertices<T>>::emit_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"emit_vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as poly::EmitVertices<T>>::emit_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"emit_vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as poly::EmitVertices<T>>::emit_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"emit_vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Polygon<T> as poly::EmitVertices<T>>::emit_vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as poly::Vertices<T, V>>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::VerticesIterator<SRC, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as poly::MapVertex<T, U>>::map_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as poly::MapVertex<T, U>>::map_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as poly::MapVertex<T, U>>::map_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"map_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Polygon<T> as poly::MapVertex<T, U>>::map_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as poly::MapToVertices<VIn, VOut>>::vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::MapToVerticesIter<SRC, T, U, F> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::MapToVerticesIter<SRC, T, U, F> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Line<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"emit_lines\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Triangle<T> as poly::EmitLines>::emit_lines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"emit_lines\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Quad<T> as poly::EmitLines>::emit_lines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"emit_lines\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::Polygon<T> as poly::EmitLines>::emit_lines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"lines\"), disambiguator: 0 }]","fn_type":"Safe","name":"<T as poly::Lines>::lines"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::LinesIterator<I, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<poly::LinesIterator<I, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<indexer::LruIndexer<T, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"indexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<indexer::LruIndexer<T, F> as indexer::Indexer<T>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SharedVertex\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::generator::SharedVertex::shared_vertex_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<generator::SharedVertexIterator<'a, T, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<generator::SharedVertexIterator<'a, T, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IndexedPolygon\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::generator::IndexedPolygon::indexed_polygon_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<generator::IndexedPolygonIterator<'a, T, V> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<generator::IndexedPolygonIterator<'a, T, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"neighbors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<neighbors::Neighbors<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"neighbors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","fn_type":"Safe","name":"<neighbors::Neighbors<T>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"neighbors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vertex_neighbors\"), disambiguator: 0 }]","fn_type":"Safe","name":"<neighbors::Neighbors<T>>::vertex_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"neighbors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"polygon_neighbors\"), disambiguator: 0 }]","fn_type":"Safe","name":"<neighbors::Neighbors<T>>::polygon_neighbors"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"neighbors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal_for_face\"), disambiguator: 0 }]","fn_type":"Safe","name":"<neighbors::Neighbors<T>>::normal_for_face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"neighbors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"normal_for_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<neighbors::Neighbors<T>>::normal_for_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cube::Cube::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vert\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cube::Cube::vert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"face_indexed\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cube::Cube::face_indexed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"face\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cube::Cube::face"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as generator::SharedVertex<Vertex>>::shared_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as generator::SharedVertex<Vertex>>::shared_vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as generator::IndexedPolygon<poly::Quad<usize>>>::indexed_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cube\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cube::Cube as generator::IndexedPolygon<poly::Quad<usize>>>::indexed_polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cylinder::Cylinder::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cylinder::Cylinder::subdivide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vert\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::cylinder::Cylinder::vert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as generator::SharedVertex<Vertex>>::shared_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as generator::SharedVertex<Vertex>>::shared_vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as generator::IndexedPolygon<poly::Polygon<usize>>>::indexed_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cylinder\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<cylinder::Cylinder as generator::IndexedPolygon<poly::Polygon<usize>>>::indexed_polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::plane::Plane::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::plane::Plane::subdivide"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vert\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::plane::Plane::vert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as generator::SharedVertex<Vertex>>::shared_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as generator::SharedVertex<Vertex>>::shared_vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as generator::IndexedPolygon<poly::Quad<usize>>>::indexed_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"plane\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<plane::Plane as generator::IndexedPolygon<poly::Quad<usize>>>::indexed_polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::sphere::SphereUV::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vert\"), disambiguator: 0 }]","fn_type":"Safe","name":"genmesh::sphere::SphereUV::vert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as generator::SharedVertex<Vertex>>::shared_vertex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"shared_vertex_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as generator::SharedVertex<Vertex>>::shared_vertex_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as generator::IndexedPolygon<poly::Polygon<usize>>>::indexed_polygon"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sphere\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"indexed_polygon_count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<sphere::SphereUV as generator::IndexedPolygon<poly::Polygon<usize>>>::indexed_polygon_count"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Vertex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Vertex as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Vertex as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<Vertex as std::cmp::PartialEq>::ne"}
