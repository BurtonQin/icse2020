{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::categorizer::Categorizer<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::categorizer::Categorizer<T> as moore_common::grind::Grinder>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::categorizer::Categorizer<T> as moore_common::grind::Grinder>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::categorizer::Category as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::categorizer::Category as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::categorizer::Category as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"categorizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::categorizer::Category as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::bundler::Bundler<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::bundler::Bundler<T> as moore_common::grind::Grinder>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::bundler::Bundler<T> as moore_common::grind::Grinder>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::bundler::Bundle as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::bundler::Bundle as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::bundler::Bundle as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::bundler::Bundle as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::bundler::Bundle as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bundler\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_significant\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::lexer::bundler::Bundle::is_significant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_significant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::next_significant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_bit_string_literal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::parse_bit_string_literal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_integer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::parse_integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_based_integer\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::parse_based_integer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_exponent\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::try_exponent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_symbol\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T>>::parse_symbol"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T> as moore_common::grind::Grinder>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"tokenizer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::tokenizer::Tokenizer<T> as moore_common::grind::Grinder>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Token as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Token as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Token as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Token as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Token as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Token as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::lexer::token::Token::as_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_ident\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::lexer::token::Token::is_ident"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Token as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Literal as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Literal as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Literal as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Literal as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Literal as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Literal as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Literal as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Literal as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"as_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::lexer::token::Literal::as_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::DelimToken as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::DelimToken as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::DelimToken as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::DelimToken as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::DelimToken as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Exponent as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Exponent as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Exponent as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Exponent as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Exponent as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Exponent as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Exponent as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Exponent as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::ExponentSign as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::ExponentSign as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::ExponentSign as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::ExponentSign as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::ExponentSign as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::ExponentSign as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::ExponentSign as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::BitStringBase as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::BitStringBase as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::BitStringBase as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::BitStringBase as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::BitStringBase as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::BitStringBase as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::BitStringBase as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Kw as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Kw as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Kw as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Kw as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Kw as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Kw as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Kw as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"as_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::lexer::token::Kw::as_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<lexer::token::Kw as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_keyword\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::lexer::token::find_keyword"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_keyword\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"TBL\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__init\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::lexer::token::find_keyword::TBL::__init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::Lexer<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::Lexer<T> as moore_common::grind::Grinder>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"lexer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::Lexer<T> as moore_common::grind::Grinder>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TokenStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"skip\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::token_stream::TokenStream::skip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TokenStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last_loc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::token_stream::TokenStream::last_loc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TokenStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_fatal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::token_stream::TokenStream::is_fatal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"token_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TokenStream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_error\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::token_stream::TokenStream::is_error"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Token as parser::core::Predicate<P>>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<lexer::token::Token as parser::core::Predicate<P>>::recover"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::core::FuncPredicate<P, M, R> as parser::core::Predicate<P>>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"recover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::core::FuncPredicate<P, M, R> as parser::core::Predicate<P>>::recover"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::core::FuncPredicate<P, M, R> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::core::TokenPredicate<P, T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::core::TokenPredicate<P, T> as parser::core::Predicate<P>>::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"recover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::core::TokenPredicate<P, T> as parser::core::Predicate<P>>::recover"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::core::TokenPredicate<P, T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recover\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::recover"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"recovered\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::recovered"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"require\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::require"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"repeat\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::repeat"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"repeat_until\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::repeat_until"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"separated\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::separated"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"separated_nonempty\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::separated_nonempty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flanked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::flanked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_flanked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::try_flanked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_ident\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::parse_ident"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_ident\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::try_ident"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"core\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"earliest\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::core::earliest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::rules::Recovered as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::rules::Reported as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::rules::Reported as std::convert::From<parser::rules::Recovered>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_design_file\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_design_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_design_unit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_design_unit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_context_item\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_context_item"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_library_clause\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_library_clause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_use_clause\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_use_clause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_context_ref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_context_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_primary_name\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_primary_name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_name_suffix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_name_suffix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_optional_matching_ident\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_optional_matching_ident"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_context_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_context_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_entity_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_entity_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_config_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_config_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_arch_body\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_arch_body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_generic_clause\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_generic_clause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_port_clause\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_port_clause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_intf_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_intf_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_decl_item\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_decl_item"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_subprog_decl_item\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_subprog_decl_item"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_subtype_ind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_subtype_ind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_paren_expr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_paren_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_paren_expr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_paren_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_paren_elem_vec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_paren_elem_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_expr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_primary_expr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_primary_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_name_or_qualified_primary_expr\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_name_or_qualified_primary_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::rules::ExprPrec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::rules::ExprPrec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::rules::ExprPrec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::rules::ExprPrec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::rules::ExprPrec as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::rules::ExprPrec as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"highest\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::parser::rules::ExprPrec::highest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"lowest\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::parser::rules::ExprPrec::lowest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_expr_prec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_expr_prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_expr_suffix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_expr_suffix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_unary_op\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::parser::rules::as_unary_op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_binary_op\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::parser::rules::as_binary_op"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unary_prec\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::parser::rules::unary_prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"binary_prec\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::parser::rules::binary_prec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_package_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_package_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_package_body\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_package_body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_package_inst\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_package_inst"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map_aspect\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_map_aspect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_type_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_type_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_subtype_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_subtype_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_alias_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_alias_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_signature\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_signature"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_object_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_object_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_subprog_spec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_subprog_spec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_component_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_component_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_discon_spec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_discon_spec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_vunit_binding_ind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_vunit_binding_ind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_block_comp_decl_item\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_block_comp_decl_item"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_block_comp_config\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_block_comp_config"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_binding_ind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_binding_ind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_block_comp_spec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_block_comp_spec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_config_spec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_config_spec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_attr_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_attr_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_entity_class\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_entity_class"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_group_decl\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_group_decl"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_label\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_label"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_wait_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_wait_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_assert_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_assert_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_report_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_report_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_if_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_if_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_case_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_case_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_loop_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_loop_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_nexit_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_nexit_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_return_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_return_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_null_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_null_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_if_generate_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_if_generate_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_case_generate_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_case_generate_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_for_generate_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_for_generate_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_generate_body\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_generate_body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_block_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_block_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_proc_stmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_proc_stmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_assign_tail\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_assign_tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_select_assign\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_select_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_assign_dst_tail\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_assign_dst_tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_force_mode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_force_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_delay_mech\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::try_delay_mech"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_cond_waves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_cond_waves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_selected_waves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_selected_waves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_wave\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_wave"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"rules\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_inst_or_call_tail\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parser::rules::parse_inst_or_call_tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::basic::BasicParser<T> as parser::token_stream::TokenStream<lexer::token::Token>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bump\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::basic::BasicParser<T> as parser::token_stream::TokenStream<lexer::token::Token>>::bump"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"consumed\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::basic::BasicParser<T> as parser::token_stream::TokenStream<lexer::token::Token>>::consumed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::basic::BasicParser<T> as parser::token_stream::TokenStream<lexer::token::Token>>::last_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::basic::BasicParser<T> as parser::token_stream::TokenStream<lexer::token::Token>>::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"severity\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::basic::BasicParser<T> as parser::token_stream::TokenStream<lexer::token::Token>>::severity"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<parser::basic::BasicParser<T>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"basic\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ensure_queue_filled\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<parser::basic::BasicParser<T>>::ensure_queue_filled"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NodeId as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NodeId as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::ast::NodeId::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_u32\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::ast::NodeId::from_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_usize\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::ast::NodeId::as_usize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_u32\"), disambiguator: 0 }]","fn_type":"Safe","name":"moore_vhdl_syntax::ast::NodeId::as_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NodeId as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnit as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DesignUnit as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnit as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnit as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DesignUnit as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnit as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnit as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnitData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DesignUnitData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnitData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnitData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DesignUnitData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnitData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DesignUnitData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxItem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CtxItem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxItem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxItem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CtxItem as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxItem as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxItem as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Ident as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Ident as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::convert::From<moore_common::source::Spanned<moore_common::name::Name>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Ident as std::convert::Into<moore_common::source::Spanned<moore_common::name::Name>>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompoundName as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompoundName as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompoundName as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompoundName as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompoundName as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompoundName as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompoundName as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompoundName as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompoundName as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PrimaryName as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PrimaryName as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryName as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryName as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PrimaryName as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryName as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryName as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PrimaryNameKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PrimaryNameKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryNameKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryNameKind as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PrimaryNameKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryNameKind as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PrimaryNameKind as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NamePart as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NamePart as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NamePart as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NamePart as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NamePart as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NamePart as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NamePart as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 94 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CtxDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CtxDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CtxDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 100 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 97 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CfgDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 105 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CfgDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ArchBody as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ArchBody as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ArchBody as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 111 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ArchBody as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ArchBody as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ArchBody as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 108 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ArchBody as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PkgDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PkgDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 114 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 125 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgBody as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PkgBody as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgBody as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgBody as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 122 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PkgBody as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgBody as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgBody as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgInst as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 130 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PkgInst as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgInst as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgInst as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PkgInst as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgInst as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PkgInst as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 136 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfDecl as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"human_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfDecl as moore_common::util::HasSpan>::human_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfDecl as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 143 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfSubprogDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 142 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfSubprogDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfSubprogDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfSubprogDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfSubprogDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 139 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfSubprogDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfSubprogDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 149 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogDefault as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 148 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogDefault as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogDefault as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 147 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogDefault as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 146 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogDefault as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 145 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogDefault as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 144 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogDefault as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 155 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 154 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 153 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 152 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 151 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 150 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjDecl as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 162 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 160 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 159 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 158 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfObjKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 157 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjKind as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 156 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfObjKind as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 169 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 167 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 166 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 165 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::IntfMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 164 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfMode as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 163 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::IntfMode as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 175 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 174 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DeclItem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 173 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 172 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DeclItem as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 171 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 170 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"human_span\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DeclItem as moore_common::util::HasSpan>::human_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DeclItem as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 181 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PortgenKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 180 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PortgenKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 179 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PortgenKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 178 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::PortgenKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 177 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PortgenKind as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 176 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::PortgenKind as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 188 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Subprog as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 187 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Subprog as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Subprog as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 186 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Subprog as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 185 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Subprog as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 184 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Subprog as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 183 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Subprog as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Subprog as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"human_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Subprog as moore_common::util::HasSpan>::human_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Subprog as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 194 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 193 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 192 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 191 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 190 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 189 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogData as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 200 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogSpec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 199 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogSpec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogSpec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 198 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogSpec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 197 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogSpec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 196 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogSpec as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 195 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogSpec as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 206 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogPurity as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 205 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogPurity as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 204 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogPurity as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 203 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogPurity as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 202 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogPurity as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 201 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogPurity as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 213 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 212 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 211 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 210 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubprogKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 209 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogKind as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 208 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubprogKind as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 220 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeInd as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 219 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeInd as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeInd as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 218 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeInd as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 217 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeInd as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 216 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeInd as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 215 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeInd as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeInd as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeInd as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 226 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 225 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 224 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 223 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SubtypeDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 222 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 221 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SubtypeDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 232 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ResolInd as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 231 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ResolInd as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ResolInd as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 230 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ResolInd as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 229 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ResolInd as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 228 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ResolInd as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 227 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ResolInd as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 238 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AliasDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 237 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AliasDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AliasDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 236 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AliasDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 235 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AliasDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 234 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AliasDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 233 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AliasDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 244 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 243 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 242 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 241 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 240 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 239 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 250 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 249 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 248 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 247 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 246 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjKind as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 245 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjKind as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 257 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDetail as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 256 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDetail as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDetail as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 255 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDetail as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 254 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDetail as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 253 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDetail as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 252 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ObjDetail as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDecl as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"human_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDecl as moore_common::util::HasSpan>::human_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ObjDecl as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 263 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 262 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 261 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 260 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CompDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 259 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 258 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CompDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 269 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconSpec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 268 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DisconSpec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconSpec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 267 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconSpec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 266 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DisconSpec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 265 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconSpec as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 264 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconSpec as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 275 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DisconTarget as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 274 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DisconTarget as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconTarget as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 273 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconTarget as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 272 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DisconTarget as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 271 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconTarget as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 270 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DisconTarget as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 281 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompCfg as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 280 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BlockCompCfg as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompCfg as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 279 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompCfg as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 278 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BlockCompCfg as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 277 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompCfg as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 276 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompCfg as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 287 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BlockCompSpec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 286 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BlockCompSpec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompSpec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 285 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompSpec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 284 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BlockCompSpec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 283 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompSpec as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 282 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BlockCompSpec as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 293 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BindingInd as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 292 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BindingInd as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BindingInd as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 291 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BindingInd as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 290 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BindingInd as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 289 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BindingInd as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 288 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BindingInd as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 299 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityAspect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 298 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityAspect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityAspect as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 297 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityAspect as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 296 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityAspect as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 295 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityAspect as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 294 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityAspect as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 305 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgSpec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 304 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CfgSpec as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgSpec as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 303 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgSpec as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 302 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CfgSpec as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 301 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgSpec as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 300 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CfgSpec as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 311 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 310 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 309 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 308 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 307 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 306 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 317 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 316 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 315 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 314 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 313 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 312 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 323 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrTarget as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 322 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrTarget as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrTarget as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 321 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrTarget as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 320 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AttrTarget as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 319 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrTarget as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 318 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AttrTarget as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 329 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityClass as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 328 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityClass as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 327 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityClass as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 326 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::EntityClass as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 325 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityClass as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 324 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::EntityClass as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 336 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 335 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GroupDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 334 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 333 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GroupDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 332 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 331 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 342 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GroupData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 341 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GroupData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 340 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 339 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GroupData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 338 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 337 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GroupData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 348 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ParenElem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 347 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ParenElem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ParenElem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 346 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ParenElem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 345 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ParenElem as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 344 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ParenElem as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 343 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ParenElem as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 354 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Expr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 353 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Expr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Expr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 352 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Expr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 351 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Expr as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 350 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Expr as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 349 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Expr as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Expr as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Expr as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 360 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ExprData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 359 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ExprData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ExprData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 358 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ExprData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 357 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ExprData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 356 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ExprData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 355 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ExprData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ExprData as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 366 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::UnaryOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 365 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::UnaryOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::UnaryOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 364 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::UnaryOp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 363 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::UnaryOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 362 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::UnaryOp as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 361 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::UnaryOp as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 373 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BinaryOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 372 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BinaryOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BinaryOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 371 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BinaryOp as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 370 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::BinaryOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 369 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BinaryOp as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 368 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::BinaryOp as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 380 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Dir as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 379 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Dir as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 378 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Dir as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 377 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Dir as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 376 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Dir as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 375 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Dir as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Dir as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 387 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Sign as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 386 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Sign as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 385 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sign as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 384 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Sign as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 383 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sign as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 382 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sign as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 395 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::LogicalOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 394 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::LogicalOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 393 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LogicalOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 392 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::LogicalOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 391 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LogicalOp as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 390 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LogicalOp as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 389 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LogicalOp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 403 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::RelationalOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 402 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::RelationalOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 401 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::RelationalOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 400 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::RelationalOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 399 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::RelationalOp as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 398 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::RelationalOp as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 397 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::RelationalOp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 411 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ShiftOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 410 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ShiftOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 409 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ShiftOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 408 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ShiftOp as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 407 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ShiftOp as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 406 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ShiftOp as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 405 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ShiftOp as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 418 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeDecl as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 417 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeDecl as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeDecl as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 416 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeDecl as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 415 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeDecl as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 414 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeDecl as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 413 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeDecl as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeDecl as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"human_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeDecl as moore_common::util::HasSpan>::human_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeDecl as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 424 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 423 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 422 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 421 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 420 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 419 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::TypeData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::TypeData as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 430 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Stmt as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 429 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Stmt as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Stmt as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 428 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Stmt as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 427 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Stmt as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 426 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Stmt as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 425 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Stmt as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Stmt as moore_common::util::HasSpan>::span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"human_span\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Stmt as moore_common::util::HasSpan>::human_span"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Stmt as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 436 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtData as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 435 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtData as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtData as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 434 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtData as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 433 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtData as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 432 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtData as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 431 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtData as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtData as moore_common::util::HasDesc>::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 442 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtBody as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 441 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtBody as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtBody as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 440 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtBody as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 439 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::StmtBody as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 438 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtBody as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 437 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::StmtBody as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 448 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LoopScheme as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 447 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::LoopScheme as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LoopScheme as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 446 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LoopScheme as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 445 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::LoopScheme as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 444 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LoopScheme as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 443 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::LoopScheme as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 454 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NexitMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 453 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NexitMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 452 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NexitMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 451 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::NexitMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 450 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NexitMode as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 449 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::NexitMode as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 461 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GenBody as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 460 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GenBody as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GenBody as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 459 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GenBody as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 458 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::GenBody as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 457 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GenBody as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 456 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::GenBody as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 467 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Sensitivity as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 466 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Sensitivity as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sensitivity as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 465 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sensitivity as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 464 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Sensitivity as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 463 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sensitivity as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 462 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Sensitivity as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 473 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignTarget as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 472 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignTarget as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignTarget as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 471 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignTarget as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 470 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignTarget as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 469 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignTarget as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 468 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignTarget as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 479 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::InstTarget as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 478 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::InstTarget as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 477 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::InstTarget as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 476 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::InstTarget as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 475 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::InstTarget as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 474 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::InstTarget as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 486 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignKind as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 485 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 484 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignKind as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 483 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignKind as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 482 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignKind as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 481 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignKind as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 493 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 492 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 491 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignMode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 490 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::AssignMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 489 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignMode as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 488 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::AssignMode as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 499 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SelectAssignMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 498 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SelectAssignMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectAssignMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 497 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectAssignMode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 496 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SelectAssignMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 495 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectAssignMode as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 494 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectAssignMode as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 505 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ForceMode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 504 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ForceMode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 503 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ForceMode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 502 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::ForceMode as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 501 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ForceMode as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 500 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::ForceMode as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 512 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DelayMech as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 511 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DelayMech as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DelayMech as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 510 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DelayMech as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 509 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::DelayMech as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 508 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DelayMech as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 507 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::DelayMech as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 518 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Wave as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 517 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Wave as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Wave as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 516 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Wave as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 515 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Wave as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 514 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Wave as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 513 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Wave as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 524 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CondWave as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 523 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CondWave as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CondWave as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 522 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CondWave as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 521 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::CondWave as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 520 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CondWave as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 519 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::CondWave as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 530 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectWave as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 529 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SelectWave as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectWave as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 528 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectWave as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 527 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::SelectWave as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 526 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectWave as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 525 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::SelectWave as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 536 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Signature as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 535 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Signature as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Signature as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 534 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Signature as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 533 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ast::Signature as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 532 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Signature as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 531 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ast::Signature as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"moore_vhdl_syntax::parse"}
