{"def_path":"[DisambiguatedDefPathData { data: Module(\"noinline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call_once\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::noinline::call_once"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"noinline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::noinline::call_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"noinline\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::noinline::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::RaceCell<T, U> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::RaceCell<T, U>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::RaceCell<T, U>>::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::RaceCell<T, U>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::RaceCell<T, U> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::RaceCell<T, U> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::Racey<U> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<race_cell::Racey<U> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<race_cell::Racey<U> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<race_cell::Racey<U> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicBool as race_cell::AtomicLoadStore<bool>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_load\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicBool as race_cell::AtomicLoadStore<bool>>::relaxed_load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_store\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicBool as race_cell::AtomicLoadStore<bool>>::relaxed_store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicIsize as race_cell::AtomicLoadStore<isize>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_load\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicIsize as race_cell::AtomicLoadStore<isize>>::relaxed_load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_store\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicIsize as race_cell::AtomicLoadStore<isize>>::relaxed_store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicUsize as race_cell::AtomicLoadStore<usize>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_load\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicUsize as race_cell::AtomicLoadStore<usize>>::relaxed_load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_store\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicUsize as race_cell::AtomicLoadStore<usize>>::relaxed_store"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicPtr<V> as race_cell::AtomicLoadStore<*mut V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_load\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicPtr<V> as race_cell::AtomicLoadStore<*mut V>>::relaxed_load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"race_cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"relaxed_store\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::sync::atomic::AtomicPtr<V> as race_cell::AtomicLoadStore<*mut V>>::relaxed_store"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"concurrent_test_2\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::concurrent_test_2"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"concurrent_test_3\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::concurrent_test_3"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"benchmark\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::benchmark"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"concurrent_benchmark\"), disambiguator: 0 }]","fn_type":"Safe","name":"testbench::concurrent_benchmark"}
