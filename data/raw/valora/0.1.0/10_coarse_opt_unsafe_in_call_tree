{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"centroid\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::poly::<impl geom::Centered for P>::centroid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"place\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::poly::<impl geom::Place for P>::place"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::IrregularPoly as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::IrregularPoly as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::IrregularPoly as geom::poly::Poly>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::IrregularPoly as geom::Translate>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::Rect as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::Rect as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::Rect as geom::poly::Poly>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::Rect as geom::Translate>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"in_bounds\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::Rect as properties::clipping::Bounded>::in_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"bounding_box\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::poly::Rect as properties::clipping::Bounded>::bounding_box"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::poly::Rect::square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"frame\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::poly::Rect::frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::poly::Rect::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"poly\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"tessellate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::geom::poly::<impl tessellation::Tessellate for P>::tessellate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::ellipse::Ellipse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::ellipse::Ellipse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"circle\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::ellipse::Ellipse::circle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::ellipse::Ellipse as geom::Scale>::scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"centroid\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::ellipse::Ellipse as geom::Centered>::centroid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"place\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::ellipse::Ellipse as geom::Place>::place"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::ellipse::Ellipse as geom::Translate>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ellipse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"tessellate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<geom::ellipse::Ellipse as tessellation::Tessellate>::tessellate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::Add>::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"add_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::AddAssign>::add_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::Mul>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::MulAssign>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::Mul<f32>>::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"mul_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::MulAssign<f32>>::mul_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"div\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::ops::Div<f32>>::div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::point::<impl geom::SubdivideEdges for std::vec::Vec<geom::point::Point>>::subdivide_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as geom::Translate>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"distance\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as geom::Distance<geom::point::Point>>::distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"delta\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as geom::Distance<geom::point::Point>>::delta"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"midpoint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as geom::Distance<geom::point::Point>>::midpoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"manhattan_distance\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as geom::Distance<geom::point::Point>>::manhattan_distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"center\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::point::Point::center"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"abs\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::point::Point::abs"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"manhattan\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::point::Point::manhattan"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"rand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as rand::Rand>::rand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::convert::Into<lyon::math::TypedPoint2D<f32, euclid::UnknownUnit>>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::convert::From<lyon::math::TypedPoint2D<f32, euclid::UnknownUnit>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"point\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::point::Point as std::convert::From<lyon::lyon_tessellation::FillVertex>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","fn_type":"Safe","name":"<C1 as geom::line::Connect<C2>>::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as geom::line::Connect<geom::line::Line>>::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::line::Line::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::line::Line::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::line::Line::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"percent\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as geom::Percent>::percent"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::line::<impl std::convert::Into<geom::line::Line> for std::vec::Vec<geom::point::Point>>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide_edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as geom::SubdivideEdges>::subdivide_edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"vertices\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as geom::poly::Poly>::vertices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"line\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"translate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::line::Line as geom::Translate>::translate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spawner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn_points\"), disambiguator: 0 }]","fn_type":"Safe","name":"<P as geom::spawner::SpawnSrc>::spawn_points"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spawner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::spawner::Instancer<G> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spawner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::spawner::Instancer<G>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spawner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<geom::spawner::Instancer<G> as geom::spawner::Spawner<G>>::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"spawner\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"spawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::spawner::spawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"geom\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SubdivideEdges\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subdivide_edges_n\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::geom::SubdivideEdges::subdivide_edges_n"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sketch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"produce\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::sketch::SketchContext::produce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"sketch\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sketch\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::sketch::sketch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"patterns\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"sparkles\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sparkles\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::patterns::sparkles::sparkles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"actors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::actors::walker::Walker::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"actors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"edges\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::actors::walker::Walker::edges"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"actors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"walk\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::actors::walker::Walker::walk"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"actors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"step\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::actors::walker::Walker::step"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"actors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"walker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"step_from_strand\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::actors::walker::Walker::step_from_strand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"extract_backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as error_chain::ChainedError>::extract_backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::from_kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::with_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"with_boxed_chain\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::with_boxed_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"kind\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::kind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::Error::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::error::Error>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::framebuffer::ValidationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::glutin::ContextError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::SwapBuffersError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::program::ProgramChooserCreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::DrawError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::glutin::CreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::index::CreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::vertex::CreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::backend::glutin::DisplayCreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::texture::TextureCreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<glium::buffer::BufferCreationError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<errors::ErrorKind>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::ErrorKind as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::ErrorKind as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::errors::ErrorKind::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::ErrorKind as std::convert::From<&'a str>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::ErrorKind as std::convert::From<std::string::String>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::ErrorKind as std::convert::From<errors::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::result::Result<T, E> as errors::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"chain_err\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::option::Option<T> as errors::ResultExt<T>>::chain_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"errors\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<errors::Error as std::convert::From<lyon::lyon_tessellation::FillError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<composition::Composition as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::composition::Composition::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::composition::Composition::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::composition::Composition::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"blend\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::composition::Composition::blend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"frame_mesh\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::composition::Composition::frame_mesh"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Layer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shader\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::composition::Layer::shader"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Layer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"blend_mode\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::composition::Layer::blend_mode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<mesh::Mesh<T> as composition::Layer>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tween::Tween<L> as composition::Layer>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"composition\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<L> as composition::Layer>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tween\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tween::Tween<T>>::tween"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tween::Tween<T> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"anim_scale\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tween::Tween<T>>::anim_scale"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"oscillate\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::tween::Oscillation::oscillate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"interpolate\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::tween::Interpolation::interpolate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::tween::Interpolation::raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tween\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clamp\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::tween::Interpolation::clamp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorer as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorer as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorer as std::convert::From<palette::Alpha<palette::Color, f32>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorer as std::convert::From<F>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<color::Colorer as std::convert::From<std::rc::Rc<F>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"red\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::color::Colorer::red"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"blue\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::color::Colorer::blue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"black\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::color::Colorer::black"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"color\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::color::Colorer::color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tessellation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tessellation::Tessellation as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::programs::PROGRAM_SPEC_DEFAULT as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::programs::PROGRAM_SPEC_DEFAULT as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::programs::PROGRAM_SPEC_DEFAULT as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::programs::PROGRAM_SPEC_TEXTURE as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::programs::PROGRAM_SPEC_TEXTURE as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::programs::PROGRAM_SPEC_TEXTURE as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::programs::PROGRAM_SPEC_BLEND_NORMAL as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"__static_ref_initialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::programs::PROGRAM_SPEC_BLEND_NORMAL as lazy_static::Deref>::deref::__static_ref_initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"initialize\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::programs::PROGRAM_SPEC_BLEND_NORMAL as lazy_static::LazyStatic>::initialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"programs\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::programs::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"produce\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::shaders::DefaultShader as gpu::Factory<()>>::produce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"draw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::shaders::DefaultShader as gpu::shaders::Shader>::draw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"produce\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::shaders::BlendShader as gpu::Factory<gpu::shaders::BlendShaderSpec>>::produce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"draw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::shaders::BlendShader as gpu::shaders::Shader>::draw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::shaders::TextureShader as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::shaders::TextureShaderSpec as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"produce\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::shaders::TextureShader as gpu::Factory<gpu::shaders::TextureShaderSpec>>::produce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"produce\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::shaders::TextureShader as gpu::Factory<glium::Texture2d>>::produce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"shaders\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"draw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::shaders::TextureShader as gpu::shaders::Shader>::draw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"program\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::gpu::Gpu::program"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"blit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::blit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"screen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::screen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_to_texture\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::render_to_texture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"canvas\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::canvas"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"save_frame\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::save_frame"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"events\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Gpu::events"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::Gpu as lazy_static::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_context\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::Gpu as glium::backend::Facade>::get_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::Gpu as std::ops::DerefMut>::deref_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::GpuVertex as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"build_bindings\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::GpuVertex as glium::Vertex>::build_bindings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"build_bindings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attr_type_of_val\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::GpuVertex as glium::Vertex>::build_bindings::attr_type_of_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"build_bindings\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attr_type_of_val\"), disambiguator: 1 }]","fn_type":"Safe","name":"<gpu::GpuVertex as glium::Vertex>::build_bindings::attr_type_of_val"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fix_point\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::gpu::GpuVertex::fix_point"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fix_coord\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::gpu::GpuVertex::fix_coord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::GpuVertex as std::convert::From<(geom::point::Point, palette::Alpha<palette::Color, f32>)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::GpuMesh as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"produce\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<gpu::GpuMesh as gpu::Factory<mesh::Mesh<T>>>::produce"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::Target<'a> as std::convert::From<glium::Frame>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<gpu::Target<'a> as std::convert::From<glium::framebuffer::SimpleFrameBuffer<'a>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"draw_all\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Target::draw_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"draw\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Target::draw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","fn_type":"Safe","name":"valora::gpu::Target::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"gpu\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"valora::gpu::Target::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mesh::Mesh<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mesh\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"scale\"), disambiguator: 0 }]","fn_type":"Safe","name":"<mesh::Mesh<T> as geom::Scale>::scale"}
