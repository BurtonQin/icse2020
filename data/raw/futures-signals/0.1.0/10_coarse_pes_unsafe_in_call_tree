{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::State<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::State<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::State<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::State<A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::State<A> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::State<A>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::State<A>>::unwrap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_stream\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::to_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map2\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::map2"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_dedupe\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::map_dedupe"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_map\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::filter_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flatten\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::flatten"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"switch\"), disambiguator: 0 }]","has_unsafe":true,"name":"signal::Signal::switch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_each\"), disambiguator: 0 }]","has_unsafe":true,"name":"signal::Signal::for_each"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_signal_vec\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::to_signal_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"wait_for\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::wait_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::Signal::as_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::boxed::Box<F> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::Always<A> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"always\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::always"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"discard\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::CancelableFutureHandle as discard::Discard>::discard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::CancelableFuture<A, B> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cancelable_future\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::cancelable_future"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::SignalStream<A> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::Map<A, B> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::WaitFor<A> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::SignalSignalVec<A> as signal_vec::SignalVec>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::Map2<A, B, C> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::MapDedupe<A, B> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::FilterMap<A, B> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::Flatten<A> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::MutableSignalState<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"notify\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::notify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"replace\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::replace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"replace_with\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Mutable<A>>::replace_with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"swap\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::swap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"borrow\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::borrow"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"signal\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::signal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"get_cloned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Mutable<A>>::get_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"signal_cloned\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::Mutable<A>>::signal_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Mutable<T> as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Mutable<T> as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Mutable<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::MutableSignal<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::MutableSignal<A> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal::unsync::MutableSignalClone<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::MutableSignalClone<A> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Sender<A>>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal::unsync::Receiver<A> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"channel\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal::unsync::channel"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pair_cloned\"), disambiguator: 0 }]","has_unsafe":true,"name":"signal::pair_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::VecChange<A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::VecChange<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::VecChange<A> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::VecChange<A> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::VecChange<A> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::VecChange<A>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map_signal\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::map_signal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sort_by_cloned\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::sort_by_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_stream\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::to_stream"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_each\"), disambiguator: 0 }]","has_unsafe":true,"name":"signal_vec::SignalVec::for_each"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SignalVec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"signal_vec::SignalVec::by_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<std::boxed::Box<F> as signal_vec::SignalVec>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::Map<A, F> as signal_vec::SignalVec>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::MapSignal<A, B, F> as signal_vec::SignalVec>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::Len<A> as signal::Signal>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::SignalVecStream<A> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"find_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::Filter<A, B>>::find_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::Filter<A, F> as signal_vec::SignalVec>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"binary_search\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::binary_search"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"binary_search_insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::binary_search_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"binary_search_remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::binary_search_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"increment_indexes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::increment_indexes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"decrement_indexes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::decrement_indexes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"insert_at\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::insert_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"remove_at\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::SortBy<A, F>>::remove_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::SortBy<A, F> as signal_vec::SignalVec>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"notify\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::notify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"signal_vec_copy\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVecState<A>>::signal_vec_copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push_copy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::push_copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert_copy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::insert_copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_copy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVecState<A>>::set_copy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"notify_clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVecState<A>>::notify_clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"signal_vec_clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVecState<A>>::signal_vec_clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"push_clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVecState<A>>::push_clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert_clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVecState<A>>::insert_clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVecState<A>>::set_clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new_with_values\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::new_with_values"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"pop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::pop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_slice\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::as_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"signal_vec\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<A>>::signal_vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<A>>::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"signal_vec_cloned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<A>>::signal_vec_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"push_cloned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<A>>::push_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"insert_cloned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<A>>::insert_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"set_cloned\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<A>>::set_cloned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<T> as serde::Serialize>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableVec<T> as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<signal_vec::unsync::MutableVec<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"signal_vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<signal_vec::unsync::MutableSignalVec<A> as signal_vec::SignalVec>::poll"}
