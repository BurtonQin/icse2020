{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::File as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::File as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::File as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::File as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::File as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::File as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::File as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::File::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_char\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::File::from_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::File::from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::File::char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::File::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::File::offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flip_horizontal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::File::flip_horizontal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::File as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::File as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for i8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for u16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for i16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for i32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for i64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for u128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for i128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for usize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::File> for isize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Rank as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Rank as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Rank as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Rank as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Rank as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Rank as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Rank as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Rank::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_char\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Rank::from_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Rank::from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::Rank::char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"rotate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Rank::rotate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::Rank::offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"flip_vertical\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Rank::flip_vertical"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Rank as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Rank as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for i8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for u16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for i16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for i32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for i64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for u128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for i128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for usize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Rank> for isize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::InvalidSquareName as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::InvalidSquareName as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::InvalidSquareName as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::InvalidSquareName as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::InvalidSquareName as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::InvalidSquareName as std::convert::From<()>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Square as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Square as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::from_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_coords\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::from_coords"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_ascii\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::from_ascii"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"file\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"rank\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::rank"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"offset\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::Square::offset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"flip_horizontal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::flip_horizontal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"flip_vertical\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::flip_vertical"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"flip_diagonal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::flip_diagonal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_light\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::is_light"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_dark\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::is_dark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"distance\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::distance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"combine\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::square::Square::combine"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for i8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for u16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for i16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for i32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for i64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for u128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for i128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for usize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::square::<impl std::convert::From<square::Square> for isize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Square as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::convert::From<(square::File, square::Rank)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<square::Square as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"square\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<square::Square as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Color as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Color as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Color as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Color as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::from_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_white\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::from_white"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_black\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::from_black"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fold\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::fold"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_white\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::types::Color::is_white"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_black\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::types::Color::is_black"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pawn\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::pawn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"knight\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::knight"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bishop\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::bishop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rook\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::rook"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"queen\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::queen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"king\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Color::king"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Color as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Color as std::ops::BitXor<bool>>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Role as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Role as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Role as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Role as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Role as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Role as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Role::from_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"of\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Role::of"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Role::char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"upper_char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Role::upper_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for u8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for i8>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for u16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for i16>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for i32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for i64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for u128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for i128>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for usize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::<impl std::convert::From<types::Role> for isize>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Piece as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Piece as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Piece as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Piece as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Piece as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Piece::char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_char\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Piece::from_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Move as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Move as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Move as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::Move as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Move as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"role\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::role"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"capture\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::capture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_capture\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::is_capture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_en_passant\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::is_en_passant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_zeroing\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::is_zeroing"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"castling_side\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::castling_side"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_castle\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::is_castle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"promotion\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::promotion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_promotion\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Move::is_promotion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Move as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pocket as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pocket as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pocket as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pocket as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pocket as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pocket as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"by_role\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pocket::by_role"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"by_role_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pocket::by_role_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pocket::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"by_color\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::by_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"by_color_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::by_color_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"by_piece\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::by_piece"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"by_piece_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::by_piece_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::Pockets::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::Pockets as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"by_color\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::RemainingChecks::by_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"by_color_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::RemainingChecks::by_color_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"decrement\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::RemainingChecks::decrement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::RemainingChecks as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::CastlingSide as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::CastlingSide as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<types::CastlingSide as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<types::CastlingSide as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"is_queen_side\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::CastlingSide::is_queen_side"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"is_king_side\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::CastlingSide::is_king_side"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"king_to\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::CastlingSide::king_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"rook_to\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::types::CastlingSide::rook_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"racing_kings\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::racing_kings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"horde\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::horde"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"occupied\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::occupied"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pawns\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::pawns"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"knights\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::knights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bishops\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::bishops"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rooks\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::rooks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"queens\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::queens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"kings\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::kings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"white\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::white"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"black\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::black"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"promoted\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::promoted"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sliders\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::sliders"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"steppers\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::steppers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rooks_and_queens\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::rooks_and_queens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bishops_and_queens\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::bishops_and_queens"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"king_of\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::board::Board::king_of"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"color_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::color_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"role_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::role_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"piece_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::piece_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove_piece_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::remove_piece_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discard_piece_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::discard_piece_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_piece_at\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::set_piece_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_color\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::by_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_color_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::by_color_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_role\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::by_role"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_role_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::by_role_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_piece\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::by_piece"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attacks_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::attacks_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attacks_to\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::board::Board::attacks_to"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pieces\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::board::Board::pieces"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<board::Board as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::iter::Extend<(square::Square, types::Piece)>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Board as std::iter::FromIterator<(square::Square, types::Piece)>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Pieces as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Pieces as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<board::Pieces as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Pieces as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Pieces as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Pieces as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"board\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<board::Pieces as std::iter::ExactSizeIterator>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Outcome as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Outcome as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Outcome as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Outcome as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Outcome as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"winner\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Outcome::winner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Outcome as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"EMPTY_BOARD\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::EMPTY_BOARD"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"MISSING_KING\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::MISSING_KING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"TOO_MANY_KINGS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::TOO_MANY_KINGS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PAWNS_ON_BACKRANK\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::PAWNS_ON_BACKRANK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"BAD_CASTLING_RIGHTS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::BAD_CASTLING_RIGHTS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"INVALID_EP_SQUARE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::INVALID_EP_SQUARE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"OPPOSITE_CHECK\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::OPPOSITE_CHECK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"VARIANT\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Debug>::fmt::__BitFlags::VARIANT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"EMPTY_BOARD\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::EMPTY_BOARD"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"MISSING_KING\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::MISSING_KING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"TOO_MANY_KINGS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::TOO_MANY_KINGS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PAWNS_ON_BACKRANK\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::PAWNS_ON_BACKRANK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"BAD_CASTLING_RIGHTS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::BAD_CASTLING_RIGHTS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"INVALID_EP_SQUARE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::INVALID_EP_SQUARE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"OPPOSITE_CHECK\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::OPPOSITE_CHECK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"VARIANT\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as <position::PositionError as std::fmt::Debug>::fmt::__BitFlags>::VARIANT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Binary>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Octal>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::LowerHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::UpperHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"EMPTY_BOARD\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::EMPTY_BOARD"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"MISSING_KING\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::MISSING_KING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"TOO_MANY_KINGS\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::TOO_MANY_KINGS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PAWNS_ON_BACKRANK\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::PAWNS_ON_BACKRANK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"BAD_CASTLING_RIGHTS\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::BAD_CASTLING_RIGHTS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"INVALID_EP_SQUARE\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::INVALID_EP_SQUARE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"OPPOSITE_CHECK\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::OPPOSITE_CHECK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"__BitFlags\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"VARIANT\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::all::__BitFlags::VARIANT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"EMPTY_BOARD\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::EMPTY_BOARD"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"MISSING_KING\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::MISSING_KING"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"TOO_MANY_KINGS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::TOO_MANY_KINGS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"PAWNS_ON_BACKRANK\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::PAWNS_ON_BACKRANK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"BAD_CASTLING_RIGHTS\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::BAD_CASTLING_RIGHTS"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"INVALID_EP_SQUARE\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::INVALID_EP_SQUARE"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"OPPOSITE_CHECK\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::OPPOSITE_CHECK"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"VARIANT\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as position::PositionError::all::__BitFlags>::VARIANT"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::BitOrAssign>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::BitXorAssign>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::BitAndAssign>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"sub_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::SubAssign>::sub_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::iter::Extend<position::PositionError>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::iter::FromIterator<position::PositionError>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::PositionError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into_result\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::PositionError::into_result"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::IllegalMove as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::IllegalMove as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::IllegalMove as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::IllegalMove as std::convert::From<()>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"swap_turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Position::swap_turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"legals\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::legals"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"san_candidates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::san_candidates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"castling_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::castling_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"en_passant_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::en_passant_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"capture_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::capture_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_legal\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::is_legal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_irreversible\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::is_irreversible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"king_attackers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::king_attackers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_check\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Position::is_check"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"checkers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::checkers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_checkmate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::is_checkmate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_stalemate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::is_stalemate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Position::is_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_game_over\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Position::is_game_over"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Position::outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"play\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Position::play"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 74 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"gives_check\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Chess::gives_check"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"castling_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::Position>::castling_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"en_passant_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::Position>::en_passant_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"san_candidates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::Position>::san_candidates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Chess as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Chess as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Atomic as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Atomic as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Atomic as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"king_attackers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Atomic as position::Position>::king_attackers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Atomic as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Atomic as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 79 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Giveaway as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Giveaway as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"en_passant_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Giveaway as position::Position>::en_passant_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"capture_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Giveaway as position::Position>::capture_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Giveaway as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"king_attackers\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as position::Position>::king_attackers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Giveaway as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Giveaway as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 82 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"castling_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::Position>::castling_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"en_passant_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::Position>::en_passant_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"san_candidates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::Position>::san_candidates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingOfTheHill as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::KingOfTheHill as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 85 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"castling_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::castling_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"en_passant_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::en_passant_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"san_candidates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::san_candidates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"is_irreversible\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::Position>::is_irreversible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::ThreeCheck as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::ThreeCheck as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 88 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"our_pocket\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Crazyhouse::our_pocket"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"our_pocket_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::position::Crazyhouse::our_pocket_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"legal_put_squares\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Crazyhouse::legal_put_squares"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"castling_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::castling_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"en_passant_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::en_passant_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"san_candidates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::san_candidates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"is_irreversible\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::Position>::is_irreversible"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Crazyhouse as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Crazyhouse as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::RacingKings as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::RacingKings as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::RacingKings as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::RacingKings as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::RacingKings as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::RacingKings as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 91 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Horde as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"play_unchecked\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Horde as position::Position>::play_unchecked"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Horde as position::Position>::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"legal_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Horde as position::Position>::legal_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"castles\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as position::Position>::castles"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"is_variant_end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as position::Position>::is_variant_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"has_insufficient_material\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as position::Position>::has_insufficient_material"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"variant_outcome\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::Horde as position::Position>::variant_outcome"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::Horde as position::CastlingUncoversRankAttack>::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_move\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::do_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"validate\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::validate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_non_king\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::gen_non_king"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_safe_king\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::gen_safe_king"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"evasions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::evasions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_castling_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::gen_castling_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"castling_uncovers_rank_attack\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::castling_uncovers_rank_attack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Stepper\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Stepper::gen_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Slider\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::Slider::gen_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"attacks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KnightTag as position::Stepper>::attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"attacks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<position::KingTag as position::Stepper>::attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::BishopTag as position::Slider>::attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::RookTag as position::Slider>::attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<position::QueenTag as position::Slider>::attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_pawn_moves\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::gen_pawn_moves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push_promotions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::push_promotions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_king_promotions\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::add_king_promotions"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_relevant_ep\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::has_relevant_ep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gen_en_passant\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::gen_en_passant"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"slider_blockers\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::slider_blockers"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_safe\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::is_safe"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"position\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_san_candidates\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::position::filter_san_candidates"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"us\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Setup::us"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"our\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Setup::our"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"them\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Setup::them"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"Setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"their\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Setup::their"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::SwapTurn<S> as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::Castles as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::Castles as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<setup::Castles as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_setup\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::setup::Castles::from_setup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"any\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::any"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"has\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::has"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"has_side\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::setup::Castles::has_side"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discard_rook\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::discard_rook"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"discard_side\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::setup::Castles::discard_side"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"rook\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::rook"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"path\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"setup\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_chess960\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::setup::Castles::is_chess960"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"movelist\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"swap_retain\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<arrayvec::ArrayVec<A> as movelist::ArrayVecExt>::swap_retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"perft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"perft\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::perft::perft"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"perft\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"debug_perft\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::perft::debug_perft"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pawn_attacks\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::pawn_attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"knight_attacks\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::knight_attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"king_attacks\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::king_attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rook_attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::attacks::rook_attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rook_mask\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::rook_mask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bishop_attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::attacks::bishop_attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bishop_mask\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::bishop_mask"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"queen_attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::attacks::queen_attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attacks\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::attacks::attacks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ray\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::ray"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"between\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::between"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"attacks\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"aligned\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::attacks::aligned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::from_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rank\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::rank"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"file\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"relative_rank\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::bitboard::Bitboard::relative_rank"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"relative_shift\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::relative_shift"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"any\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::any"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flip\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::flip"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"discard\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::discard"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::with"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"without\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::without"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_disjoint\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::is_disjoint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_subset\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::is_subset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_superset\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::is_superset"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_front\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::bitboard::Bitboard::pop_front"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"first\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::bitboard::Bitboard::first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pop_back\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::bitboard::Bitboard::pop_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::bitboard::Bitboard::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"more_than_one\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::more_than_one"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"single_square\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::bitboard::Bitboard::single_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"carry_rippler\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::Bitboard::carry_rippler"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bitboard::Bitboard as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::fmt::UpperHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::fmt::LowerHex>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::fmt::Octal>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::fmt::Binary>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::convert::From<square::Square>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::convert::From<square::Rank>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::convert::From<square::File>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::convert::From<u64>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::bitboard::<impl std::convert::From<bitboard::Bitboard> for u64>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::BitAnd<T>>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bitand_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::BitAndAssign<T>>::bitand_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::BitOr<T>>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"bitor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::BitOrAssign<T>>::bitor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::BitXor<T>>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor_assign\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::BitXorAssign<T>>::bitxor_assign"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::iter::FromIterator<square::Square>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"extend\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::iter::Extend<square::Square>>::extend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::Bitboard as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::IntoIter as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::IntoIter as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bitboard::IntoIter as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::IntoIter as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::IntoIter as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bitboard::IntoIter as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::IntoIter as std::iter::ExactSizeIterator>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::IntoIter as std::iter::ExactSizeIterator>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<bitboard::IntoIter as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::CarryRippler as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::CarryRippler as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::CarryRippler as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::CarryRippler as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"bitboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<bitboard::CarryRippler as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenOpts as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenOpts as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenOpts as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenOpts as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenOpts as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::fen::FenOpts::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"promoted\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::fen::FenOpts::promoted"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shredder\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::fen::FenOpts::shredder"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"board_fen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::FenOpts::board_fen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"castling_fen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::FenOpts::castling_fen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"epd\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::FenOpts::epd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::FenOpts::fen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenOpts as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fen::FenError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::fen::FenError::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::FenError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_board_fen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::<impl board::Board>::from_board_fen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::<impl std::str::FromStr for board::Board>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::<impl std::fmt::Display for board::Board>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fen::Fen as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"board\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::board"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"pockets\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::pockets"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"turn\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::turn"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"castling_rights\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::castling_rights"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"ep_square\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::ep_square"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"remaining_checks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::remaining_checks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"halfmove_clock\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::halfmove_clock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fullmoves\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as setup::Setup>::fullmoves"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fen::Fen as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::fen::Fen::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"position\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::fen::Fen::position"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_ascii\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::Fen::from_ascii"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fen::Fen as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fen::Fen as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"board_fen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::board_fen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"epd\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::epd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fen\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fen\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::fen::fen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::InvalidUci as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::InvalidUci as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::InvalidUci as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::InvalidUci as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::InvalidUci as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::InvalidUci as std::convert::From<()>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::Uci as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::Uci as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<uci::Uci as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<uci::Uci as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::Uci as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<uci::Uci as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<uci::Uci as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_ascii\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::uci::Uci::from_ascii"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_move\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::uci::Uci::from_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from_chess960\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::uci::Uci::from_chess960"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"uci\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_move\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::uci::Uci::to_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::InvalidSan as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::InvalidSan as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::InvalidSan as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::InvalidSan as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::InvalidSan as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::InvalidSan as std::convert::From<()>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"desc\"), disambiguator: 0 }]","fn_type":"Safe","name":"shakmaty::san::SanError::desc"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::San as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<san::San as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<san::San as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::San as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::San as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_ascii\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::San::from_ascii"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from_move\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::San::from_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_move\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::San::to_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"find_move\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::San::find_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"matches\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::San::matches"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<san::San as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::San as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanPlus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<san::SanPlus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<san::SanPlus as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanPlus as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanPlus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_ascii\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::SanPlus::from_ascii"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_move\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"shakmaty::san::SanPlus::from_move"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<san::SanPlus as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"san\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<san::SanPlus as std::fmt::Display>::fmt"}
