{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","has_unsafe":false,"name":"beanstalkd::Beanstalkd::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"localhost\"), disambiguator: 0 }]","has_unsafe":false,"name":"beanstalkd::Beanstalkd::localhost"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tube\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::tube"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"put\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"delete\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::delete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stats\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::stats"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"watch\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::watch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ignore\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::ignore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"beanstalkd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmd\"), disambiguator: 0 }]","has_unsafe":true,"name":"beanstalkd::Beanstalkd::cmd"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"tube\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::tube"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"put\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::put"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"reserve\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::reserve"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"delete\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::delete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stats\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::stats"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"watch\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::watch"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ignore\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::ignore"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"commands\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","has_unsafe":false,"name":"commands::build"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BeanstalkdError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BeanstalkdError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BeanstalkdError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::BeanstalkdError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"body\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::body"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hashmap\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::hashmap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"request::Request::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"request\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","has_unsafe":true,"name":"request::Request::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<response::Status as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Status as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Status as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"response\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<response::Response as std::clone::Clone>::clone"}
