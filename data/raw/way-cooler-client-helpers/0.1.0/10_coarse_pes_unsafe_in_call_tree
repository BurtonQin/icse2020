{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"solid_color\"), disambiguator: 0 }]","has_unsafe":false,"name":"color::Color::solid_color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u8s\"), disambiguator: 0 }]","has_unsafe":false,"name":"color::Color::to_u8s"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_u8s\"), disambiguator: 0 }]","has_unsafe":false,"name":"color::Color::from_u8s"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_u32\"), disambiguator: 0 }]","has_unsafe":true,"name":"color::Color::to_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<wayland::resolution::Resolution as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<wayland::resolution::Resolution as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<wayland::resolution::Resolution as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<wayland::resolution::Resolution as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<wayland::resolution::Resolution as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"wayland::resolution::Resolution::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"wayland\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"resolution\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"mode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<wayland::resolution::Resolution as wayland_client::client::wl_output::Handler>::mode"}
