{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSet as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSet as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSet as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSet as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSet as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSetIterator<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"whole\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::whole"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"range_size\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::range_size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"as_tuple\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::as_tuple"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_inf\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::get_inf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_sup\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::get_sup"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_valid\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::Interval::is_valid"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_interval_set\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as interval_set::ToIntervalSet>::to_interval_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"to_interval_set\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<interval_set::Interval> as interval_set::ToIntervalSet>::to_interval_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_interval_set\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<(u32, u32)> as interval_set::ToIntervalSet>::to_interval_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"to_interval_set\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::string::String as interval_set::ToIntervalSet>::to_interval_set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"union\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"interval_set::interval_set::IntervalSet::union"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"intersection\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"interval_set::interval_set::IntervalSet::intersection"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"difference\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"interval_set::interval_set::IntervalSet::difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"symetric_difference\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"interval_set::interval_set::IntervalSet::symetric_difference"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"max\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::max"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"size\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::size"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"merge\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"interval_set::interval_set::IntervalSet::merge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"flatten\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::flatten"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"unflatten\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::unflatten"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","fn_type":"Safe","name":"interval_set::interval_set::IntervalSet::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::Interval as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"interval_set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<interval_set::IntervalSet as std::fmt::Display>::fmt"}
