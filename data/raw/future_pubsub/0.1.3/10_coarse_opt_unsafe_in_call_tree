{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded\"), disambiguator: 0 }]","has_unsafe":false,"name":"unsync::unbounded::unbounded"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsync::unbounded::UnboundedSender<T> as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::UnboundedSender<T> as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"close\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::UnboundedSender<T> as futures::Sink>::close"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"do_send\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsync::unbounded::UnboundedSender<T>>::do_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"unbounded_send\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsync::unbounded::UnboundedSender<T>>::unbounded_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsync::unbounded::UnboundedReceiver<T> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsync::unbounded::UnboundedSender<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::UnboundedReceiver<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"unsync::unbounded::find_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"unsync::unbounded::next_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::UnboundedReceiver<T> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::SendError<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::SendError<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::SendError<T> as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unbounded\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::unbounded::SendError<T>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_cloneable\"), disambiguator: 0 }]","has_unsafe":false,"name":"unsync::clone::into_cloneable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","has_unsafe":true,"name":"<unsync::clone::Cloneable<S> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::clone::Cloneable<S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::clone::Cloneable<S> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<unsync::clone::Cloneable<S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"unsync::clone::find_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"unsync\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"clone\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"unsync::clone::next_id"}
