{"def_path":"[DisambiguatedDefPathData { data: Module(\"robinsons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"occurs_check\"), disambiguator: 0 }]","has_unsafe":false,"name":"robinsons::occurs_check"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"robinsons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"occurs_check\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_vars\"), disambiguator: 0 }]","has_unsafe":false,"name":"robinsons::occurs_check::get_vars"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"robinsons\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify\"), disambiguator: 0 }]","has_unsafe":false,"name":"robinsons::unify"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Term<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Term<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Term<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Term<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Term<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Term<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Term<std::string::String> as std::fmt::Display>::fmt"}
