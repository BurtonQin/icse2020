{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::Node<N, S> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::Node<N, S> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<segmentpoint::Node<N, S> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<segmentpoint::Node<N, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::SegmentPointTree<N, S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::SegmentPointTree<N, S>>::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounds\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::SegmentPointTree<N, S>>::bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::SegmentPointTree<N, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::Node<N, S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_son\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::Node<N, S>>::new_son"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::Node<N, S>>::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"segmentpoint\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<segmentpoint::Node<N, S>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::Node<N, P> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::Node<N, P> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pointsegment::Node<N, P> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pointsegment::Node<N, P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::PointSegmentTree<N, P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::PointSegmentTree<N, P>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::PointSegmentTree<N, P>>::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"bounds\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::PointSegmentTree<N, P>>::bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::Node<N, P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new_son\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::Node<N, P>>::new_son"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::Node<N, P>>::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pointsegment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<pointsegment::Node<N, P>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mid\"), disambiguator: 0 }]","has_unsafe":true,"name":"common::mid"}
