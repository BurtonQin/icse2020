{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"poston::client::WorkerPool::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_settings\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"poston::client::WorkerPool::with_settings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::WorkerPool as client::Client>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"close\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::WorkerPool as client::Client>::close"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<client::WorkerPool as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::Settings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"client\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<client::Settings as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::collections::VecDeque<T> as buffer::Take<T>>::take"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::Options as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::Options as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::Options as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::Options as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_SERIALIZE_FOR_Options\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"serialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::buffer::_IMPL_SERIALIZE_FOR_Options::<impl serde::Serialize for buffer::Options>::serialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::AckReply as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::AckReply as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::AckReply as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_AckReply\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","fn_type":"Safe","name":"<buffer::_IMPL_DESERIALIZE_FOR_AckReply::<impl serde::Deserialize<'de> for buffer::AckReply>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pack_record\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::buffer::pack_record"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"buffer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unpack_response\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::buffer::unpack_response"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::ConnectionSettings as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::ConnectionSettings as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::ConnectionSettings as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::ConnectionSettings as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::ConnectionSettings as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S>>::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"reconnect\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as connect::Reconnect>::reconnect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as std::io::Write>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as std::io::Write>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_nodelay\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::TcpStream as connect::TcpConfig>::set_nodelay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_read_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::TcpStream as connect::TcpConfig>::set_read_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"set_write_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::TcpStream as connect::TcpConfig>::set_write_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"connect\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::net::TcpStream as connect::Connect<std::net::TcpStream>>::connect"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"connect_with_retry\"), disambiguator: 0 }]","fn_type":"Safe","name":"<C as connect::ReconnectableWrite<C>>::connect_with_retry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"now\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as connect::WriteRetryDelay>::now"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"write_retry_initial_delay\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as connect::WriteRetryDelay>::write_retry_initial_delay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"write_retry_timeout\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as connect::WriteRetryDelay>::write_retry_timeout"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"write_retry_max_delay\"), disambiguator: 0 }]","fn_type":"Safe","name":"<connect::Stream<A, S> as connect::WriteRetryDelay>::write_retry_max_delay"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"connect\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<W as connect::ReconnectWrite>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"emitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::emitter::Emitter::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"emitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::emitter::Emitter::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"emitter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"emit\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"poston::emitter::Emitter::emit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<error::Error as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"time_pack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::time::SystemTime as time_pack::TimePack>::write_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"time_pack\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_u32\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::time_pack::write_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::worker::Worker::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"push\"), disambiguator: 0 }]","fn_type":"Safe","name":"poston::worker::WorkerHandler::push"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"worker\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"poston::worker::WorkerHandler::flush"}
