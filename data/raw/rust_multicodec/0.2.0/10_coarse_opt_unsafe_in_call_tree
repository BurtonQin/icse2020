{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec_prefix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_multicodec::codec_prefix::add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec_prefix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_multicodec::codec_prefix::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec_prefix\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_multicodec::codec_prefix::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<codec::CodecType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<codec::CodecType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hex\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_multicodec::codec::CodecType::hex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"codec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"by_hex\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_multicodec::codec::CodecType::by_hex"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"rust_multicodec::encode"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","fn_type":"Safe","name":"rust_multicodec::decode"}
