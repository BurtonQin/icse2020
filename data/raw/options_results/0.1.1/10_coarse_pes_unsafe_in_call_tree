{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::optioniter::OptionIter::unwrap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_or\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::optioniter::OptionIter::unwrap_or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_some\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::optioniter::OptionIter::count_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_some\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::optioniter::OptionIter::find_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_some\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::optioniter::OptionIter::has_some"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_none\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::optioniter::OptionIter::has_none"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"OptionIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"some_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::optioniter::OptionIter::some_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<optioniter::Unwrap<I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<optioniter::Unwrap<I, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<optioniter::SomeIter<I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<optioniter::SomeIter<I, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<optioniter::UnwrapOr<I, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"optioniter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<optioniter::UnwrapOr<I, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::resultiter::ResultIter::unwrap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_or\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::resultiter::ResultIter::unwrap_or"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_ok\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::count_ok"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::count_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"count_ok_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::count_ok_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_ok\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::find_ok"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::find_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_ok\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::has_ok"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"has_err\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"options_results::resultiter::ResultIter::has_err"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ok_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::resultiter::ResultIter::ok_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResultIter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"err_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"options_results::resultiter::ResultIter::err_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::Unwrap<I, T, E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::Unwrap<I, T, E> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::OkIter<I, T, E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::OkIter<I, T, E> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::ErrIter<I, T, E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::ErrIter<I, T, E> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::UnwrapOr<I, T, E> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resultiter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<resultiter::UnwrapOr<I, T, E> as std::iter::Iterator>::size_hint"}
