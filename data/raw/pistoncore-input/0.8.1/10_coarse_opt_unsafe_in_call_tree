{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialOrd>::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialOrd>::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialOrd>::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::PartialOrd>::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dummy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::fmt::Debug>::fmt::dummy::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dummy\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"all\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::all::dummy::all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::from_bits"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_bits_truncate\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::from_bits_truncate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_all\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::is_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"intersects\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::intersects"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"toggle\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::toggle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"bitor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::ops::BitOr>::bitor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"bitxor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::ops::BitXor>::bitxor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"bitand\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::ops::BitAnd>::bitand"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::ops::Sub>::sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"not\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::ops::Not>::not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::iter::FromIterator<keyboard::ModifierKey>>::from_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"event\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::ModifierKey::event"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::ModifierKey as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<keyboard::Key as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<keyboard::Key as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"code\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::Key::code"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"keyboard\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"keyboard::<impl std::convert::From<keyboard::Key> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseButton as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseButton as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseButton as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mouse::MouseButton as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseButton as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mouse::MouseButton as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mouse::MouseButton as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<mouse::MouseButton as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseButton as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<mouse::MouseButton as std::convert::From<u32>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::<impl std::convert::From<mouse::MouseButton> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"MouseCursorEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mouse_cursor_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::MouseCursorEvent::mouse_cursor_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_xy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as mouse::MouseCursorEvent>::from_xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"mouse_cursor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as mouse::MouseCursorEvent>::mouse_cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"MouseRelativeEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mouse_relative_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::MouseRelativeEvent::mouse_relative_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_xy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as mouse::MouseRelativeEvent>::from_xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"mouse_relative\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as mouse::MouseRelativeEvent>::mouse_relative"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"MouseScrollEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mouse_scroll_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"mouse::MouseScrollEvent::mouse_scroll_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from_xy\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as mouse::MouseScrollEvent>::from_xy"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"mouse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"mouse_scroll\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as mouse::MouseScrollEvent>::mouse_scroll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickButton as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"joystick::JoystickButton::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickAxisArgs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickAxisArgs as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickAxisArgs as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickAxisArgs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickAxisArgs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<joystick::JoystickAxisArgs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"joystick::JoystickAxisArgs::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"JoystickAxisEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"joystick_axis_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"joystick::JoystickAxisEvent::joystick_axis_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_joystick_axis_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as joystick::JoystickAxisEvent>::from_joystick_axis_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"joystick\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"joystick_axis\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as joystick::JoystickAxisEvent>::joystick_axis"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generic_event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"event_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as generic_event::GenericEvent>::event_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generic_event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as generic_event::GenericEvent>::with_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generic_event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as generic_event::GenericEvent>::from_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generic_event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"event_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as generic_event::GenericEvent>::event_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generic_event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as generic_event::GenericEvent>::with_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"generic_event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as generic_event::GenericEvent>::from_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<update::UpdateArgs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<update::UpdateArgs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<update::UpdateArgs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<update::UpdateArgs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UpdateEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_dt\"), disambiguator: 0 }]","has_unsafe":false,"name":"update::UpdateEvent::from_dt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"UpdateEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"update_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"update::UpdateEvent::update_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_update_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as update::UpdateEvent>::from_update_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"update\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"update\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as update::UpdateEvent>::update"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::RenderArgs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::RenderArgs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::RenderArgs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<render::RenderArgs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"viewport\"), disambiguator: 0 }]","has_unsafe":false,"name":"render::RenderArgs::viewport"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"RenderEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"render::RenderEvent::render_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_render_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as render::RenderEvent>::from_render_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as render::RenderEvent>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"after_render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<after_render::AfterRenderArgs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"after_render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<after_render::AfterRenderArgs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"after_render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<after_render::AfterRenderArgs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"after_render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"AfterRenderEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"after_render_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"after_render::AfterRenderEvent::after_render_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"after_render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_after_render_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as after_render::AfterRenderEvent>::from_after_render_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"after_render\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"after_render\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as after_render::AfterRenderEvent>::after_render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<idle::IdleArgs as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<idle::IdleArgs as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<idle::IdleArgs as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<idle::IdleArgs as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IdleEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_dt\"), disambiguator: 0 }]","has_unsafe":false,"name":"idle::IdleEvent::from_dt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IdleEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"idle_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"idle::IdleEvent::idle_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_idle_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as idle::IdleEvent>::from_idle_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"idle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"idle\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as idle::IdleEvent>::idle"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event<I> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<event::Event<I> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as std::convert::From<render::RenderArgs>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as std::convert::From<after_render::AfterRenderArgs>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as std::convert::From<update::UpdateArgs>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event<I> as std::convert::From<idle::IdleArgs>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"event\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<event::Event as std::convert::From<Input>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"press\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"PressEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"press_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"press::PressEvent::press_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"press\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_button\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as press::PressEvent>::from_button"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"press\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"press\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as press::PressEvent>::press"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"release\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ReleaseEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"release_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"release::ReleaseEvent::release_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"release\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_button\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as release::ReleaseEvent>::from_button"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"release\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"release\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as release::ReleaseEvent>::release"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"TextEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"text_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"text::TextEvent::text_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_text\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as text::TextEvent>::from_text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"text\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as text::TextEvent>::text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"ResizeEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resize_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"resize::ResizeEvent::resize_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_width_height\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as resize::ResizeEvent>::from_width_height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"resize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"resize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as resize::ResizeEvent>::resize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"focus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"FocusEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"focus_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"focus::FocusEvent::focus_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"focus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_focused\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as focus::FocusEvent>::from_focused"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"focus\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"focus\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as focus::FocusEvent>::focus"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"CursorEvent\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cursor_args\"), disambiguator: 0 }]","has_unsafe":false,"name":"cursor::CursorEvent::cursor_args"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from_cursor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as cursor::CursorEvent>::from_cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"cursor\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cursor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as cursor::CursorEvent>::cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EventId as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EventId as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EventId as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EventId as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<EventId as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Button as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Button as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Button as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Motion as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Motion as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Motion as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Motion as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Motion as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Motion as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"decode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as rustc_serialize::Decodable>::decode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"encode\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as rustc_serialize::Encodable>::encode"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Input as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Input as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as std::convert::From<keyboard::Key>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as std::convert::From<mouse::MouseButton>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Button as std::convert::From<joystick::JoystickButton>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Motion as std::convert::From<joystick::JoystickAxisArgs>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Input as std::convert::From<Motion>>::from"}
