{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AccReader<R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_initial_capacity\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AccReader<R>>::with_initial_capacity"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_increment\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AccReader<R>>::with_increment"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"with_initial_capacity_and_increment\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AccReader<R>>::with_initial_capacity_and_increment"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AccReader<R>>::into_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_up_to\"), disambiguator: 0 }]","has_unsafe":true,"name":"<AccReader<R>>::read_up_to"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read\"), disambiguator: 0 }]","has_unsafe":true,"name":"<AccReader<R> as std::io::Read>::read"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fill_buf\"), disambiguator: 0 }]","has_unsafe":true,"name":"<AccReader<R> as std::io::BufRead>::fill_buf"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"consume\"), disambiguator: 0 }]","has_unsafe":false,"name":"<AccReader<R> as std::io::BufRead>::consume"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"seek\"), disambiguator: 0 }]","has_unsafe":true,"name":"<AccReader<R> as std::io::Seek>::seek"}
