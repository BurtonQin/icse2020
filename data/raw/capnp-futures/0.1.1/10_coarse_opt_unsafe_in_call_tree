{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_segment\"), disambiguator: 0 }]","fn_type":"Safe","name":"<serialize::OwnedSegments as capnp::message::ReaderSegments>::get_segment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"async_read_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"capnp_futures::serialize::async_read_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"async_write_all\"), disambiguator: 0 }]","fn_type":"Safe","name":"capnp_futures::serialize::async_write_all"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"read_message\"), disambiguator: 0 }]","fn_type":"Safe","name":"capnp_futures::serialize::read_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"capnp_futures::serialize::InnerReadState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"read_helper\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::InnerReadState::read_helper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Read<R>>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Read<R> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_segment_table_first\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::parse_segment_table_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_segment_table_rest\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::parse_segment_table_rest"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<serialize::Write<W, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<serialize::WriteState<W, M> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"construct_segment_table\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::construct_segment_table"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<serialize::InnerWriteState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::InnerWriteState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"write_helper\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::InnerWriteState::write_helper"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Write<W, M> as futures::Future>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"as_output_segments\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<capnp::message::Builder<A> as serialize::AsOutputSegments>::as_output_segments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"as_output_segments\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a capnp::message::Builder<A> as serialize::AsOutputSegments>::as_output_segments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"as_output_segments\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::rc::Rc<capnp::message::Builder<A>> as serialize::AsOutputSegments>::as_output_segments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_message\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"capnp_futures::serialize::write_message"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Write<W, M>>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<serialize::Transport<S, M>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Transport<S, M> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"start_send\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Transport<S, M> as futures::Sink>::start_send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"serialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"poll_complete\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<serialize::Transport<S, M> as futures::Sink>::poll_complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<read_stream::ReadStream<R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read_stream\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<read_stream::ReadStream<R> as futures::Stream>::poll"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write_queue::Sender<M> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"drop\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write_queue::Sender<M> as std::ops::Drop>::drop"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_queue\"), disambiguator: 0 }]","fn_type":"Safe","name":"capnp_futures::write_queue::write_queue"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"send\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write_queue::Sender<M>>::send"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write_queue::Sender<M>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"terminate\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write_queue::Sender<M>>::terminate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write_queue\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"poll\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<write_queue::WriteQueue<W, M> as futures::Future>::poll"}
