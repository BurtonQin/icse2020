{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::File as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::File as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::File as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::File as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_i64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::File as enum_primitive::FromPrimitive>::from_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::File as enum_primitive::FromPrimitive>::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::Rank as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Rank as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Rank as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Rank as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_i64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Rank as enum_primitive::FromPrimitive>::from_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Rank as enum_primitive::FromPrimitive>::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::Square as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Square as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Square as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Square as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from_i64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Square as enum_primitive::FromPrimitive>::from_i64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"from_u64\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Square as enum_primitive::FromPrimitive>::from_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_known\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::new_known"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_file\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::new_file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_rank\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::new_rank"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_u32\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::new_u32"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"file\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::file"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rank\"), disambiguator: 0 }]","has_unsafe":true,"name":"model::Square::rank"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::Piece as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Piece as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Piece as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Piece as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::Move as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::Move as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Move as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Move as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Move as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::AnnotationSymbol as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::AnnotationSymbol as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::AnnotationSymbol as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::AnnotationSymbol as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"capture\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::capture"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"with_promotion\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::with_promotion"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"no_mark\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::no_mark"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"check\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::check"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"checkmate\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::Move::checkmate"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::MarkedMove as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::MarkedMove as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MarkedMove as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MarkedMove as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MarkedMove as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"annotated\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::MarkedMove::annotated"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"numbered\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::MarkedMove::numbered"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::MoveNumber as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::MoveNumber as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveNumber as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveNumber as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveNumber as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::NAG as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::NAG as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::NAG as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::NAG as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::NAG as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::GameMove as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::GameMove as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::GameMove as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::GameMove as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::GameMove as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveSequence as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveSequence as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveSequence as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveSequence as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::MoveSequence as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"nag\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::GameMove::nag"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"comment\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::GameMove::comment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"with_variations\"), disambiguator: 0 }]","has_unsafe":false,"name":"model::GameMove::with_variations"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::GameTermination as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::GameTermination as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::GameTermination as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::GameTermination as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<model::Game as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Game as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Game as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"model\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<model::Game as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"read_zero_or_more\"), disambiguator: 0 }]","has_unsafe":true,"name":"read_zero_or_more"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"read_one_or_more\"), disambiguator: 0 }]","has_unsafe":true,"name":"read_one_or_more"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"any_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"any_char"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"pgn_integer\"), disambiguator: 0 }]","has_unsafe":true,"name":"pgn_integer"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"pgn_symbol\"), disambiguator: 0 }]","has_unsafe":true,"name":"pgn_symbol"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"whitespace\"), disambiguator: 0 }]","has_unsafe":true,"name":"whitespace"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"inline_comment_contents\"), disambiguator: 0 }]","has_unsafe":true,"name":"inline_comment_contents"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"block_comment_contents\"), disambiguator: 0 }]","has_unsafe":true,"name":"block_comment_contents"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"read_games\"), disambiguator: 0 }]","has_unsafe":true,"name":"read_games"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"pgn_string_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"pgn_string_char"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"pgn_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"pgn_string"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"tag_pair\"), disambiguator: 0 }]","has_unsafe":true,"name":"tag_pair"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"tag_section\"), disambiguator: 0 }]","has_unsafe":true,"name":"tag_section"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"game_termination\"), disambiguator: 0 }]","has_unsafe":false,"name":"game_termination"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"move_number\"), disambiguator: 0 }]","has_unsafe":true,"name":"move_number"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"file\"), disambiguator: 0 }]","has_unsafe":false,"name":"file"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"rank\"), disambiguator: 0 }]","has_unsafe":false,"name":"rank"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"piece\"), disambiguator: 0 }]","has_unsafe":false,"name":"piece"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"square\"), disambiguator: 0 }]","has_unsafe":true,"name":"square"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"move_disambiguation\"), disambiguator: 0 }]","has_unsafe":true,"name":"move_disambiguation"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"basic_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"basic_move"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"annotation_symbol\"), disambiguator: 0 }]","has_unsafe":false,"name":"annotation_symbol"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"marked_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"marked_move"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"nag\"), disambiguator: 0 }]","has_unsafe":true,"name":"nag"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"line_end\"), disambiguator: 0 }]","has_unsafe":false,"name":"line_end"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"inline_comment\"), disambiguator: 0 }]","has_unsafe":true,"name":"inline_comment"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"block_comment\"), disambiguator: 0 }]","has_unsafe":true,"name":"block_comment"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"comment\"), disambiguator: 0 }]","has_unsafe":true,"name":"comment"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"move_number_ws\"), disambiguator: 0 }]","has_unsafe":true,"name":"move_number_ws"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"marked_move_ws\"), disambiguator: 0 }]","has_unsafe":true,"name":"marked_move_ws"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"nag_ws\"), disambiguator: 0 }]","has_unsafe":true,"name":"nag_ws"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"comment_ws\"), disambiguator: 0 }]","has_unsafe":true,"name":"comment_ws"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"variation\"), disambiguator: 0 }]","has_unsafe":true,"name":"variation"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"game_move\"), disambiguator: 0 }]","has_unsafe":true,"name":"game_move"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"move_sequence\"), disambiguator: 0 }]","has_unsafe":true,"name":"move_sequence"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"game\"), disambiguator: 0 }]","has_unsafe":true,"name":"game"}
