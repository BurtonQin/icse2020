{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"html\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::html::HtmlDecodedDictEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"html\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::html::HtmlDecodedDictEntry as std::convert::From<&'a parse::raw_csv::RawDictEntry>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"html\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"html_decode_with_fallback\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::html::html_decode_with_fallback"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::raw_csv::RawDictEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_u64\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_u64"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"visit_bytes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__FieldVisitor as serde::de::Visitor<'de>>::visit_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__Field as serde::Deserialize<'de>>::deserialize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"expecting\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::expecting"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_seq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_seq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_IMPL_DESERIALIZE_FOR_RawDictEntry\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"deserialize\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"visit_map\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::raw_csv::_IMPL_DESERIALIZE_FOR_RawDictEntry::<impl serde::Deserialize<'de> for parse::raw_csv::RawDictEntry>::deserialize::__Visitor<'de> as serde::de::Visitor<'de>>::visit_map"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"incomplete_records_filter\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::raw_csv::incomplete_records_filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"raw_csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_csv_reader_from_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::raw_csv::get_csv_reader_from_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNode<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNode<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNode<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNode<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNode<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNode<std::string::String> as std::convert::From<&'a parse::word_ast::WordNode<&'b str>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNode<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"to_colored_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNode<T>>::to_colored_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<std::string::String> as std::convert::From<&'a parse::word_ast::WordNodes<&'b str>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::convert::From<std::vec::Vec<parse::word_ast::WordNode<T>>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNodes<&'a str>>::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"with_fallback_from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNodes<&'a str>>::with_fallback_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build_comments\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::build_comments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build_acronyms\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::build_acronyms"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build_genders\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::build_genders"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build_word_with_optional_parts\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::build_word_with_optional_parts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build_plain_word\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::build_plain_word"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"build_indexed_word\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::build_indexed_word"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"count_words\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::count_words"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"to_colored_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodes<T>>::to_colored_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodesDictEntry<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNodesDictEntry<T> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNodesDictEntry<T> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parse::word_ast::WordNodesDictEntry<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNodesDictEntry<&'a str> as std::convert::From<&'a parse::html::HtmlDecodedDictEntry>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<parse::word_ast::WordNodesDictEntry<std::string::String> as std::convert::From<&'a parse::html::HtmlDecodedDictEntry>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csv\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::csv"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parse::word_ast::csv::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::word_ast::csv::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 3 }]","has_unsafe":false,"name":"parse::word_ast::csv::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"csv\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 2 }]","has_unsafe":false,"name":"parse::word_ast::csv::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"word\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::word"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"angle_br\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::angle_br"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_br\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::round_br"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_br\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::square_br"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"curly_br\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::curly_br"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"word_fragment\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::word_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"word_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::word_fragment::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"angle_fragment\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::angle_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"angle_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::angle_fragment::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_fragment\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::round_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"round_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::round_fragment::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_fragment\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::square_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"square_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::square_fragment::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"curly_fragment\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::curly_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"curly_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_unify\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::curly_fragment::_unify"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry_fragment\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::entry_fragment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 4 }]","has_unsafe":false,"name":"parse::word_ast::entry_fragment::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 3 }]","has_unsafe":false,"name":"parse::word_ast::entry_fragment::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 2 }]","has_unsafe":false,"name":"parse::word_ast::entry_fragment::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 1 }]","has_unsafe":false,"name":"parse::word_ast::entry_fragment::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry_fragment\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unify_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"parse::word_ast::entry_fragment::unify_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parse\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"word_ast\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entry\"), disambiguator: 0 }]","has_unsafe":true,"name":"parse::word_ast::entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::WordClassesGroup as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::WordClassesGroup as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::WordClassesGroup as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::WordClassesGroup as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::WordClassesGroup as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::WordClassesGroup as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::WordClassesGroup as std::convert::From<&'a [dict::WordClass]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictQueryResultGrouped as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictQueryResultGrouped as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictQueryResultGrouped as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictQueryResultGrouped as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictQueryResultGrouped as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"word_count_groups\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::grouped::DictQueryResultGrouped::word_count_groups"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::DictQueryResultGrouped as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::DictQueryResultGrouped as std::convert::From<dict::DictQueryResult>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"group_entries\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::DictQueryResultGrouped as std::convert::From<dict::DictQueryResult>>::from::group_entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordCountGroup as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordCountGroup as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordCountGroup as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordCountGroup as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordCountGroup as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"word_class_groups\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::grouped::DictEntryWordCountGroup::word_class_groups"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"word_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::grouped::DictEntryWordCountGroup::word_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::DictEntryWordCountGroup as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordClassGroup as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordClassGroup as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::DictEntryWordClassGroup as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordClassGroup as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::grouped::DictEntryWordClassGroup as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"entries\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::grouped::DictEntryWordClassGroup::entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"word_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::grouped::DictEntryWordClassGroup::word_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"word_class_group\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::grouped::DictEntryWordClassGroup::word_class_group"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"grouped\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::grouped::DictEntryWordClassGroup as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictQueryResult as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictQueryResult as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::DictQueryResult as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictQueryResult as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictQueryResult as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"entries\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQueryResult::entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"into_grouped\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::DictQueryResult::into_grouped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Dict as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Dict as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Dict as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Dict as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Dict as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"create\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::Dict::create"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_entries\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::Dict::get_entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_left_language\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::Dict::get_left_language"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_right_language\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::Dict::get_right_language"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_language_pair\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::Dict::get_language_pair"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"query\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::Dict::query"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictQuery<'a, 'b> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_direction\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQuery::set_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQuery::set_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"set_term\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQuery::set_term"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"source_language\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::DictQuery::source_language"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"word\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQuery::word"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"exact\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQuery::exact"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"regex\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictQuery::regex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"execute\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::DictQuery::execute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::QueryType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::QueryType as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::QueryType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::QueryType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::QueryType as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::QueryDirection as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::QueryDirection as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::QueryDirection as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::QueryDirection as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictEntry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictEntry as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictEntry as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictEntry as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictEntry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictEntry::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_max_word_count\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictEntry::get_max_word_count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictWord as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictWord as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictWord as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictWord as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictWord as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictWord as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"to_colored_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::to_colored_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"acronyms\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::acronyms"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"comments\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::comments"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"genders\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::genders"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"word_with_optional_parts\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::word_with_optional_parts"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"plain_word\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::DictWord::plain_word"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Language as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Language as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Language as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Language as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Language as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Language as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Language as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictLanguagePair as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictLanguagePair as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::DictLanguagePair as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::DictLanguagePair as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::DictLanguagePair as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"infer_query_direction\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::DictLanguagePair::infer_query_direction"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_path\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::DictLanguagePair::from_path"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from_path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_lang\"), disambiguator: 0 }]","has_unsafe":true,"name":"dict::DictLanguagePair::from_path::get_lang"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Gender as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Gender as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Gender as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::Gender as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::Gender as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::WordClass as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::WordClass as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::WordClass as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<dict::WordClass as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::WordClass as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::WordClass as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","has_unsafe":false,"name":"dict::WordClass::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<dict::WordClass as std::str::FromStr>::from_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<error::DictError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_DictError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::_DERIVE_failure_Fail_FOR_DictError::<impl failure::Fail for error::DictError>::cause"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_Fail_FOR_DictError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"backtrace\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::_DERIVE_failure_Fail_FOR_DictError::<impl failure::Fail for error::DictError>::backtrace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"_DERIVE_failure_core_fmt_Display_FOR_DictError\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"error::_DERIVE_failure_core_fmt_Display_FOR_DictError::<impl std::fmt::Display for error::DictError>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::DictError as std::convert::From<csv::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::DictError as std::convert::From<htmlescape::DecodeErr>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"error\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":true,"name":"<error::DictError as std::convert::From<regex::Error>>::from"}
