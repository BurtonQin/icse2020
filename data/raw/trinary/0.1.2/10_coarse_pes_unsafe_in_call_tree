{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tristate::TriState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tristate::TriState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tristate::TriState as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<tristate::TriState as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<tristate::TriState as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<tristate::TriState as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"yes\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"trinary::tristate::TriState::yes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"no\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"trinary::tristate::TriState::no"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"unknown\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"trinary::tristate::TriState::unknown"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"definitely\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"trinary::tristate::TriState::definitely"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"definitely_not\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"trinary::tristate::TriState::definitely_not"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","fn_type":"Safe","name":"trinary::tristate::TriState::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"trinary::tristate::<impl std::convert::From<tristate::TriState> for std::option::Option<bool>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tristate::TriState as std::convert::From<std::option::Option<bool>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tristate::TriState as std::convert::From<bool>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"tristate\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"Safe","name":"<tristate::TriState as std::default::Default>::default"}
