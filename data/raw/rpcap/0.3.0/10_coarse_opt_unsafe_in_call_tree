{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::set"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"switch_endianness\"), disambiguator: 0 }]","fn_type":"Safe","name":"<def::PcapFileHeaderInFile as bytepack::Packed>::switch_endianness"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapFileHeaderInFile::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapFileHeader::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<def::PcapMagic as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapMagic::try_from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"need_byte_swap\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapMagic::need_byte_swap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ns_res\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapMagic::ns_res"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::<impl std::convert::From<def::PcapMagic> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"switch_endianness\"), disambiguator: 0 }]","fn_type":"Safe","name":"<def::PcapRecordHeader as bytepack::Packed>::switch_endianness"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"swap_bytes\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapRecordHeader::swap_bytes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get_time\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::PcapRecordHeader::get_time"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<def::Linktype as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"def\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"rpcap::def::<impl std::convert::From<def::Linktype> for u32>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<read::PcapReader<R>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_linktype\"), disambiguator: 0 }]","fn_type":"Safe","name":"<read::PcapReader<R>>::get_linktype"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_snaplen\"), disambiguator: 0 }]","fn_type":"Safe","name":"<read::PcapReader<R>>::get_snaplen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"read\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<read::PcapReader<R>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write::WriteOptions as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<write::PcapWriter<W>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write::PcapWriter<W>>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<write::PcapWriter<W>>::write"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"flush\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write::PcapWriter<W>>::flush"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"take_writer\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write::PcapWriter<W>>::take_writer"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"write\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_options\"), disambiguator: 0 }]","fn_type":"Safe","name":"<write::PcapWriter<W>>::get_options"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<CapturedPacket<'a> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<CapturedPacket<'a> as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","fn_type":"Safe","name":"<CapturedPacket<'a> as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<CapturedPacket<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<PcapError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<PcapError as std::convert::From<std::io::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"Safe","name":"<PcapError as std::convert::From<std::time::SystemTimeError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<PcapError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<PcapError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"cause\"), disambiguator: 0 }]","fn_type":"Safe","name":"<PcapError as std::error::Error>::cause"}
