{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ex\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::args::ex"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::args::Arg<'r> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::args::Arg<'r> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::args::Arg::to_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_owned\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::args::Arg::to_owned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"into_owned\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::args::Arg::into_owned"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::args::Arg<'r> as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::args::Arg<'r> as std::convert::AsRef<(dyn for<'t> types::abc::Type<'t> + 'r)>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::args::Arg<'r> as std::convert::From<&'r container::args::Arg<'r>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::args::Arg<'r> as std::convert::From<T>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"args\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::args::Arg<'r> as std::convert::From<&'r (dyn for<'t> types::abc::Type<'t> + 'r)>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::context::GlobalContext::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"top_scope\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::GlobalContext::top_scope"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"template\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::GlobalContext::template"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stack\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::GlobalContext::stack"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"env\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::GlobalContext::env"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::Context::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"nested_scope\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::Context::nested_scope"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"template\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::Context::template"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"global\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::Context::global"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"env\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::Context::env"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"context\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::context::Context::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::cycle::LoopState as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::cycle::LoopState as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::cycle::LoopState::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::cycle::LoopState::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::cycle::LoopState as types::abc::Type<'t>>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cycle\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_attr\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::cycle::LoopState as types::abc::IComposable>::get_attr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Mustache as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Mustache as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Mustache as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Mustache as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FullExpression as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FullExpression as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FullExpression as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FullExpression as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::CmpOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::SumOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::SumOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::SumOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::MulOp as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::MulOp as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::MulOp as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjExpr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjExpr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjExpr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::DisjExpr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjExpr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjExpr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjExpr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ConjExpr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpExpr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpExpr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpExpr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpExpr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpItem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::CmpItem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpItem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::CmpItem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Expr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Expr as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Expr as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Expr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ExprItem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::ExprItem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ExprItem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::ExprItem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Term as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Term as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Term as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Term as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::TermItem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::TermItem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::TermItem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::TermItem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 47 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Factor as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::Factor as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::Factor as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 45 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Factor as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Attribute as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Attribute as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Attribute as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Attribute as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Invocation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Invocation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Invocation as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Invocation as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Index as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Index as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Index as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 54 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Index as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 59 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Literal as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::Literal as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::expression::Literal as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 57 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::Literal as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 62 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FilterItem as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FilterItem as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FilterItem as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::expression::FilterItem as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::incrust::Incrust as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::incrust::Incrust as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"no_default\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::incrust::Incrust::no_default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"top_context\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::incrust::Incrust::top_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render_text\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::render_text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render_parsed\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::render_parsed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render_prepared\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::render_prepared"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"incrust\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"create_global_context\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::incrust::Incrust::create_global_context"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::parsed::ParsedNode as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::parsed::ParsedNode as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::SimpleStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::SimpleStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::SimpleStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::SimpleStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::NamedStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::NamedStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::NamedStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::NamedStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ExprStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ExprStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ExprStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ExprStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedRawStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedRawStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 27 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedRawStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedRawStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 31 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfBranch as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfBranch as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfBranch as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfBranch as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 34 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedElseBranch as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedElseBranch as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedElseBranch as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedElseBranch as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 36 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedIfStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 40 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedForStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedForStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedForStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedForStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedBlockStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedBlockStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 42 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedBlockStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedBlockStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::SimpleStatement as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::NamedStatement as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl container::expression::Mustache>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::convert::From<container::expression::Mustache>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl container::expression::FullExpression>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl std::convert::From<container::expression::Literal> for container::expression::Factor>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl std::convert::From<std::string::String> for container::expression::Factor>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl std::convert::From<container::expression::DisjExpr> for container::expression::Factor>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl std::convert::From<container::expression::Attribute> for container::expression::Factor>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::parsed::<impl std::convert::From<container::expression::Invocation> for container::expression::Factor>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::convert::From<container::parsed::ParsedIfStatement>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::convert::From<container::parsed::ParsedForStatement>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::convert::From<container::parsed::ParsedBlockStatement>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::parsed::ParsedNode as std::convert::From<container::parsed::ParsedRawStatement>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Template as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Template as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Template as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Template as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Template as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"as_ref\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Template as std::convert::AsRef<container::template::Template>>::as_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","has_unsafe":true,"name":"container::template::Template::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_parsed\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::template::Template::from_parsed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"process\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::template::Template::from_parsed::process"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::template::Template::from_parsed::process::TextCompleter::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prepare\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::template::Template::from_parsed::process::TextCompleter::prepare"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"complete\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::template::Template::from_parsed::process::TextCompleter::complete"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from_parsed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"process\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"compress\"), disambiguator: 0 }]","has_unsafe":false,"name":"container::template::Template::from_parsed::process::TextCompleter::compress"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Node as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::template::Node as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<container::template::Node as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Node as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfBranch as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfBranch as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfBranch as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfBranch as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::IfStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::ForStatement as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::ForStatement as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::ForStatement as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::ForStatement as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Node as std::convert::From<container::expression::Mustache>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Node as std::convert::From<container::template::IfStatement>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"container\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"template\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<container::template::Node as std::convert::From<container::template::ForStatement>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<loader::abc::LoadError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<loader::abc::LoadError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"<loader::abc::LoadError as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"dict\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","has_unsafe":false,"name":"loader::dict::<impl loader::abc::Loader for std::collections::HashMap<std::string::String, std::string::String>>::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filesystem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<loader::filesystem::FilesystemLoader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filesystem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":true,"name":"loader::filesystem::FilesystemLoader::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filesystem\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","has_unsafe":true,"name":"<loader::filesystem::FilesystemLoader as loader::abc::Loader>::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"group\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","has_unsafe":true,"name":"loader::group::<impl loader::abc::Loader for std::vec::Vec<std::boxed::Box<(dyn loader::abc::Loader + 'static)>>>::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<loader::namespace::NamespaceLoader as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"loader::namespace::NamespaceLoader::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"loader\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"namespace\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"load\"), disambiguator: 0 }]","has_unsafe":true,"name":"<loader::namespace::NamespaceLoader as loader::abc::Loader>::load"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::abc::TemplateParseError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"text\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::block_level::text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"nodes\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::block_level::nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"node\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::block_level::node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"comment\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::block_level::comment"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mustache\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::block_level::mustache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"plain_text\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::block_level::plain_text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"block_level\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"plain_text\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_brace\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::block_level::plain_text::try_brace"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"full_expression\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::full_expression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter_agg\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::filter_agg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"identifier\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::identifier"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expression\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::expression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"conj\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::conj"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"sum\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<parser::expressions::RevFactor as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"factor\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"attr_chain\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::attr_chain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"simple_factor\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::simple_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"subexpression\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::subexpression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"variable\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::variable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expr_list\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::expr_list"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"expr_sep\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::expr_sep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op_disj_bin\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::op_disj_bin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op_conj_bin\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::op_conj_bin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op_cmp_bin\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::op_cmp_bin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op_sum_bin\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::op_sum_bin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expressions\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"op_mul_bin\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::expressions::op_mul_bin"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"literal\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::literals::literal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lit_num\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::lit_num"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_float\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::parse_float"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::parse_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lit_char\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::literals::lit_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char_char_agg\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::char_char_agg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::char_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char_escaped\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::char_escaped"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"parse_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::parse_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lit_str\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::lit_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"str_char_agg\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::str_char_agg"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"literals\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"str_char\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::literals::str_char"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"statement\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_edge\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::statements::stmt_edge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_raw\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_endraw\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_endraw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::raw_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"raw_block\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_end\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::statements::raw_block::is_end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_for\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_endfor\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_endfor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::for_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_statement\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::for_statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"for_statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"finish\"), disambiguator: 0 }]","has_unsafe":false,"name":"parser::statements::for_statement::finish"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_if\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_if"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_elif\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_elif"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_else\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_else"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_endif\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_endif"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"if_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::if_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"if_statement\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::if_statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"if_statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"if_\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::if_statement::if_"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"if_statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"elif\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::if_statement::elif"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"if_statement\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"else_\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::if_statement::else_"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_endblock\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_endblock"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"block_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::block_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"block_statement\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::block_statement"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_extends\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_extends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"extends_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::extends_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"stmt_include\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::stmt_include"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"statements\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"include_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"parser::statements::include_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::EvalError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::InvokeError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::ExpectedArgType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::EvalError as std::convert::From<renderer::abc::InvokeError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::FilterError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::FilterError as std::convert::From<std::fmt::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::RenderError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::RenderError as std::convert::From<loader::abc::LoadError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::RenderError as std::convert::From<renderer::abc::EvalError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::RenderError as std::convert::From<parser::abc::TemplateParseError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::RenderError as std::convert::From<renderer::abc::FilterError>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::abc::RenderError as std::convert::From<std::fmt::Error>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_expr\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_conj\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_conj"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_sum\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_prod\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_prod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_factor\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_index\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_attribute\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_attribute"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eval_invocation\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::evaluator::eval_invocation"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"evaluator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"literal\"), disambiguator: 0 }]","has_unsafe":false,"name":"renderer::evaluator::literal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_expr\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_expr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_conj\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_conj"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_sum\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_sum"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_prod\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_prod"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_factor\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_factor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"expression\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_literal\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::expression::render_literal"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::filter::Escape as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<renderer::filter::Escape as renderer::abc::Filter>::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<renderer::filter::Unescape as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"filter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"filter\"), disambiguator: 0 }]","has_unsafe":true,"name":"<renderer::filter::Unescape as renderer::abc::Filter>::filter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"text\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_text\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_text"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_mustache\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_mustache"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_expression\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_expression"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_for\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_if\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_if"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_block\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_block"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render_include\"), disambiguator: 0 }]","has_unsafe":true,"name":"renderer::renderer::render_include"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"renderer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"writer\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"write_str\"), disambiguator: 0 }]","has_unsafe":true,"name":"<renderer::writer::Writer<'w> as std::fmt::Write>::write_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IPartialEq\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::abc::IPartialEq::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IPartialOrd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"lt\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::abc::IPartialOrd::lt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IPartialOrd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"le\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::abc::IPartialOrd::le"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IPartialOrd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"gt\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::abc::IPartialOrd::gt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IPartialOrd\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ge\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::abc::IPartialOrd::ge"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"abc\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::abc::VIterator<'r> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::defaults::<impl types::abc::IRender for T>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"render\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::IRender for T>::render"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsString for T>::is_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsString for T>::try_as_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsString for T>::try_as_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsBool for T>::is_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsBool for T>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_real\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsReal for T>::is_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_real\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsReal for T>::try_as_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"is_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsInt for T>::is_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsInt for T>::try_as_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"is_iterable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIterable for T>::is_iterable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_iterable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIterable for T>::try_as_iterable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"is_iterable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIterable for T>::is_iterable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_iterable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIterable for T>::try_as_iterable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"is_indexable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIndexable for T>::is_indexable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_indexable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIndexable for T>::try_as_indexable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"is_indexable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIndexable for T>::is_indexable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_indexable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsIndexable for T>::try_as_indexable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"is_mappable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsMappable for T>::is_mappable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_mappable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsMappable for T>::try_as_mappable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_mappable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsMappable for T>::is_mappable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_mappable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsMappable for T>::try_as_mappable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"is_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsComposable for T>::is_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsComposable for T>::try_as_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"is_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsComposable for T>::is_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsComposable for T>::try_as_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"is_invocable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsInvocable for T>::is_invocable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_invocable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsInvocable for T>::try_as_invocable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"is_invocable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsInvocable for T>::is_invocable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_invocable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsInvocable for T>::try_as_invocable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"is_partial_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialEq for T>::is_partial_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_partial_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialEq for T>::try_as_partial_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"is_partial_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialEq for T>::is_partial_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_partial_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialEq for T>::try_as_partial_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"is_partial_ord\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialOrd for T>::is_partial_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_partial_ord\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialOrd for T>::try_as_partial_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"is_partial_ord\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialOrd for T>::is_partial_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_partial_ord\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::AsPartialOrd for T>::try_as_partial_ord"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_add\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::IArithm for S>::try_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_sub\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::IArithm for S>::try_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_mul\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::IArithm for S>::try_mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"defaults\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"try_div\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::defaults::<impl types::abc::IArithm for S>::try_div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::char::<impl types::abc::Type<'t> for char>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::string::<impl types::abc::Type<'t> for std::string::String>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::string::<impl types::abc::AsBool for std::string::String>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::string::<impl types::abc::AsString for std::string::String>::is_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_string\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::string::<impl types::abc::AsString for std::string::String>::try_as_string"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::string::<impl types::abc::IPartialEq for std::string::String>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::string::<impl types::abc::IPartialOrd for std::string::String>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"try_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::string::<impl types::abc::IArithm for std::string::String>::try_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::string::<impl std::convert::Into<container::args::Arg<'r>> for &'r str>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::string::<impl types::abc::AsComposable for std::string::String>::try_as_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_attr\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::string::<impl types::abc::IComposable for std::string::String>::get_attr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::bool::<impl types::abc::Type<'t> for bool>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"is_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::bool::<impl types::abc::AsBool for bool>::is_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::bool::<impl types::abc::AsBool for bool>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_real\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::bool::<impl types::abc::AsReal for bool>::try_as_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::bool::<impl types::abc::AsInt for bool>::try_as_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::bool::<impl types::abc::IPartialEq for bool>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"bool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::bool::<impl types::abc::IPartialOrd for bool>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::real::<impl types::abc::Type<'t> for f64>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::real::<impl types::abc::AsBool for f64>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_real\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::real::<impl types::abc::AsReal for f64>::try_as_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_real\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::real::<impl types::abc::AsReal for f64>::is_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::real::<impl types::abc::AsInt for f64>::try_as_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::real::<impl types::abc::IPartialEq for f64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::real::<impl types::abc::IPartialOrd for f64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::real::<impl types::abc::IArithm for f64>::try_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::real::<impl types::abc::IArithm for f64>::try_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::real::<impl types::abc::IArithm for f64>::try_mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"real\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_div\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::real::<impl types::abc::IArithm for f64>::try_div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::int::<impl types::abc::Type<'t> for i64>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::int::<impl types::abc::AsBool for i64>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_real\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::int::<impl types::abc::AsReal for i64>::try_as_real"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::int::<impl types::abc::AsInt for i64>::try_as_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"is_int\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::int::<impl types::abc::AsInt for i64>::is_int"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::int::<impl types::abc::IPartialEq for i64>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::int::<impl types::abc::IPartialOrd for i64>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_add\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::int::<impl types::abc::IArithm for i64>::try_add"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_sub\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::int::<impl types::abc::IArithm for i64>::try_sub"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_mul\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::int::<impl types::abc::IArithm for i64>::try_mul"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"int\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"try_div\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::int::<impl types::abc::IArithm for i64>::try_div"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::Type<'t> for std::vec::Vec<container::args::Arg<'r>>>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::AsBool for std::vec::Vec<container::args::Arg<'r>>>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_iterable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::AsIterable for std::vec::Vec<container::args::Arg<'r>>>::try_as_iterable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::AsComposable for std::vec::Vec<container::args::Arg<'r>>>::try_as_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIterable for std::vec::Vec<container::args::Arg<'r>>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ivalues\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIterable for std::vec::Vec<container::args::Arg<'r>>>::ivalues"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIndexable for std::vec::Vec<container::args::Arg<'r>>>::get_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIndexable for std::vec::Vec<container::args::Arg<'r>>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIndexable for std::vec::Vec<container::args::Arg<'r>>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get_attr\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::list::<impl types::abc::IComposable for std::vec::Vec<container::args::Arg<'r>>>::get_attr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::Type<'t> for &'r [container::args::Arg<'r>]>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"to_bool\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::AsBool for &'r [container::args::Arg<'r>]>::to_bool"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_iterable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::AsIterable for &'r [container::args::Arg<'r>]>::try_as_iterable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"try_as_composable\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::AsComposable for &'r [container::args::Arg<'r>]>::try_as_composable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIterable for &'r [container::args::Arg<'r>]>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"ivalues\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIterable for &'r [container::args::Arg<'r>]>::ivalues"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"get_index\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIndexable for &'r [container::args::Arg<'r>]>::get_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIndexable for &'r [container::args::Arg<'r>]>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::list::<impl types::abc::IIndexable for &'r [container::args::Arg<'r>]>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"list\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"get_attr\"), disambiguator: 0 }]","has_unsafe":true,"name":"types::list::<impl types::abc::IComposable for &'r [container::args::Arg<'r>]>::get_attr"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"function\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"types::function::Function::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"function\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::function::Function as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"function\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::function::Function as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"function\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"<types::function::Function as types::abc::Type<'t>>::clone_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"types\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"function\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"invoke\"), disambiguator: 0 }]","has_unsafe":true,"name":"<types::function::Function as types::abc::IInvocable>::invoke"}
