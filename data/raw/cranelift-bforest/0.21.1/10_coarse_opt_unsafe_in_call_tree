{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splat_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapTypes<K, V> as Forest>::splat_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splat_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapTypes<K, V> as Forest>::splat_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapForest<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapForest<K, V>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"get_or_less\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::get_or_less"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::Map<K, V>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cursor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::Map<K, V> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"goto\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::goto"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"goto_first\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::goto_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<map::MapCursor<'a, K, V, C>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapCursor<'a, K, V, C>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"map\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<map::MapIter<'a, K, V> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_free\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::is_free"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"entries\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::entries"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"leaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_inner\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::unwrap_inner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_leaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::unwrap_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"unwrap_leaf_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::unwrap_leaf_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"leaf_crit_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::leaf_crit_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_inner_insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::try_inner_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"try_leaf_insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::try_leaf_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"split\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"inner_remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::inner_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"leaf_remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::leaf_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"balance\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F>>::balance"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_pos\"), disambiguator: 0 }]","has_unsafe":false,"name":"node::split_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::Removed as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::Removed as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<node::Removed as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::Removed as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"node::Removed::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"valfmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SetValue as node::ValDisp>::valfmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"valfmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<T as node::ValDisp>::valfmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"node\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<node::NodeData<F> as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":true,"name":"<path::Path<F>>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"first\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"next_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::next_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"prev_leaf\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::prev_leaf"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"goto_subtree_last\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::goto_subtree_last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"set_root_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::set_root_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"leaf_pos\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::leaf_pos"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"leaf_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::leaf_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"leaf_entry\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::leaf_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"at_first_entry\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::at_first_entry"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"value_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::value_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"try_leaf_insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::try_leaf_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"split_and_insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::split_and_insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"current_crit_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::current_crit_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_crit_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::update_crit_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"balance_nodes\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::balance_nodes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"heal_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::heal_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"underflowed_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::underflowed_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"empty_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::empty_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"right_sibling_branch_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::right_sibling_branch_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"left_sibling_branch_level\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::left_sibling_branch_level"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"right_sibling\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::right_sibling"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"update_right_crit_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::update_right_crit_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"path\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"normalize\"), disambiguator: 0 }]","has_unsafe":false,"name":"<path::Path<F>>::normalize"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"alloc_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F>>::alloc_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"free_node\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F>>::free_node"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"free_tree\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F>>::free_tree"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F> as std::ops::Index<Node>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pool\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pool::NodePool<F> as std::ops::IndexMut<Node>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splat_key\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetTypes<K> as Forest>::splat_key"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splat_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetTypes<K> as Forest>::splat_value"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetForest<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetForest<K>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"contains\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::contains"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::Set<K>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clear\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::clear"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"retain\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::retain"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"cursor\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::cursor"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::Set<K> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"is_empty\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::is_empty"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"prev\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::prev"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"elem\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::elem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"goto\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::SetCursor<'a, K, C>>::goto"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"goto_first\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::goto_first"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"insert\"), disambiguator: 0 }]","has_unsafe":true,"name":"<set::SetCursor<'a, K, C>>::insert"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"remove\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetCursor<'a, K, C>>::remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"set\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"<set::SetIter<'a, K> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Comparator\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"search\"), disambiguator: 0 }]","has_unsafe":false,"name":"Comparator::search"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","has_unsafe":false,"name":"<() as Comparator<K>>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as entity::EntityRef>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as entity::EntityRef>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"reserved_value\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as entity::packed_option::ReservedValue>::reserved_value"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<Node as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":true,"name":"<Node as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<SetValue as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"slice_insert\"), disambiguator: 0 }]","has_unsafe":false,"name":"slice_insert"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"slice_shift\"), disambiguator: 0 }]","has_unsafe":false,"name":"slice_shift"}
