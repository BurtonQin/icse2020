{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Stateful\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"boxable\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Stateful::boxable"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<ParseResult<P, S>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or_else\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::or_else"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"or_emit\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::or_emit"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_and_then\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_and_then"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"and_then_try\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::and_then_try"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_and_then_try\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_and_then_try"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"plus\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::plus"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"star\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::star"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map2\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::map2"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map3\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::map3"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map4\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::map4"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"map5\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::map5"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_map"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map2\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_map2"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map3\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_map3"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map4\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_map4"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"try_map5\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Parser::try_map5"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"pipe\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::pipe"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Parser\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"buffer\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::Parser::buffer"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"Committed\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::Committed::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"map\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<MaybeParseResult<P, S>>::map"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<F as Function<S>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"build\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<F as Factory>::build"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<() as Consumer<T>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<std::string::String>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<&'a str>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::string::String as Consumer<char>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<T> as Consumer<&'a [T]>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<T> as Consumer<T>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"accept\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::result::Result<C, E> as Consumer<std::result::Result<T, E>>>::accept"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"character\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::character"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"token\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::token"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 78 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function2<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 77 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function2<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function2<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function2<F> as Function<(S1, S2)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 81 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function3<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 80 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function3<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function3<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function3<F> as Function<((S1, S2), S3)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 84 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function4<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 83 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function4<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function4<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function4<F> as Function<(((S1, S2), S3), S4)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 87 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function5<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 86 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function5<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Function5<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Function5<F> as Function<((((S1, S2), S3), S4), S5)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 90 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Try<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 89 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Try<F> as Function<std::result::Result<S, E>>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Try<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 93 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZip as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 92 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZip as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZip as Function<(std::result::Result<S, E>, T)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 96 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ZipTry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 95 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ZipTry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ZipTry as Function<(S, std::result::Result<T, E>)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 99 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 98 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"apply\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TryZipTry as Function<(std::result::Result<S, E>, std::result::Result<T, E>)>>::apply"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 101 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::MapStatefulParser<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::MapStatefulParser<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::MapStatefulParser<P, F> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::MapStatefulParser<P, F> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 102 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::MapParser<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::MapParser<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::MapParser<P, F> as Uncommitted<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::MapParser<P, F> as Committed<S>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::MapParser<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 104 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::AndThenParser<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 103 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenParser<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::AndThenParser<P, Q> as Committed<S>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::AndThenParser<P, Q> as Uncommitted<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 107 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::AndThenStatefulParser<P, Q, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 106 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenStatefulParser<P, Q, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::AndThenStatefulParser<P, Q, <P as Stateful<S>>::Output> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 25 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::AndThenStatefulParser<P, Q, <P as Stateful<S>>::Output> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 26 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::AndThenParser<P, Q>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 110 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrElseParser<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 109 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseParser<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 28 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrElseParser<P, Q> as Uncommitted<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 29 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseParser<P, Q>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 113 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrElseStatefulParser<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 112 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrElseStatefulParser<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrElseStatefulParser<P, Q> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 30 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrElseStatefulParser<P, Q> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 115 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrEmitStatefulParser<P, F, R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 32 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrEmitStatefulParser<P, F, R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrEmitStatefulParser<P, F, <P as Uncommitted<S>>::State> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 33 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrEmitStatefulParser<P, F, <P as Uncommitted<S>>::State> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 35 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrEmitParser<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 37 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::OrEmitParser<P, F> as Committed<S>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 38 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::OrEmitParser<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 117 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::StarStatefulParser<P, Q, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 116 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarStatefulParser<P, Q, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::StarStatefulParser<P, <P as Uncommitted<S>>::State, T> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 39 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarStatefulParser<P, <P as Uncommitted<S>>::State, T> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 118 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::PlusParser<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 41 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PlusParser<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 43 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PlusParser<P, F> as Uncommitted<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 44 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::PlusParser<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 119 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarParser<P, F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 46 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::StarParser<P, F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 48 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::StarParser<P, F> as Committed<S>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 49 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::StarParser<P, F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 121 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Impossible as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 120 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Impossible as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 50 }, DisambiguatedDefPathData { data: ValueNs(\"cant_happen\"), disambiguator: 0 }]","fn_type":"Safe","name":"parsimonious::impls::Impossible::cant_happen"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 124 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::ImpossibleStatefulParser<T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 123 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ImpossibleStatefulParser<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ImpossibleStatefulParser<T> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 51 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::ImpossibleStatefulParser<T> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 126 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterParser<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterParser<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 55 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::CharacterParser<F> as Uncommitted<&'a str>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 56 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::CharacterParser<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 127 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TokenParser<F> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 58 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TokenParser<F> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 60 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::TokenParser<F> as Uncommitted<impls::Peekable<I>>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 61 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::TokenParser<F>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 129 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::BufferedParser<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 128 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedParser<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 63 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::BufferedParser<P> as Uncommitted<&'a str>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 64 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedParser<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 132 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::BufferedStatefulParser<P> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 131 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedStatefulParser<P> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::BufferedStatefulParser<P> as Stateful<&'a str>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 65 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BufferedStatefulParser<P> as Stateful<&'a str>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"parse_boxable\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::BoxableParser<P> as Boxable<S>>::parse_boxable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 66 }, DisambiguatedDefPathData { data: ValueNs(\"done_boxable\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::BoxableParser<P> as Boxable<S>>::done_boxable"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::impls::<impl Stateful<S> for std::boxed::Box<P>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 67 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"parsimonious::impls::<impl Stateful<S> for std::boxed::Box<P>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 68 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::BoxableParser<P>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 133 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Peekable<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 69 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Peekable<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::Peekable<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 70 }, DisambiguatedDefPathData { data: ValueNs(\"peek\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::Peekable<I>>::peek"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 135 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::IterParser<P, Q, S> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 134 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::IterParser<P, Q, S> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 71 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::IterParser<P, <P as Committed<S>>::State, S> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 72 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::IterParser<P, <P as Committed<S>>::State, S>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 138 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PipeStateful<P, Q, R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 137 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::PipeStateful<P, Q, R> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"parse\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PipeStateful<P, <P as Committed<S>>::State, Q> as Stateful<S>>::parse"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 73 }, DisambiguatedDefPathData { data: ValueNs(\"done\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PipeStateful<P, <P as Committed<S>>::State, Q> as Stateful<S>>::done"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 141 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PipeParser<P, Q> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 140 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::PipeParser<P, Q> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 75 }, DisambiguatedDefPathData { data: ValueNs(\"init\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<impls::PipeParser<P, Q> as Committed<S>>::init"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"impls\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 76 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"<impls::PipeParser<P, Q>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"unEmpty\"), disambiguator: 0 }]","fn_type":"Safe","name":"<MaybeParseResult<P, S>>::unEmpty"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"unAbort\"), disambiguator: 0 }]","fn_type":"Safe","name":"<MaybeParseResult<P, S>>::unAbort"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"unCommit\"), disambiguator: 0 }]","fn_type":"Safe","name":"<MaybeParseResult<P, S>>::unCommit"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"unDone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<P, S>>::unDone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"unContinue\"), disambiguator: 0 }]","fn_type":"Safe","name":"<ParseResult<P, S>>::unContinue"}
