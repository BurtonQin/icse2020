{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SplitMutError as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<SplitMutError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<SplitMutError as std::cmp::Ord>::cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"partial_cmp\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<SplitMutError as std::cmp::PartialOrd>::partial_cmp"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SplitMutError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SplitMutError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"description\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SplitMutError as std::error::Error>::description"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<SplitMutError as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"to_r\"), disambiguator: 0 }]","fn_type":"Safe","name":"splitmut::to_r"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"check_r\"), disambiguator: 0 }]","fn_type":"Safe","name":"splitmut::check_r"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"SplitMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get2_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"splitmut::SplitMut::get2_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"SplitMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get3_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"splitmut::SplitMut::get3_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"SplitMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get4_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"splitmut::SplitMut::get4_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"SplitMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_muts\"), disambiguator: 0 }]","fn_type":"Safe","name":"splitmut::SplitMut::get_muts"}
{"def_path":"[DisambiguatedDefPathData { data: Trait(\"SplitMut\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"splitmut::SplitMut::get_mut_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"at\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<GetMuts<'a, K, V, A>>::at"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<GetMutIter<'a, K, V, A, I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"get1_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a mut [V] as SplitMut<usize, V>>::get1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"get1_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::vec::Vec<V> as SplitMut<usize, V>>::get1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"get1_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::collections::VecDeque<V> as SplitMut<usize, V>>::get1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"get1_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::collections::HashMap<K, V, S> as SplitMut<&'a Q, V>>::get1_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get1_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::collections::BTreeMap<K, V> as SplitMut<&'a Q, V>>::get1_mut"}
