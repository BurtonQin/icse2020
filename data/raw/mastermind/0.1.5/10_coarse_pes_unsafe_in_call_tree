{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"color::Color::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"color\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<color::Color as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peg::Peg as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"peg::Peg::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new_random\"), disambiguator: 0 }]","has_unsafe":true,"name":"peg::Peg::new_random"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"color\"), disambiguator: 0 }]","has_unsafe":false,"name":"peg::Peg::color"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"found\"), disambiguator: 0 }]","has_unsafe":false,"name":"peg::Peg::found"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","has_unsafe":false,"name":"peg::Peg::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peg::Peg as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peg::Peg as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<peg::Peg as std::fmt::Display>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"into\"), disambiguator: 0 }]","has_unsafe":false,"name":"peg::<impl std::convert::Into<peg::Peg> for char>::into"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"peg\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"convert\"), disambiguator: 0 }]","has_unsafe":false,"name":"peg::convert"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"main\"), disambiguator: 0 }]","has_unsafe":true,"name":"main"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"get_num_pegs\"), disambiguator: 0 }]","has_unsafe":false,"name":"get_num_pegs"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"get_answer\"), disambiguator: 0 }]","has_unsafe":true,"name":"get_answer"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"play\"), disambiguator: 0 }]","has_unsafe":false,"name":"play"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"check_answer\"), disambiguator: 0 }]","has_unsafe":false,"name":"check_answer"}
