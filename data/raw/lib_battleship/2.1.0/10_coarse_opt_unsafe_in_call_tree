{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::cell_status::CellStatus as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<common::cell_status::CellStatus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::cell_status::CellStatus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"orientation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::orientation::Orientation as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"orientation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::orientation::Orientation as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"orientation\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<common::orientation::Orientation as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::player::Player as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<common::player::Player as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::player::Player as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","has_unsafe":true,"name":"<common::player::Player as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::player::Player as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"player\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::player::Player::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::ship_type::ShipType as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::ship_type::ShipType as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::ship_type::ShipType as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<common::ship_type::ShipType as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::ship_type::ShipType::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"id\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::ship_type::ShipType::id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"name\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::ship_type::ShipType::name"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"common\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_type\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"length\"), disambiguator: 0 }]","has_unsafe":false,"name":"common::ship_type::ShipType::length"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::GameError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::GameError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::GameError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::ShipTypeError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<results::ShipTypeError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::ShipTypeError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::PlaceError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<results::PlaceError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::PlaceError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::GameStartError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<results::GameStartError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::GameStartError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::ShootOk as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<results::ShootOk as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::ShootOk as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::ShootError as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<results::ShootError as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"results\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<results::ShootError as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::battlefield::Battlefield as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::battlefield::Battlefield as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::battlefield::Battlefield as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::battlefield::Battlefield as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::battlefield::Battlefield::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"init_cells\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::battlefield::Battlefield::init_cells"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_cell\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::battlefield::Battlefield::get_cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut_cell\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::battlefield::Battlefield::get_mut_cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::battlefield::Battlefield as common::dimensional::Dimensional>::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::battlefield::Battlefield as common::dimensional::Dimensional>::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::cell::Cell as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::cell::Cell as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::cell::Cell as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::cell::Cell as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::cell::Cell::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shoot\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::cell::Cell::shoot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_shot\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::cell::Cell::is_shot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"ship_type_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::cell::Cell::ship_type_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"cell\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"set_ship_type_id\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::cell::Cell::set_ship_type_id"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::ship_status::ShipStatus as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::ship_status::ShipStatus as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<battlefield::ship_status::ShipStatus as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"battlefield::ship_status::ShipStatus::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_sum_health\"), disambiguator: 0 }]","has_unsafe":true,"name":"battlefield::ship_status::ShipStatus::get_sum_health"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"battlefield\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"ship_status\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"hit\"), disambiguator: 0 }]","has_unsafe":true,"name":"battlefield::ship_status::ShipStatus::hit"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":true,"name":"<game::Game as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"current_player\"), disambiguator: 0 }]","has_unsafe":false,"name":"game::Game::current_player"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shoot\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::shoot"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_cell\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::get_cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_opponent_cell\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::get_opponent_cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_winner\"), disambiguator: 0 }]","has_unsafe":true,"name":"game::Game::get_winner"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as common::dimensional::Dimensional>::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as common::dimensional::Dimensional>::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"game\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ship_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"<game::Game as common::ship_type_container::ShipTypeContainer>::ship_types"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pregame::PreGame as std::cmp::PartialEq>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"ne\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pregame::PreGame as std::cmp::PartialEq>::ne"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pregame::PreGame as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"add_ship_type\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::add_ship_type"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"place_ship\"), disambiguator: 0 }]","has_unsafe":true,"name":"pregame::PreGame::place_ship"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_ship_type_known\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::assert_ship_type_known"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_ship_not_yet_placed\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::assert_ship_not_yet_placed"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_ship_placement_in_bounds\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::assert_ship_placement_in_bounds"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_affected_cell_coords\"), disambiguator: 0 }]","has_unsafe":false,"name":"pregame::PreGame::get_affected_cell_coords"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"assert_cells_free\"), disambiguator: 0 }]","has_unsafe":true,"name":"pregame::PreGame::assert_cells_free"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"do_place_ship\"), disambiguator: 0 }]","has_unsafe":true,"name":"pregame::PreGame::do_place_ship"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"get_cell\"), disambiguator: 0 }]","has_unsafe":true,"name":"pregame::PreGame::get_cell"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"width\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pregame::PreGame as common::dimensional::Dimensional>::width"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"height\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pregame::PreGame as common::dimensional::Dimensional>::height"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"pregame\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"ship_types\"), disambiguator: 0 }]","has_unsafe":false,"name":"<pregame::PreGame as common::ship_type_container::ShipTypeContainer>::ship_types"}
