{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IndexRange\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::range::IndexRange::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"IndexRange\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::range::IndexRange::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::ops::RangeFrom<T> as range::IndexRange<T>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::ops::RangeTo<T> as range::IndexRange<T>>::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"start\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::ops::Range<T> as range::IndexRange<T>>::start"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"range\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"end\"), disambiguator: 0 }]","fn_type":"Safe","name":"<std::ops::Range<T> as range::IndexRange<T>>::end"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fix_impl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"fix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::fix_impl::fix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fix_impl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"call\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<fix_impl::Fix<'a, T, R>>::call"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"fix_impl\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<fix_impl::Fix<'a, T, R> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<char::EncodeUtf8Error as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<char::EncodeUtf8Error as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"char\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"encode_utf8\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::char::encode_utf8"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rep\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrExt>::rep"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"append\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrExt>::append"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"prefixes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrExt>::prefixes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"suffixes\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrExt>::suffixes"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"substrings\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrExt>::substrings"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"is_acceptable_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrExt>::is_acceptable_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"get_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<str as string::StrSlice>::get_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::Prefixes<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::Prefixes<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::Suffixes<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::Suffixes<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::Substrings<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::Substrings<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"insert_str\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::string::String as string::StringExt>::insert_str"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"char_chunks\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrChunksWindows>::char_chunks"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"char_windows\"), disambiguator: 0 }]","fn_type":"Safe","name":"<str as string::StrChunksWindows>::char_windows"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharChunks<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharChunks<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::string::CharChunks::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharChunks<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharWindows<'a> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharWindows<'a> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::string::CharWindows::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"char_get\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::string::char_get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharWindows<'a> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharStr as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<string::CharStr as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::string::CharStr::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"string\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"deref\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<string::CharStr as std::ops::Deref>::deref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"vec\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::vec::vec"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"splice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<T> as vec::VecExt<T>>::splice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"retain_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<T> as vec::VecExt<T>>::retain_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find_remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<T> as vec::VecFindRemove>::find_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"vec\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rfind_remove\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<std::vec::Vec<T> as vec::VecFindRemove>::rfind_remove"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::unalign::UnalignedIter<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::unalign::UnalignedIter<'a, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::unalign::UnalignedIter<'a, T>>::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"tail\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::unalign::UnalignedIter<'a, T>>::tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"has_tail\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::unalign::UnalignedIter<'a, T>>::has_tail"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"peek_next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::unalign::UnalignedIter<'a, T>>::peek_next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"unalign\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::unalign::UnalignedIter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::iter::SliceCopyIter<'a, T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::iter::SliceCopyIter<'a, T> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"into_raw\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::iter::SliceCopyIter<'a, T>>::into_raw"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::iter::SliceCopyIter<'a, T> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::iter::SliceCopyIter<'a, T> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"count\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::iter::SliceCopyIter<'a, T> as std::iter::Iterator>::count"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 3 }, DisambiguatedDefPathData { data: ValueNs(\"last\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::iter::SliceCopyIter<'a, T> as std::iter::Iterator>::last"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::iter::SliceCopyIter<'a, T> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::iter::SliceCopyIter<'a, T> as std::convert::From<&'a [T]>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Module(\"iter\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::iter::SliceCopyIter<'a, T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"shared_prefix\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::slice::shared_prefix"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rotate_left\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::slice::rotate_left"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[T] as slice::SliceFind>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"rfind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[T] as slice::SliceFind>::rfind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"find\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as slice::SliceFind>::find"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 1 }, DisambiguatedDefPathData { data: ValueNs(\"rfind\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as slice::SliceFind>::rfind"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"find_split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[T] as slice::SliceFindSplit>::find_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"find_split_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[T] as slice::SliceFindSplit>::find_split_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"rfind_split\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[T] as slice::SliceFindSplit>::rfind_split"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 2 }, DisambiguatedDefPathData { data: ValueNs(\"rfind_split_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<[T] as slice::SliceFindSplit>::rfind_split_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Trait(\"SliceIterExt\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"mend_slices\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::slice::SliceIterExt::mend_slices"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 4 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::MendSlices<I> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 5 }, DisambiguatedDefPathData { data: ValueNs(\"new\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::MendSlices<I>>::new"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::MendSlices<I> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 6 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::MendSlices<I> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"mend\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a [T] as slice::MendSlice>::mend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"mend\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut [T] as slice::MendSlice>::mend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"mend\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a str as slice::MendSlice>::mend"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"split_aligned_for\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::slice::split_aligned_for"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 53 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 52 }, DisambiguatedDefPathData { data: ValueNs(\"assert_receiver_is_total_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T> as std::cmp::Eq>::assert_receiver_is_total_eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"raw_index_no_wrap\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::raw_index_no_wrap"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"raw_index\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::raw_index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"inner_ref\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::inner_ref"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"inner_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::inner_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"into_boxed_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T>>::into_boxed_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"iter_mut\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T>>::iter_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"split_at\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T>>::split_at"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"split_at_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T>>::split_at_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T> as std::cmp::PartialEq<slice::RevSlice<U>>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"<slice::RevSlice<T> as std::cmp::PartialEq<[U]>>::eq"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 13 }, DisambiguatedDefPathData { data: ValueNs(\"hash\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as std::hash::Hash>::hash"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a slice::RevSlice<T> as std::convert::From<&'a Slice>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut slice::RevSlice<T> as std::convert::From<&'a mut Slice>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::slice::<impl std::convert::From<std::boxed::Box<[T]>> for std::boxed::Box<slice::RevSlice<T>>>::from"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as std::ops::IndexMut<usize>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 19 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a slice::RevSlice<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"default\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<&'a mut slice::RevSlice<T> as std::default::Default>::default"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as std::ops::Index<R>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 22 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<slice::RevSlice<T> as std::ops::IndexMut<R>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 23 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a slice::RevSlice<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"slice\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 24 }, DisambiguatedDefPathData { data: ValueNs(\"into_iter\"), disambiguator: 0 }]","fn_type":"Safe","name":"<&'a mut slice::RevSlice<T> as std::iter::IntoIterator>::into_iter"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: ValueNs(\"div_rem\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::stride::div_rem"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A>>::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"from_stride\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A>>::from_stride"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"swap_ends\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A>>::swap_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<stride::Stride<'a, A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 10 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 11 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<stride::Stride<'a, A> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 12 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 14 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A> as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 15 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::Stride<'a, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A>>::from_slice"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"from_stride\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A>>::from_stride"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"swap_ends\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A>>::swap_ends"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"len\"), disambiguator: 0 }]","fn_type":"Safe","name":"<stride::StrideMut<'a, A>>::len"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 16 }, DisambiguatedDefPathData { data: ValueNs(\"get\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A>>::get"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"next\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A> as std::iter::Iterator>::next"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 17 }, DisambiguatedDefPathData { data: ValueNs(\"size_hint\"), disambiguator: 0 }]","fn_type":"Safe","name":"<stride::StrideMut<'a, A> as std::iter::Iterator>::size_hint"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 18 }, DisambiguatedDefPathData { data: ValueNs(\"next_back\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A> as std::iter::DoubleEndedIterator>::next_back"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 20 }, DisambiguatedDefPathData { data: ValueNs(\"index\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A> as std::ops::Index<usize>>::index"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 21 }, DisambiguatedDefPathData { data: ValueNs(\"fmt\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A> as std::fmt::Debug>::fmt"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 7 }, DisambiguatedDefPathData { data: ValueNs(\"clone\"), disambiguator: 0 }]","fn_type":"Safe","name":"<stride::Stride<'a, A> as std::clone::Clone>::clone"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 8 }, DisambiguatedDefPathData { data: ValueNs(\"get_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A>>::get_mut"}
{"def_path":"[DisambiguatedDefPathData { data: Module(\"stride\"), disambiguator: 0 }, DisambiguatedDefPathData { data: Impl, disambiguator: 9 }, DisambiguatedDefPathData { data: ValueNs(\"index_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"<stride::StrideMut<'a, A> as std::ops::IndexMut<usize>>::index_mut"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"ref_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::ref_eq"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"ptr_eq\"), disambiguator: 0 }]","fn_type":"Safe","name":"odds::ptr_eq"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"ref_slice\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::ref_slice"}
{"def_path":"[DisambiguatedDefPathData { data: ValueNs(\"ref_slice_mut\"), disambiguator: 0 }]","fn_type":"NormalNotSafe","name":"odds::ref_slice_mut"}
